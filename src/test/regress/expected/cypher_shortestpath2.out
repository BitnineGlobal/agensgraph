-- PREPARE
SET client_min_messages TO WARNING;
SET work_mem TO '1MB';
DROP GRAPH IF EXISTS shortestpath CASCADE;
CREATE OR REPLACE FUNCTION ids(vertex[]) RETURNS int[] AS $$
DECLARE
  v vertex;
  vids int[];
BEGIN
  IF $1 IS NULL THEN
    RETURN ARRAY[]::int[];
  END IF;
  FOREACH v IN ARRAY $1 LOOP
    vids = array_append(vids, (v->>'id')::int);
  END LOOP;
  RETURN vids;
END;
$$ LANGUAGE plpgsql;
create graph shortestpath;
create vlabel vp;
create vlabel vc inherits ( vp );
create vlabel o;
create vlabel s;
create vlabel c;
create vlabel l;
create vlabel r;
create elabel ep;
create elabel ec inherits ( ep );
create elabel e;
-- Neo4j
-- create index on :o ( id );
-- create index on :s ( id );
-- create index on :c ( id );
-- create index on :l ( id );
-- create index on :r ( id );
-- create index on :e ( id );
create property index on o ( id );
create property index on s ( id );
create property index on c ( id );
create property index on l ( id );
create property index on r ( id );
create property index on e ( id );
-- Inherit
create (:vc{id:1})-[:ec]->(:vc{id:2});
-- Orphan
create (:o{id:1})
create (:o{id:2})
create (:o{id:3})
create (:o{id:4})
create (:o{id:5})
create (:o{id:6})
create (:o{id:7})
create (:o{id:8})
create (:o{id:9});
-- Unforked
create (:s{id:1})
create (:s{id:2})
create (:s{id:3})
create (:s{id:4})
create (:s{id:5})
create (:s{id:6})
create (:s{id:7})
create (:s{id:8})
create (:s{id:9})
create (:s{id:10})
create (:s{id:11})
create (:s{id:12})
create (:s{id:13})
create (:s{id:14})
create (:s{id:15})
create (:s{id:16})
create (:s{id:17})
create (:s{id:18})
create (:s{id:19});
match (s1:s), (s2:s{id:s1.id+1})
create (s1)-[:e{id:'s:'+s1.id+'->s:'+s2.id}]->(s2);
-- No Labels
match shortestpath( (a)-[b]->(c) ) return a.id as a, c.id as c order by a, c;
 a  | c  
----+----
 1  | 2
 1  | 2
 2  | 3
 3  | 4
 4  | 5
 5  | 6
 6  | 7
 7  | 8
 8  | 9
 9  | 10
 10 | 11
 11 | 12
 12 | 13
 13 | 14
 14 | 15
 15 | 16
 16 | 17
 17 | 18
 18 | 19
(19 rows)

match p = shortestpath( (a)-[b]->(c) ) return ids(nodes(p)) as p, a.id as a, c.id as c order by a, c;
    p    | a  | c  
---------+----+----
 {1,2}   | 1  | 2
 {1,2}   | 1  | 2
 {2,3}   | 2  | 3
 {3,4}   | 3  | 4
 {4,5}   | 4  | 5
 {5,6}   | 5  | 6
 {6,7}   | 6  | 7
 {7,8}   | 7  | 8
 {8,9}   | 8  | 9
 {9,10}  | 9  | 10
 {10,11} | 10 | 11
 {11,12} | 11 | 12
 {12,13} | 12 | 13
 {13,14} | 13 | 14
 {14,15} | 14 | 15
 {15,16} | 15 | 16
 {16,17} | 16 | 17
 {17,18} | 17 | 18
 {18,19} | 18 | 19
(19 rows)

match allshortestpaths( (a)-[b]->(c) ) return a.id as a, c.id as c order by a, c;
 a  | c  
----+----
 1  | 2
 1  | 2
 2  | 3
 3  | 4
 4  | 5
 5  | 6
 6  | 7
 7  | 8
 8  | 9
 9  | 10
 10 | 11
 11 | 12
 12 | 13
 13 | 14
 14 | 15
 15 | 16
 16 | 17
 17 | 18
 18 | 19
(19 rows)

match p = allshortestpaths( (a)-[b]->(c) ) return ids(nodes(p)) as p, a.id as a, c.id as c order by a, c;
    p    | a  | c  
---------+----+----
 {1,2}   | 1  | 2
 {1,2}   | 1  | 2
 {2,3}   | 2  | 3
 {3,4}   | 3  | 4
 {4,5}   | 4  | 5
 {5,6}   | 5  | 6
 {6,7}   | 6  | 7
 {7,8}   | 7  | 8
 {8,9}   | 8  | 9
 {9,10}  | 9  | 10
 {10,11} | 10 | 11
 {11,12} | 11 | 12
 {12,13} | 12 | 13
 {13,14} | 13 | 14
 {14,15} | 14 | 15
 {15,16} | 15 | 16
 {16,17} | 16 | 17
 {17,18} | 17 | 18
 {18,19} | 18 | 19
(19 rows)

-- Cycle
match (o:o)
create (:c{id:10+o.id})
create (:c{id:20+o.id})
create (:c{id:30+o.id})
create (:c{id:40+o.id})
create (:c{id:50+o.id})
create (:c{id:60+o.id})
create (:c{id:70+o.id})
create (:c{id:80+o.id})
create (:c{id:90+o.id});
match (c1:c), (c2:c)
where c1.id >= 11 and c1.id <= 19 and c2.id >= 11 and c2.id <= 19
create (c1)-[:e{id:'c:'+c1.id+'->c:'+c2.id}]->(c2);
match (c1:c), (c2:c)
where c1.id >= 21 and c1.id <= 29 and c2.id >= 21 and c2.id <= 29
create (c1)-[:e{id:'c:'+c1.id+'->c:'+c2.id}]->(c2);
match (c1:c), (c2:c)
where c1.id >= 31 and c1.id <= 39 and c2.id >= 31 and c2.id <= 39 and c1.id <> c2.id
create (c1)-[:e{id:'c:'+c1.id+'->c:'+c2.id}]->(c2);
match (c1:c), (c2:c)
where c1.id >= 41 and c1.id <= 49 and c2.id >= 41 and c2.id <= 49 and c1.id <> c2.id
create (c1)-[:e{id:'c:'+c1.id+'->c:'+c2.id}]->(c2);
match (c1:c), (c2:c)
where c1.id >= 51 and c1.id <= 59 and c2.id >= 51 and c2.id <= 59 and c1.id <> c2.id
create (c1)-[:e{id:'c:'+c1.id+'->c:'+c2.id}]->(c2);
match (c1:c), (c2:c)
where c1.id >= 61 and c1.id <= 69 and c2.id >= 61 and c2.id <= 69 and c1.id <> c2.id
create (c1)-[:e{id:'c:'+c1.id+'->c:'+c2.id}]->(c2);
match (c1:c), (c2:c)
where c1.id >= 71 and c1.id <= 79 and c2.id >= 71 and c2.id <= 79 and c1.id <> c2.id
create (c1)-[:e{id:'c:'+c1.id+'->c:'+c2.id}]->(c2);
match (c1:c), (c2:c)
where c1.id >= 81 and c1.id <= 89 and c2.id >= 81 and c2.id <= 89 and c1.id <> c2.id
create (c1)-[:e{id:'c:'+c1.id+'->c:'+c2.id}]->(c2);
match (c1:c), (c2:c)
where c1.id >= 91 and c1.id <= 99 and c2.id >= 91 and c2.id <= 99 and c1.id <> c2.id
create (c1)-[:e{id:'c:'+c1.id+'->c:'+c2.id}]->(c2);
match (c1:c{id:59}), (c2:c{id:69})
create (c1)-[:e{id:'c:'+c1.id+'->c'+c2.id}]->(c2)
create (c2)-[:e{id:'c:'+c2.id+'->c'+c1.id}]->(c1);
match (c1:c{id:79}), (c2:c{id:89}), (c3:c{id:99})
create (c1)-[:e{id:'c:'+c1.id+'->c'+c2.id}]->(c2)
create (c2)-[:e{id:'c:'+c2.id+'->c'+c3.id}]->(c3)
create (c3)-[:e{id:'c:'+c3.id+'->c'+c1.id}]->(c1);
-- Spread
match (o:o) create (:l{id:o.id});
match (n:l) where n.id >= 1 and n.id <= 9
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+1)}]->(:l{id:n.id*10+1})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+2)}]->(:l{id:n.id*10+2})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+3)}]->(:l{id:n.id*10+3})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+4)}]->(:l{id:n.id*10+4})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+5)}]->(:l{id:n.id*10+5})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+6)}]->(:l{id:n.id*10+6})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+7)}]->(:l{id:n.id*10+7})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+8)}]->(:l{id:n.id*10+8})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+9)}]->(:l{id:n.id*10+9});
match (n:l) where n.id >= 11 and n.id <= 99
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+1)}]->(:l{id:n.id*10+1})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+2)}]->(:l{id:n.id*10+2})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+3)}]->(:l{id:n.id*10+3})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+4)}]->(:l{id:n.id*10+4})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+5)}]->(:l{id:n.id*10+5})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+6)}]->(:l{id:n.id*10+6})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+7)}]->(:l{id:n.id*10+7})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+8)}]->(:l{id:n.id*10+8})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+9)}]->(:l{id:n.id*10+9});
match (n:l) where n.id >= 111 and n.id <= 999
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+1)}]->(:l{id:n.id*10+1})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+2)}]->(:l{id:n.id*10+2})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+3)}]->(:l{id:n.id*10+3})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+4)}]->(:l{id:n.id*10+4})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+5)}]->(:l{id:n.id*10+5})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+6)}]->(:l{id:n.id*10+6})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+7)}]->(:l{id:n.id*10+7})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+8)}]->(:l{id:n.id*10+8})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+9)}]->(:l{id:n.id*10+9});
match (n:l) where n.id >= 1111 and n.id <= 9999
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+1)}]->(:l{id:n.id*10+1})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+2)}]->(:l{id:n.id*10+2})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+3)}]->(:l{id:n.id*10+3})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+4)}]->(:l{id:n.id*10+4})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+5)}]->(:l{id:n.id*10+5})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+6)}]->(:l{id:n.id*10+6})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+7)}]->(:l{id:n.id*10+7})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+8)}]->(:l{id:n.id*10+8})
create (n)-[:e{id:'l:'+n.id+'->l:'+(n.id*10+9)}]->(:l{id:n.id*10+9});
-- Convergence
match (o:o) create (:r{id:o.id});
match (n:r) where n.id >= 1 and n.id <= 9
create (:r{id:n.id*10+1})-[:e{id:'r:'+(n.id*10+1)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+2})-[:e{id:'r:'+(n.id*10+2)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+3})-[:e{id:'r:'+(n.id*10+3)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+4})-[:e{id:'r:'+(n.id*10+4)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+5})-[:e{id:'r:'+(n.id*10+5)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+6})-[:e{id:'r:'+(n.id*10+6)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+7})-[:e{id:'r:'+(n.id*10+7)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+8})-[:e{id:'r:'+(n.id*10+8)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+9})-[:e{id:'r:'+(n.id*10+9)+'->r:'+n.id}]->(n);
match (n:r) where n.id >= 11 and n.id <= 99
create (:r{id:n.id*10+1})-[:e{id:'r:'+(n.id*10+1)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+2})-[:e{id:'r:'+(n.id*10+2)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+3})-[:e{id:'r:'+(n.id*10+3)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+4})-[:e{id:'r:'+(n.id*10+4)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+5})-[:e{id:'r:'+(n.id*10+5)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+6})-[:e{id:'r:'+(n.id*10+6)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+7})-[:e{id:'r:'+(n.id*10+7)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+8})-[:e{id:'r:'+(n.id*10+8)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+9})-[:e{id:'r:'+(n.id*10+9)+'->r:'+n.id}]->(n);
match (n:r) where n.id >= 111 and n.id <= 999
create (:r{id:n.id*10+1})-[:e{id:'r:'+(n.id*10+1)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+2})-[:e{id:'r:'+(n.id*10+2)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+3})-[:e{id:'r:'+(n.id*10+3)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+4})-[:e{id:'r:'+(n.id*10+4)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+5})-[:e{id:'r:'+(n.id*10+5)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+6})-[:e{id:'r:'+(n.id*10+6)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+7})-[:e{id:'r:'+(n.id*10+7)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+8})-[:e{id:'r:'+(n.id*10+8)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+9})-[:e{id:'r:'+(n.id*10+9)+'->r:'+n.id}]->(n);
match (n:r) where n.id >= 1111 and n.id <= 9999
create (:r{id:n.id*10+1})-[:e{id:'r:'+(n.id*10+1)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+2})-[:e{id:'r:'+(n.id*10+2)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+3})-[:e{id:'r:'+(n.id*10+3)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+4})-[:e{id:'r:'+(n.id*10+4)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+5})-[:e{id:'r:'+(n.id*10+5)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+6})-[:e{id:'r:'+(n.id*10+6)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+7})-[:e{id:'r:'+(n.id*10+7)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+8})-[:e{id:'r:'+(n.id*10+8)+'->r:'+n.id}]->(n)
create (:r{id:n.id*10+9})-[:e{id:'r:'+(n.id*10+9)+'->r:'+n.id}]->(n);
-- Vibration
match (l:l), (r:r{id:l.id}) where l.id = 1 and l.id <= 1
create(l)-[:e{id:'l:'+l.id+'->r:'+r.id}]->(r);
match (l:l), (r:r{id:l.id}) where l.id >= 22 and l.id <= 28
create(l)-[:e{id:'l:'+l.id+'->r:'+r.id}]->(r);
match (l:l), (r:r{id:l.id}) where l.id >= 321 and l.id <= 389
create(l)-[:e{id:'l:'+l.id+'->r:'+r.id}]->(r);
match (l:l), (r:r{id:l.id}) where l.id >= 4211 and l.id <= 4899
create(l)-[:e{id:'l:'+l.id+'->r:'+r.id}]->(r);
match (l:l), (r:r{id:l.id}) where l.id >= 52111 and l.id <= 58999
create(l)-[:e{id:'l:'+l.id+'->r:'+r.id}]->(r);
match (l:l), (r:r{id:l.id}) where l.id = 6
create(r)-[:e{id:'r:'+l.id+'->l:'+r.id}]->(l);
match (l:l), (r:r{id:l.id}) where l.id >= 81111 and l.id <= 89999
create(l)-[:e{id:'l:'+l.id+'->r:'+r.id}]->(r);
match (r:r{id:8}), (l:l{id:9})
create(r)-[:e{id:'r:'+r.id+'->l:'+l.id}]->(l);
match (l:l), (r:r{id:l.id}) where l.id >= 91111 and l.id <= 99999
create(l)-[:e{id:'l:'+l.id+'->r:'+r.id}]->(r);
-- VACUUM
vacuum full analyze shortestpath.vp;
vacuum full analyze shortestpath.vc;
vacuum full analyze shortestpath.o;
vacuum full analyze shortestpath.s;
vacuum full analyze shortestpath.c;
vacuum full analyze shortestpath.l;
vacuum full analyze shortestpath.r;
vacuum full analyze shortestpath.ep;
vacuum full analyze shortestpath.ec;
vacuum full analyze shortestpath.e;
-- Orphan
match p = shortestpath( (o1:o)-[:e*0..]->(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
         p         
-------------------
 [o[5.1]{"id": 1}]
(1 row)

match p = shortestpath( (o1:o)-[:e*1..]->(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
 p 
---
(0 rows)

match p = shortestpath( (o1:o)-[:e*0..]->(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match p = shortestpath( (o1:o)-[:e*1..]->(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match p = allshortestpaths( (o1:o)-[:e*0..]->(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
         p         
-------------------
 [o[5.1]{"id": 1}]
(1 row)

match p = allshortestpaths( (o1:o)-[:e*1..]->(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
 p 
---
(0 rows)

match p = allshortestpaths( (o1:o)-[:e*0..]->(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match p = allshortestpaths( (o1:o)-[:e*1..]->(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match p = shortestpath( (o1:o)<-[:e*0..]-(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
         p         
-------------------
 [o[5.1]{"id": 1}]
(1 row)

match p = shortestpath( (o1:o)<-[:e*1..]-(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
 p 
---
(0 rows)

match p = shortestpath( (o1:o)<-[:e*0..]-(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match p = shortestpath( (o1:o)<-[:e*1..]-(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match p = allshortestpaths( (o1:o)<-[:e*0..]-(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
         p         
-------------------
 [o[5.1]{"id": 1}]
(1 row)

match p = allshortestpaths( (o1:o)<-[:e*1..]-(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
 p 
---
(0 rows)

match p = allshortestpaths( (o1:o)<-[:e*0..]-(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match p = allshortestpaths( (o1:o)<-[:e*1..]-(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match p = shortestpath( (o1:o)-[:e*0..]-(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
         p         
-------------------
 [o[5.1]{"id": 1}]
(1 row)

match p = shortestpath( (o1:o)-[:e*1..]-(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
 p 
---
(0 rows)

match p = shortestpath( (o1:o)-[:e*0..]-(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match p = shortestpath( (o1:o)-[:e*1..]-(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match p = allshortestpaths( (o1:o)-[:e*0..]-(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
         p         
-------------------
 [o[5.1]{"id": 1}]
(1 row)

match p = allshortestpaths( (o1:o)-[:e*1..]-(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
 p 
---
(0 rows)

match p = allshortestpaths( (o1:o)-[:e*0..]-(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match p = allshortestpaths( (o1:o)-[:e*1..]-(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match p = shortestpath( (o1:o)<-[:e*0..]->(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
         p         
-------------------
 [o[5.1]{"id": 1}]
(1 row)

match p = shortestpath( (o1:o)<-[:e*1..]->(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
 p 
---
(0 rows)

match p = shortestpath( (o1:o)<-[:e*0..]->(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match p = shortestpath( (o1:o)<-[:e*1..]->(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match p = allshortestpaths( (o1:o)<-[:e*0..]->(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
         p         
-------------------
 [o[5.1]{"id": 1}]
(1 row)

match p = allshortestpaths( (o1:o)<-[:e*1..]->(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
 p 
---
(0 rows)

match p = allshortestpaths( (o1:o)<-[:e*0..]->(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match p = allshortestpaths( (o1:o)<-[:e*1..]->(o2:o) ) where o1.id = 1 and o2.id = 2 return p;
 p 
---
(0 rows)

match (o1:o), (o2:o) where o1.id >= 1 and o1.id <= 2 and o2.id >= 1 and o2.id <= 2 return o1.id as o1id, o2.id as o2id, shortestpath((o1)-[:e]->(o2)) order by o1id, o2id;
 o1id | o2id | ?column? 
------+------+----------
 1    | 1    | 
 1    | 2    | 
 2    | 1    | 
 2    | 2    | 
(4 rows)

match (o1:o), (o2:o) where o1.id >= 1 and o1.id <= 2 and o2.id >= 1 and o2.id <= 2 return o1.id as o1id, o2.id as o2id, shortestpath((o1)-[:e*]->(o2)) order by o1id, o2id;
 o1id | o2id | ?column? 
------+------+----------
 1    | 1    | 
 1    | 2    | 
 2    | 1    | 
 2    | 2    | 
(4 rows)

match (o1:o), (o2:o) where o1.id >= 1 and o1.id <= 2 and o2.id >= 1 and o2.id <= 2 return o1.id as o1id, o2.id as o2id, shortestpath((o1)-[:e*0..]->(o2)) order by o1id, o2id;
 o1id | o2id |     ?column?      
------+------+-------------------
 1    | 1    | [o[5.1]{"id": 1}]
 1    | 2    | 
 2    | 1    | 
 2    | 2    | [o[5.2]{"id": 2}]
(4 rows)

match (o1:o), (o2:o) where o1.id >= 1 and o1.id <= 2 and o2.id >= 1 and o2.id <= 2 return o1.id as o1id, o2.id as o2id, allshortestpaths((o1)-[:e]->(o2)) order by o1id, o2id;
 o1id | o2id | ?column? 
------+------+----------
 1    | 1    | 
 1    | 2    | 
 2    | 1    | 
 2    | 2    | 
(4 rows)

match (o1:o), (o2:o) where o1.id >= 1 and o1.id <= 2 and o2.id >= 1 and o2.id <= 2 return o1.id as o1id, o2.id as o2id, allshortestpaths((o1)-[:e*]->(o2)) order by o1id, o2id;
 o1id | o2id | ?column? 
------+------+----------
 1    | 1    | 
 1    | 2    | 
 2    | 1    | 
 2    | 2    | 
(4 rows)

match (o1:o), (o2:o) where o1.id >= 1 and o1.id <= 2 and o2.id >= 1 and o2.id <= 2 return o1.id as o1id, o2.id as o2id, allshortestpaths((o1)-[:e*0..]->(o2)) order by o1id, o2id;
 o1id | o2id |        ?column?         
------+------+-------------------------
 1    | 1    | {"[o[5.1]{\"id\": 1}]"}
 1    | 2    | 
 2    | 1    | 
 2    | 2    | {"[o[5.2]{\"id\": 2}]"}
(4 rows)

-- Unforked
match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e]->(s2)))) order by s1id, s2id;
 s1id | s2id |   ids   
------+------+---------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {}
 1    | 4    | {}
 1    | 5    | {}
 1    | 6    | {}
 1    | 7    | {}
 1    | 8    | {}
 1    | 9    | {}
 1    | 10   | {}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {}
 2    | 5    | {}
 2    | 6    | {}
 2    | 7    | {}
 2    | 8    | {}
 2    | 9    | {}
 2    | 10   | {}
 2    | 11   | {}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {}
 3    | 6    | {}
 3    | 7    | {}
 3    | 8    | {}
 3    | 9    | {}
 3    | 10   | {}
 3    | 11   | {}
 3    | 12   | {}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {}
 4    | 7    | {}
 4    | 8    | {}
 4    | 9    | {}
 4    | 10   | {}
 4    | 11   | {}
 4    | 12   | {}
 4    | 13   | {}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {}
 5    | 8    | {}
 5    | 9    | {}
 5    | 10   | {}
 5    | 11   | {}
 5    | 12   | {}
 5    | 13   | {}
 5    | 14   | {}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {}
 6    | 9    | {}
 6    | 10   | {}
 6    | 11   | {}
 6    | 12   | {}
 6    | 13   | {}
 6    | 14   | {}
 6    | 15   | {}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {}
 7    | 10   | {}
 7    | 11   | {}
 7    | 12   | {}
 7    | 13   | {}
 7    | 14   | {}
 7    | 15   | {}
 7    | 16   | {}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {}
 8    | 11   | {}
 8    | 12   | {}
 8    | 13   | {}
 8    | 14   | {}
 8    | 15   | {}
 8    | 16   | {}
 8    | 17   | {}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {}
 9    | 12   | {}
 9    | 13   | {}
 9    | 14   | {}
 9    | 15   | {}
 9    | 16   | {}
 9    | 17   | {}
 9    | 18   | {}
 9    | 19   | {}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {}
 10   | 13   | {}
 10   | 14   | {}
 10   | 15   | {}
 10   | 16   | {}
 10   | 17   | {}
 10   | 18   | {}
 10   | 19   | {}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {}
 11   | 14   | {}
 11   | 15   | {}
 11   | 16   | {}
 11   | 17   | {}
 11   | 18   | {}
 11   | 19   | {}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {}
 12   | 15   | {}
 12   | 16   | {}
 12   | 17   | {}
 12   | 18   | {}
 12   | 19   | {}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {}
 13   | 16   | {}
 13   | 17   | {}
 13   | 18   | {}
 13   | 19   | {}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {}
 14   | 17   | {}
 14   | 18   | {}
 14   | 19   | {}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {}
 15   | 18   | {}
 15   | 19   | {}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {}
 16   | 19   | {}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*0..]->(s2)))) order by s1id, s2id;
 s1id | s2id |                        ids                        
------+------+---------------------------------------------------
 1    | 1    | {1}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {1,2,3,4,5,6,7,8,9}
 1    | 10   | {1,2,3,4,5,6,7,8,9,10}
 1    | 11   | {1,2,3,4,5,6,7,8,9,10,11}
 1    | 12   | {1,2,3,4,5,6,7,8,9,10,11,12}
 1    | 13   | {1,2,3,4,5,6,7,8,9,10,11,12,13}
 1    | 14   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14}
 1    | 15   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 1    | 16   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 1    | 17   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 1    | 18   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 1    | 19   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 2    | 1    | {}
 2    | 2    | {2}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {2,3,4,5,6,7,8,9,10}
 2    | 11   | {2,3,4,5,6,7,8,9,10,11}
 2    | 12   | {2,3,4,5,6,7,8,9,10,11,12}
 2    | 13   | {2,3,4,5,6,7,8,9,10,11,12,13}
 2    | 14   | {2,3,4,5,6,7,8,9,10,11,12,13,14}
 2    | 15   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 2    | 16   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 2    | 17   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 2    | 18   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 2    | 19   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {3}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {3,4,5,6,7,8,9,10,11}
 3    | 12   | {3,4,5,6,7,8,9,10,11,12}
 3    | 13   | {3,4,5,6,7,8,9,10,11,12,13}
 3    | 14   | {3,4,5,6,7,8,9,10,11,12,13,14}
 3    | 15   | {3,4,5,6,7,8,9,10,11,12,13,14,15}
 3    | 16   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 3    | 17   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 3    | 18   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 3    | 19   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {4}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {4,5,6,7,8,9,10,11,12}
 4    | 13   | {4,5,6,7,8,9,10,11,12,13}
 4    | 14   | {4,5,6,7,8,9,10,11,12,13,14}
 4    | 15   | {4,5,6,7,8,9,10,11,12,13,14,15}
 4    | 16   | {4,5,6,7,8,9,10,11,12,13,14,15,16}
 4    | 17   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 4    | 18   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 4    | 19   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {5}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {5,6,7,8,9,10,11,12,13}
 5    | 14   | {5,6,7,8,9,10,11,12,13,14}
 5    | 15   | {5,6,7,8,9,10,11,12,13,14,15}
 5    | 16   | {5,6,7,8,9,10,11,12,13,14,15,16}
 5    | 17   | {5,6,7,8,9,10,11,12,13,14,15,16,17}
 5    | 18   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 5    | 19   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {6}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {6,7,8,9,10,11,12,13,14}
 6    | 15   | {6,7,8,9,10,11,12,13,14,15}
 6    | 16   | {6,7,8,9,10,11,12,13,14,15,16}
 6    | 17   | {6,7,8,9,10,11,12,13,14,15,16,17}
 6    | 18   | {6,7,8,9,10,11,12,13,14,15,16,17,18}
 6    | 19   | {6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {7}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {7,8,9,10,11,12,13,14,15}
 7    | 16   | {7,8,9,10,11,12,13,14,15,16}
 7    | 17   | {7,8,9,10,11,12,13,14,15,16,17}
 7    | 18   | {7,8,9,10,11,12,13,14,15,16,17,18}
 7    | 19   | {7,8,9,10,11,12,13,14,15,16,17,18,19}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {8}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {8,9,10,11,12,13,14,15,16}
 8    | 17   | {8,9,10,11,12,13,14,15,16,17}
 8    | 18   | {8,9,10,11,12,13,14,15,16,17,18}
 8    | 19   | {8,9,10,11,12,13,14,15,16,17,18,19}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {9}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {9,10,11,12,13,14,15,16,17}
 9    | 18   | {9,10,11,12,13,14,15,16,17,18}
 9    | 19   | {9,10,11,12,13,14,15,16,17,18,19}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {10}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {10,11,12,13,14,15,16,17,18}
 10   | 19   | {10,11,12,13,14,15,16,17,18,19}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {11}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {11,12,13,14,15,16,17,18,19}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {12}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {13}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {14}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {15}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {16}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {17}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {18}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {19}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*]->(s2)))) order by s1id, s2id;
 s1id | s2id |                        ids                        
------+------+---------------------------------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {1,2,3,4,5,6,7,8,9}
 1    | 10   | {1,2,3,4,5,6,7,8,9,10}
 1    | 11   | {1,2,3,4,5,6,7,8,9,10,11}
 1    | 12   | {1,2,3,4,5,6,7,8,9,10,11,12}
 1    | 13   | {1,2,3,4,5,6,7,8,9,10,11,12,13}
 1    | 14   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14}
 1    | 15   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 1    | 16   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 1    | 17   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 1    | 18   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 1    | 19   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {2,3,4,5,6,7,8,9,10}
 2    | 11   | {2,3,4,5,6,7,8,9,10,11}
 2    | 12   | {2,3,4,5,6,7,8,9,10,11,12}
 2    | 13   | {2,3,4,5,6,7,8,9,10,11,12,13}
 2    | 14   | {2,3,4,5,6,7,8,9,10,11,12,13,14}
 2    | 15   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 2    | 16   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 2    | 17   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 2    | 18   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 2    | 19   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {3,4,5,6,7,8,9,10,11}
 3    | 12   | {3,4,5,6,7,8,9,10,11,12}
 3    | 13   | {3,4,5,6,7,8,9,10,11,12,13}
 3    | 14   | {3,4,5,6,7,8,9,10,11,12,13,14}
 3    | 15   | {3,4,5,6,7,8,9,10,11,12,13,14,15}
 3    | 16   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 3    | 17   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 3    | 18   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 3    | 19   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {4,5,6,7,8,9,10,11,12}
 4    | 13   | {4,5,6,7,8,9,10,11,12,13}
 4    | 14   | {4,5,6,7,8,9,10,11,12,13,14}
 4    | 15   | {4,5,6,7,8,9,10,11,12,13,14,15}
 4    | 16   | {4,5,6,7,8,9,10,11,12,13,14,15,16}
 4    | 17   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 4    | 18   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 4    | 19   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {5,6,7,8,9,10,11,12,13}
 5    | 14   | {5,6,7,8,9,10,11,12,13,14}
 5    | 15   | {5,6,7,8,9,10,11,12,13,14,15}
 5    | 16   | {5,6,7,8,9,10,11,12,13,14,15,16}
 5    | 17   | {5,6,7,8,9,10,11,12,13,14,15,16,17}
 5    | 18   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 5    | 19   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {6,7,8,9,10,11,12,13,14}
 6    | 15   | {6,7,8,9,10,11,12,13,14,15}
 6    | 16   | {6,7,8,9,10,11,12,13,14,15,16}
 6    | 17   | {6,7,8,9,10,11,12,13,14,15,16,17}
 6    | 18   | {6,7,8,9,10,11,12,13,14,15,16,17,18}
 6    | 19   | {6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {7,8,9,10,11,12,13,14,15}
 7    | 16   | {7,8,9,10,11,12,13,14,15,16}
 7    | 17   | {7,8,9,10,11,12,13,14,15,16,17}
 7    | 18   | {7,8,9,10,11,12,13,14,15,16,17,18}
 7    | 19   | {7,8,9,10,11,12,13,14,15,16,17,18,19}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {8,9,10,11,12,13,14,15,16}
 8    | 17   | {8,9,10,11,12,13,14,15,16,17}
 8    | 18   | {8,9,10,11,12,13,14,15,16,17,18}
 8    | 19   | {8,9,10,11,12,13,14,15,16,17,18,19}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {9,10,11,12,13,14,15,16,17}
 9    | 18   | {9,10,11,12,13,14,15,16,17,18}
 9    | 19   | {9,10,11,12,13,14,15,16,17,18,19}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {10,11,12,13,14,15,16,17,18}
 10   | 19   | {10,11,12,13,14,15,16,17,18,19}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {11,12,13,14,15,16,17,18,19}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..2]->(s2)))) order by s1id, s2id;
 s1id | s2id |    ids     
------+------+------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {}
 1    | 5    | {}
 1    | 6    | {}
 1    | 7    | {}
 1    | 8    | {}
 1    | 9    | {}
 1    | 10   | {}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {}
 2    | 6    | {}
 2    | 7    | {}
 2    | 8    | {}
 2    | 9    | {}
 2    | 10   | {}
 2    | 11   | {}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {}
 3    | 7    | {}
 3    | 8    | {}
 3    | 9    | {}
 3    | 10   | {}
 3    | 11   | {}
 3    | 12   | {}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {}
 4    | 8    | {}
 4    | 9    | {}
 4    | 10   | {}
 4    | 11   | {}
 4    | 12   | {}
 4    | 13   | {}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {}
 5    | 9    | {}
 5    | 10   | {}
 5    | 11   | {}
 5    | 12   | {}
 5    | 13   | {}
 5    | 14   | {}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {}
 6    | 10   | {}
 6    | 11   | {}
 6    | 12   | {}
 6    | 13   | {}
 6    | 14   | {}
 6    | 15   | {}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {}
 7    | 11   | {}
 7    | 12   | {}
 7    | 13   | {}
 7    | 14   | {}
 7    | 15   | {}
 7    | 16   | {}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {}
 8    | 12   | {}
 8    | 13   | {}
 8    | 14   | {}
 8    | 15   | {}
 8    | 16   | {}
 8    | 17   | {}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {}
 9    | 13   | {}
 9    | 14   | {}
 9    | 15   | {}
 9    | 16   | {}
 9    | 17   | {}
 9    | 18   | {}
 9    | 19   | {}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {}
 10   | 14   | {}
 10   | 15   | {}
 10   | 16   | {}
 10   | 17   | {}
 10   | 18   | {}
 10   | 19   | {}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {}
 11   | 15   | {}
 11   | 16   | {}
 11   | 17   | {}
 11   | 18   | {}
 11   | 19   | {}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {}
 12   | 16   | {}
 12   | 17   | {}
 12   | 18   | {}
 12   | 19   | {}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {}
 13   | 17   | {}
 13   | 18   | {}
 13   | 19   | {}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {}
 14   | 18   | {}
 14   | 19   | {}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {}
 15   | 19   | {}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)<-[:e]-(s2)))) order by s1id, s2id;
 s1id | s2id |   ids   
------+------+---------
 1    | 1    | {}
 1    | 2    | {}
 1    | 3    | {}
 1    | 4    | {}
 1    | 5    | {}
 1    | 6    | {}
 1    | 7    | {}
 1    | 8    | {}
 1    | 9    | {}
 1    | 10   | {}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {2,1}
 2    | 2    | {}
 2    | 3    | {}
 2    | 4    | {}
 2    | 5    | {}
 2    | 6    | {}
 2    | 7    | {}
 2    | 8    | {}
 2    | 9    | {}
 2    | 10   | {}
 2    | 11   | {}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {3,2}
 3    | 3    | {}
 3    | 4    | {}
 3    | 5    | {}
 3    | 6    | {}
 3    | 7    | {}
 3    | 8    | {}
 3    | 9    | {}
 3    | 10   | {}
 3    | 11   | {}
 3    | 12   | {}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {4,3}
 4    | 4    | {}
 4    | 5    | {}
 4    | 6    | {}
 4    | 7    | {}
 4    | 8    | {}
 4    | 9    | {}
 4    | 10   | {}
 4    | 11   | {}
 4    | 12   | {}
 4    | 13   | {}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {5,4}
 5    | 5    | {}
 5    | 6    | {}
 5    | 7    | {}
 5    | 8    | {}
 5    | 9    | {}
 5    | 10   | {}
 5    | 11   | {}
 5    | 12   | {}
 5    | 13   | {}
 5    | 14   | {}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {6,5}
 6    | 6    | {}
 6    | 7    | {}
 6    | 8    | {}
 6    | 9    | {}
 6    | 10   | {}
 6    | 11   | {}
 6    | 12   | {}
 6    | 13   | {}
 6    | 14   | {}
 6    | 15   | {}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {7,6}
 7    | 7    | {}
 7    | 8    | {}
 7    | 9    | {}
 7    | 10   | {}
 7    | 11   | {}
 7    | 12   | {}
 7    | 13   | {}
 7    | 14   | {}
 7    | 15   | {}
 7    | 16   | {}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {8,7}
 8    | 8    | {}
 8    | 9    | {}
 8    | 10   | {}
 8    | 11   | {}
 8    | 12   | {}
 8    | 13   | {}
 8    | 14   | {}
 8    | 15   | {}
 8    | 16   | {}
 8    | 17   | {}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {9,8}
 9    | 9    | {}
 9    | 10   | {}
 9    | 11   | {}
 9    | 12   | {}
 9    | 13   | {}
 9    | 14   | {}
 9    | 15   | {}
 9    | 16   | {}
 9    | 17   | {}
 9    | 18   | {}
 9    | 19   | {}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {10,9}
 10   | 10   | {}
 10   | 11   | {}
 10   | 12   | {}
 10   | 13   | {}
 10   | 14   | {}
 10   | 15   | {}
 10   | 16   | {}
 10   | 17   | {}
 10   | 18   | {}
 10   | 19   | {}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {11,10}
 11   | 11   | {}
 11   | 12   | {}
 11   | 13   | {}
 11   | 14   | {}
 11   | 15   | {}
 11   | 16   | {}
 11   | 17   | {}
 11   | 18   | {}
 11   | 19   | {}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {12,11}
 12   | 12   | {}
 12   | 13   | {}
 12   | 14   | {}
 12   | 15   | {}
 12   | 16   | {}
 12   | 17   | {}
 12   | 18   | {}
 12   | 19   | {}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {13,12}
 13   | 13   | {}
 13   | 14   | {}
 13   | 15   | {}
 13   | 16   | {}
 13   | 17   | {}
 13   | 18   | {}
 13   | 19   | {}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {14,13}
 14   | 14   | {}
 14   | 15   | {}
 14   | 16   | {}
 14   | 17   | {}
 14   | 18   | {}
 14   | 19   | {}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {15,14}
 15   | 15   | {}
 15   | 16   | {}
 15   | 17   | {}
 15   | 18   | {}
 15   | 19   | {}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {16,15}
 16   | 16   | {}
 16   | 17   | {}
 16   | 18   | {}
 16   | 19   | {}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {17,16}
 17   | 17   | {}
 17   | 18   | {}
 17   | 19   | {}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {18,17}
 18   | 18   | {}
 18   | 19   | {}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {19,18}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)<-[:e*0..]-(s2)))) order by s1id, s2id;
 s1id | s2id |                        ids                        
------+------+---------------------------------------------------
 1    | 1    | {1}
 1    | 2    | {}
 1    | 3    | {}
 1    | 4    | {}
 1    | 5    | {}
 1    | 6    | {}
 1    | 7    | {}
 1    | 8    | {}
 1    | 9    | {}
 1    | 10   | {}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {2,1}
 2    | 2    | {2}
 2    | 3    | {}
 2    | 4    | {}
 2    | 5    | {}
 2    | 6    | {}
 2    | 7    | {}
 2    | 8    | {}
 2    | 9    | {}
 2    | 10   | {}
 2    | 11   | {}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {3,2,1}
 3    | 2    | {3,2}
 3    | 3    | {3}
 3    | 4    | {}
 3    | 5    | {}
 3    | 6    | {}
 3    | 7    | {}
 3    | 8    | {}
 3    | 9    | {}
 3    | 10   | {}
 3    | 11   | {}
 3    | 12   | {}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {4,3,2,1}
 4    | 2    | {4,3,2}
 4    | 3    | {4,3}
 4    | 4    | {4}
 4    | 5    | {}
 4    | 6    | {}
 4    | 7    | {}
 4    | 8    | {}
 4    | 9    | {}
 4    | 10   | {}
 4    | 11   | {}
 4    | 12   | {}
 4    | 13   | {}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {5,4,3,2,1}
 5    | 2    | {5,4,3,2}
 5    | 3    | {5,4,3}
 5    | 4    | {5,4}
 5    | 5    | {5}
 5    | 6    | {}
 5    | 7    | {}
 5    | 8    | {}
 5    | 9    | {}
 5    | 10   | {}
 5    | 11   | {}
 5    | 12   | {}
 5    | 13   | {}
 5    | 14   | {}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {6,5,4,3,2,1}
 6    | 2    | {6,5,4,3,2}
 6    | 3    | {6,5,4,3}
 6    | 4    | {6,5,4}
 6    | 5    | {6,5}
 6    | 6    | {6}
 6    | 7    | {}
 6    | 8    | {}
 6    | 9    | {}
 6    | 10   | {}
 6    | 11   | {}
 6    | 12   | {}
 6    | 13   | {}
 6    | 14   | {}
 6    | 15   | {}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {7,6,5,4,3,2,1}
 7    | 2    | {7,6,5,4,3,2}
 7    | 3    | {7,6,5,4,3}
 7    | 4    | {7,6,5,4}
 7    | 5    | {7,6,5}
 7    | 6    | {7,6}
 7    | 7    | {7}
 7    | 8    | {}
 7    | 9    | {}
 7    | 10   | {}
 7    | 11   | {}
 7    | 12   | {}
 7    | 13   | {}
 7    | 14   | {}
 7    | 15   | {}
 7    | 16   | {}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {8,7,6,5,4,3,2,1}
 8    | 2    | {8,7,6,5,4,3,2}
 8    | 3    | {8,7,6,5,4,3}
 8    | 4    | {8,7,6,5,4}
 8    | 5    | {8,7,6,5}
 8    | 6    | {8,7,6}
 8    | 7    | {8,7}
 8    | 8    | {8}
 8    | 9    | {}
 8    | 10   | {}
 8    | 11   | {}
 8    | 12   | {}
 8    | 13   | {}
 8    | 14   | {}
 8    | 15   | {}
 8    | 16   | {}
 8    | 17   | {}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {9,8,7,6,5,4,3,2,1}
 9    | 2    | {9,8,7,6,5,4,3,2}
 9    | 3    | {9,8,7,6,5,4,3}
 9    | 4    | {9,8,7,6,5,4}
 9    | 5    | {9,8,7,6,5}
 9    | 6    | {9,8,7,6}
 9    | 7    | {9,8,7}
 9    | 8    | {9,8}
 9    | 9    | {9}
 9    | 10   | {}
 9    | 11   | {}
 9    | 12   | {}
 9    | 13   | {}
 9    | 14   | {}
 9    | 15   | {}
 9    | 16   | {}
 9    | 17   | {}
 9    | 18   | {}
 9    | 19   | {}
 10   | 1    | {10,9,8,7,6,5,4,3,2,1}
 10   | 2    | {10,9,8,7,6,5,4,3,2}
 10   | 3    | {10,9,8,7,6,5,4,3}
 10   | 4    | {10,9,8,7,6,5,4}
 10   | 5    | {10,9,8,7,6,5}
 10   | 6    | {10,9,8,7,6}
 10   | 7    | {10,9,8,7}
 10   | 8    | {10,9,8}
 10   | 9    | {10,9}
 10   | 10   | {10}
 10   | 11   | {}
 10   | 12   | {}
 10   | 13   | {}
 10   | 14   | {}
 10   | 15   | {}
 10   | 16   | {}
 10   | 17   | {}
 10   | 18   | {}
 10   | 19   | {}
 11   | 1    | {11,10,9,8,7,6,5,4,3,2,1}
 11   | 2    | {11,10,9,8,7,6,5,4,3,2}
 11   | 3    | {11,10,9,8,7,6,5,4,3}
 11   | 4    | {11,10,9,8,7,6,5,4}
 11   | 5    | {11,10,9,8,7,6,5}
 11   | 6    | {11,10,9,8,7,6}
 11   | 7    | {11,10,9,8,7}
 11   | 8    | {11,10,9,8}
 11   | 9    | {11,10,9}
 11   | 10   | {11,10}
 11   | 11   | {11}
 11   | 12   | {}
 11   | 13   | {}
 11   | 14   | {}
 11   | 15   | {}
 11   | 16   | {}
 11   | 17   | {}
 11   | 18   | {}
 11   | 19   | {}
 12   | 1    | {12,11,10,9,8,7,6,5,4,3,2,1}
 12   | 2    | {12,11,10,9,8,7,6,5,4,3,2}
 12   | 3    | {12,11,10,9,8,7,6,5,4,3}
 12   | 4    | {12,11,10,9,8,7,6,5,4}
 12   | 5    | {12,11,10,9,8,7,6,5}
 12   | 6    | {12,11,10,9,8,7,6}
 12   | 7    | {12,11,10,9,8,7}
 12   | 8    | {12,11,10,9,8}
 12   | 9    | {12,11,10,9}
 12   | 10   | {12,11,10}
 12   | 11   | {12,11}
 12   | 12   | {12}
 12   | 13   | {}
 12   | 14   | {}
 12   | 15   | {}
 12   | 16   | {}
 12   | 17   | {}
 12   | 18   | {}
 12   | 19   | {}
 13   | 1    | {13,12,11,10,9,8,7,6,5,4,3,2,1}
 13   | 2    | {13,12,11,10,9,8,7,6,5,4,3,2}
 13   | 3    | {13,12,11,10,9,8,7,6,5,4,3}
 13   | 4    | {13,12,11,10,9,8,7,6,5,4}
 13   | 5    | {13,12,11,10,9,8,7,6,5}
 13   | 6    | {13,12,11,10,9,8,7,6}
 13   | 7    | {13,12,11,10,9,8,7}
 13   | 8    | {13,12,11,10,9,8}
 13   | 9    | {13,12,11,10,9}
 13   | 10   | {13,12,11,10}
 13   | 11   | {13,12,11}
 13   | 12   | {13,12}
 13   | 13   | {13}
 13   | 14   | {}
 13   | 15   | {}
 13   | 16   | {}
 13   | 17   | {}
 13   | 18   | {}
 13   | 19   | {}
 14   | 1    | {14,13,12,11,10,9,8,7,6,5,4,3,2,1}
 14   | 2    | {14,13,12,11,10,9,8,7,6,5,4,3,2}
 14   | 3    | {14,13,12,11,10,9,8,7,6,5,4,3}
 14   | 4    | {14,13,12,11,10,9,8,7,6,5,4}
 14   | 5    | {14,13,12,11,10,9,8,7,6,5}
 14   | 6    | {14,13,12,11,10,9,8,7,6}
 14   | 7    | {14,13,12,11,10,9,8,7}
 14   | 8    | {14,13,12,11,10,9,8}
 14   | 9    | {14,13,12,11,10,9}
 14   | 10   | {14,13,12,11,10}
 14   | 11   | {14,13,12,11}
 14   | 12   | {14,13,12}
 14   | 13   | {14,13}
 14   | 14   | {14}
 14   | 15   | {}
 14   | 16   | {}
 14   | 17   | {}
 14   | 18   | {}
 14   | 19   | {}
 15   | 1    | {15,14,13,12,11,10,9,8,7,6,5,4,3,2,1}
 15   | 2    | {15,14,13,12,11,10,9,8,7,6,5,4,3,2}
 15   | 3    | {15,14,13,12,11,10,9,8,7,6,5,4,3}
 15   | 4    | {15,14,13,12,11,10,9,8,7,6,5,4}
 15   | 5    | {15,14,13,12,11,10,9,8,7,6,5}
 15   | 6    | {15,14,13,12,11,10,9,8,7,6}
 15   | 7    | {15,14,13,12,11,10,9,8,7}
 15   | 8    | {15,14,13,12,11,10,9,8}
 15   | 9    | {15,14,13,12,11,10,9}
 15   | 10   | {15,14,13,12,11,10}
 15   | 11   | {15,14,13,12,11}
 15   | 12   | {15,14,13,12}
 15   | 13   | {15,14,13}
 15   | 14   | {15,14}
 15   | 15   | {15}
 15   | 16   | {}
 15   | 17   | {}
 15   | 18   | {}
 15   | 19   | {}
 16   | 1    | {16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1}
 16   | 2    | {16,15,14,13,12,11,10,9,8,7,6,5,4,3,2}
 16   | 3    | {16,15,14,13,12,11,10,9,8,7,6,5,4,3}
 16   | 4    | {16,15,14,13,12,11,10,9,8,7,6,5,4}
 16   | 5    | {16,15,14,13,12,11,10,9,8,7,6,5}
 16   | 6    | {16,15,14,13,12,11,10,9,8,7,6}
 16   | 7    | {16,15,14,13,12,11,10,9,8,7}
 16   | 8    | {16,15,14,13,12,11,10,9,8}
 16   | 9    | {16,15,14,13,12,11,10,9}
 16   | 10   | {16,15,14,13,12,11,10}
 16   | 11   | {16,15,14,13,12,11}
 16   | 12   | {16,15,14,13,12}
 16   | 13   | {16,15,14,13}
 16   | 14   | {16,15,14}
 16   | 15   | {16,15}
 16   | 16   | {16}
 16   | 17   | {}
 16   | 18   | {}
 16   | 19   | {}
 17   | 1    | {17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1}
 17   | 2    | {17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2}
 17   | 3    | {17,16,15,14,13,12,11,10,9,8,7,6,5,4,3}
 17   | 4    | {17,16,15,14,13,12,11,10,9,8,7,6,5,4}
 17   | 5    | {17,16,15,14,13,12,11,10,9,8,7,6,5}
 17   | 6    | {17,16,15,14,13,12,11,10,9,8,7,6}
 17   | 7    | {17,16,15,14,13,12,11,10,9,8,7}
 17   | 8    | {17,16,15,14,13,12,11,10,9,8}
 17   | 9    | {17,16,15,14,13,12,11,10,9}
 17   | 10   | {17,16,15,14,13,12,11,10}
 17   | 11   | {17,16,15,14,13,12,11}
 17   | 12   | {17,16,15,14,13,12}
 17   | 13   | {17,16,15,14,13}
 17   | 14   | {17,16,15,14}
 17   | 15   | {17,16,15}
 17   | 16   | {17,16}
 17   | 17   | {17}
 17   | 18   | {}
 17   | 19   | {}
 18   | 1    | {18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1}
 18   | 2    | {18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2}
 18   | 3    | {18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3}
 18   | 4    | {18,17,16,15,14,13,12,11,10,9,8,7,6,5,4}
 18   | 5    | {18,17,16,15,14,13,12,11,10,9,8,7,6,5}
 18   | 6    | {18,17,16,15,14,13,12,11,10,9,8,7,6}
 18   | 7    | {18,17,16,15,14,13,12,11,10,9,8,7}
 18   | 8    | {18,17,16,15,14,13,12,11,10,9,8}
 18   | 9    | {18,17,16,15,14,13,12,11,10,9}
 18   | 10   | {18,17,16,15,14,13,12,11,10}
 18   | 11   | {18,17,16,15,14,13,12,11}
 18   | 12   | {18,17,16,15,14,13,12}
 18   | 13   | {18,17,16,15,14,13}
 18   | 14   | {18,17,16,15,14}
 18   | 15   | {18,17,16,15}
 18   | 16   | {18,17,16}
 18   | 17   | {18,17}
 18   | 18   | {18}
 18   | 19   | {}
 19   | 1    | {19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1}
 19   | 2    | {19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2}
 19   | 3    | {19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3}
 19   | 4    | {19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4}
 19   | 5    | {19,18,17,16,15,14,13,12,11,10,9,8,7,6,5}
 19   | 6    | {19,18,17,16,15,14,13,12,11,10,9,8,7,6}
 19   | 7    | {19,18,17,16,15,14,13,12,11,10,9,8,7}
 19   | 8    | {19,18,17,16,15,14,13,12,11,10,9,8}
 19   | 9    | {19,18,17,16,15,14,13,12,11,10,9}
 19   | 10   | {19,18,17,16,15,14,13,12,11,10}
 19   | 11   | {19,18,17,16,15,14,13,12,11}
 19   | 12   | {19,18,17,16,15,14,13,12}
 19   | 13   | {19,18,17,16,15,14,13}
 19   | 14   | {19,18,17,16,15,14}
 19   | 15   | {19,18,17,16,15}
 19   | 16   | {19,18,17,16}
 19   | 17   | {19,18,17}
 19   | 18   | {19,18}
 19   | 19   | {19}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)<-[:e*]-(s2)))) order by s1id, s2id;
 s1id | s2id |                        ids                        
------+------+---------------------------------------------------
 1    | 1    | {}
 1    | 2    | {}
 1    | 3    | {}
 1    | 4    | {}
 1    | 5    | {}
 1    | 6    | {}
 1    | 7    | {}
 1    | 8    | {}
 1    | 9    | {}
 1    | 10   | {}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {2,1}
 2    | 2    | {}
 2    | 3    | {}
 2    | 4    | {}
 2    | 5    | {}
 2    | 6    | {}
 2    | 7    | {}
 2    | 8    | {}
 2    | 9    | {}
 2    | 10   | {}
 2    | 11   | {}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {3,2,1}
 3    | 2    | {3,2}
 3    | 3    | {}
 3    | 4    | {}
 3    | 5    | {}
 3    | 6    | {}
 3    | 7    | {}
 3    | 8    | {}
 3    | 9    | {}
 3    | 10   | {}
 3    | 11   | {}
 3    | 12   | {}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {4,3,2,1}
 4    | 2    | {4,3,2}
 4    | 3    | {4,3}
 4    | 4    | {}
 4    | 5    | {}
 4    | 6    | {}
 4    | 7    | {}
 4    | 8    | {}
 4    | 9    | {}
 4    | 10   | {}
 4    | 11   | {}
 4    | 12   | {}
 4    | 13   | {}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {5,4,3,2,1}
 5    | 2    | {5,4,3,2}
 5    | 3    | {5,4,3}
 5    | 4    | {5,4}
 5    | 5    | {}
 5    | 6    | {}
 5    | 7    | {}
 5    | 8    | {}
 5    | 9    | {}
 5    | 10   | {}
 5    | 11   | {}
 5    | 12   | {}
 5    | 13   | {}
 5    | 14   | {}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {6,5,4,3,2,1}
 6    | 2    | {6,5,4,3,2}
 6    | 3    | {6,5,4,3}
 6    | 4    | {6,5,4}
 6    | 5    | {6,5}
 6    | 6    | {}
 6    | 7    | {}
 6    | 8    | {}
 6    | 9    | {}
 6    | 10   | {}
 6    | 11   | {}
 6    | 12   | {}
 6    | 13   | {}
 6    | 14   | {}
 6    | 15   | {}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {7,6,5,4,3,2,1}
 7    | 2    | {7,6,5,4,3,2}
 7    | 3    | {7,6,5,4,3}
 7    | 4    | {7,6,5,4}
 7    | 5    | {7,6,5}
 7    | 6    | {7,6}
 7    | 7    | {}
 7    | 8    | {}
 7    | 9    | {}
 7    | 10   | {}
 7    | 11   | {}
 7    | 12   | {}
 7    | 13   | {}
 7    | 14   | {}
 7    | 15   | {}
 7    | 16   | {}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {8,7,6,5,4,3,2,1}
 8    | 2    | {8,7,6,5,4,3,2}
 8    | 3    | {8,7,6,5,4,3}
 8    | 4    | {8,7,6,5,4}
 8    | 5    | {8,7,6,5}
 8    | 6    | {8,7,6}
 8    | 7    | {8,7}
 8    | 8    | {}
 8    | 9    | {}
 8    | 10   | {}
 8    | 11   | {}
 8    | 12   | {}
 8    | 13   | {}
 8    | 14   | {}
 8    | 15   | {}
 8    | 16   | {}
 8    | 17   | {}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {9,8,7,6,5,4,3,2,1}
 9    | 2    | {9,8,7,6,5,4,3,2}
 9    | 3    | {9,8,7,6,5,4,3}
 9    | 4    | {9,8,7,6,5,4}
 9    | 5    | {9,8,7,6,5}
 9    | 6    | {9,8,7,6}
 9    | 7    | {9,8,7}
 9    | 8    | {9,8}
 9    | 9    | {}
 9    | 10   | {}
 9    | 11   | {}
 9    | 12   | {}
 9    | 13   | {}
 9    | 14   | {}
 9    | 15   | {}
 9    | 16   | {}
 9    | 17   | {}
 9    | 18   | {}
 9    | 19   | {}
 10   | 1    | {10,9,8,7,6,5,4,3,2,1}
 10   | 2    | {10,9,8,7,6,5,4,3,2}
 10   | 3    | {10,9,8,7,6,5,4,3}
 10   | 4    | {10,9,8,7,6,5,4}
 10   | 5    | {10,9,8,7,6,5}
 10   | 6    | {10,9,8,7,6}
 10   | 7    | {10,9,8,7}
 10   | 8    | {10,9,8}
 10   | 9    | {10,9}
 10   | 10   | {}
 10   | 11   | {}
 10   | 12   | {}
 10   | 13   | {}
 10   | 14   | {}
 10   | 15   | {}
 10   | 16   | {}
 10   | 17   | {}
 10   | 18   | {}
 10   | 19   | {}
 11   | 1    | {11,10,9,8,7,6,5,4,3,2,1}
 11   | 2    | {11,10,9,8,7,6,5,4,3,2}
 11   | 3    | {11,10,9,8,7,6,5,4,3}
 11   | 4    | {11,10,9,8,7,6,5,4}
 11   | 5    | {11,10,9,8,7,6,5}
 11   | 6    | {11,10,9,8,7,6}
 11   | 7    | {11,10,9,8,7}
 11   | 8    | {11,10,9,8}
 11   | 9    | {11,10,9}
 11   | 10   | {11,10}
 11   | 11   | {}
 11   | 12   | {}
 11   | 13   | {}
 11   | 14   | {}
 11   | 15   | {}
 11   | 16   | {}
 11   | 17   | {}
 11   | 18   | {}
 11   | 19   | {}
 12   | 1    | {12,11,10,9,8,7,6,5,4,3,2,1}
 12   | 2    | {12,11,10,9,8,7,6,5,4,3,2}
 12   | 3    | {12,11,10,9,8,7,6,5,4,3}
 12   | 4    | {12,11,10,9,8,7,6,5,4}
 12   | 5    | {12,11,10,9,8,7,6,5}
 12   | 6    | {12,11,10,9,8,7,6}
 12   | 7    | {12,11,10,9,8,7}
 12   | 8    | {12,11,10,9,8}
 12   | 9    | {12,11,10,9}
 12   | 10   | {12,11,10}
 12   | 11   | {12,11}
 12   | 12   | {}
 12   | 13   | {}
 12   | 14   | {}
 12   | 15   | {}
 12   | 16   | {}
 12   | 17   | {}
 12   | 18   | {}
 12   | 19   | {}
 13   | 1    | {13,12,11,10,9,8,7,6,5,4,3,2,1}
 13   | 2    | {13,12,11,10,9,8,7,6,5,4,3,2}
 13   | 3    | {13,12,11,10,9,8,7,6,5,4,3}
 13   | 4    | {13,12,11,10,9,8,7,6,5,4}
 13   | 5    | {13,12,11,10,9,8,7,6,5}
 13   | 6    | {13,12,11,10,9,8,7,6}
 13   | 7    | {13,12,11,10,9,8,7}
 13   | 8    | {13,12,11,10,9,8}
 13   | 9    | {13,12,11,10,9}
 13   | 10   | {13,12,11,10}
 13   | 11   | {13,12,11}
 13   | 12   | {13,12}
 13   | 13   | {}
 13   | 14   | {}
 13   | 15   | {}
 13   | 16   | {}
 13   | 17   | {}
 13   | 18   | {}
 13   | 19   | {}
 14   | 1    | {14,13,12,11,10,9,8,7,6,5,4,3,2,1}
 14   | 2    | {14,13,12,11,10,9,8,7,6,5,4,3,2}
 14   | 3    | {14,13,12,11,10,9,8,7,6,5,4,3}
 14   | 4    | {14,13,12,11,10,9,8,7,6,5,4}
 14   | 5    | {14,13,12,11,10,9,8,7,6,5}
 14   | 6    | {14,13,12,11,10,9,8,7,6}
 14   | 7    | {14,13,12,11,10,9,8,7}
 14   | 8    | {14,13,12,11,10,9,8}
 14   | 9    | {14,13,12,11,10,9}
 14   | 10   | {14,13,12,11,10}
 14   | 11   | {14,13,12,11}
 14   | 12   | {14,13,12}
 14   | 13   | {14,13}
 14   | 14   | {}
 14   | 15   | {}
 14   | 16   | {}
 14   | 17   | {}
 14   | 18   | {}
 14   | 19   | {}
 15   | 1    | {15,14,13,12,11,10,9,8,7,6,5,4,3,2,1}
 15   | 2    | {15,14,13,12,11,10,9,8,7,6,5,4,3,2}
 15   | 3    | {15,14,13,12,11,10,9,8,7,6,5,4,3}
 15   | 4    | {15,14,13,12,11,10,9,8,7,6,5,4}
 15   | 5    | {15,14,13,12,11,10,9,8,7,6,5}
 15   | 6    | {15,14,13,12,11,10,9,8,7,6}
 15   | 7    | {15,14,13,12,11,10,9,8,7}
 15   | 8    | {15,14,13,12,11,10,9,8}
 15   | 9    | {15,14,13,12,11,10,9}
 15   | 10   | {15,14,13,12,11,10}
 15   | 11   | {15,14,13,12,11}
 15   | 12   | {15,14,13,12}
 15   | 13   | {15,14,13}
 15   | 14   | {15,14}
 15   | 15   | {}
 15   | 16   | {}
 15   | 17   | {}
 15   | 18   | {}
 15   | 19   | {}
 16   | 1    | {16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1}
 16   | 2    | {16,15,14,13,12,11,10,9,8,7,6,5,4,3,2}
 16   | 3    | {16,15,14,13,12,11,10,9,8,7,6,5,4,3}
 16   | 4    | {16,15,14,13,12,11,10,9,8,7,6,5,4}
 16   | 5    | {16,15,14,13,12,11,10,9,8,7,6,5}
 16   | 6    | {16,15,14,13,12,11,10,9,8,7,6}
 16   | 7    | {16,15,14,13,12,11,10,9,8,7}
 16   | 8    | {16,15,14,13,12,11,10,9,8}
 16   | 9    | {16,15,14,13,12,11,10,9}
 16   | 10   | {16,15,14,13,12,11,10}
 16   | 11   | {16,15,14,13,12,11}
 16   | 12   | {16,15,14,13,12}
 16   | 13   | {16,15,14,13}
 16   | 14   | {16,15,14}
 16   | 15   | {16,15}
 16   | 16   | {}
 16   | 17   | {}
 16   | 18   | {}
 16   | 19   | {}
 17   | 1    | {17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1}
 17   | 2    | {17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2}
 17   | 3    | {17,16,15,14,13,12,11,10,9,8,7,6,5,4,3}
 17   | 4    | {17,16,15,14,13,12,11,10,9,8,7,6,5,4}
 17   | 5    | {17,16,15,14,13,12,11,10,9,8,7,6,5}
 17   | 6    | {17,16,15,14,13,12,11,10,9,8,7,6}
 17   | 7    | {17,16,15,14,13,12,11,10,9,8,7}
 17   | 8    | {17,16,15,14,13,12,11,10,9,8}
 17   | 9    | {17,16,15,14,13,12,11,10,9}
 17   | 10   | {17,16,15,14,13,12,11,10}
 17   | 11   | {17,16,15,14,13,12,11}
 17   | 12   | {17,16,15,14,13,12}
 17   | 13   | {17,16,15,14,13}
 17   | 14   | {17,16,15,14}
 17   | 15   | {17,16,15}
 17   | 16   | {17,16}
 17   | 17   | {}
 17   | 18   | {}
 17   | 19   | {}
 18   | 1    | {18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1}
 18   | 2    | {18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2}
 18   | 3    | {18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3}
 18   | 4    | {18,17,16,15,14,13,12,11,10,9,8,7,6,5,4}
 18   | 5    | {18,17,16,15,14,13,12,11,10,9,8,7,6,5}
 18   | 6    | {18,17,16,15,14,13,12,11,10,9,8,7,6}
 18   | 7    | {18,17,16,15,14,13,12,11,10,9,8,7}
 18   | 8    | {18,17,16,15,14,13,12,11,10,9,8}
 18   | 9    | {18,17,16,15,14,13,12,11,10,9}
 18   | 10   | {18,17,16,15,14,13,12,11,10}
 18   | 11   | {18,17,16,15,14,13,12,11}
 18   | 12   | {18,17,16,15,14,13,12}
 18   | 13   | {18,17,16,15,14,13}
 18   | 14   | {18,17,16,15,14}
 18   | 15   | {18,17,16,15}
 18   | 16   | {18,17,16}
 18   | 17   | {18,17}
 18   | 18   | {}
 18   | 19   | {}
 19   | 1    | {19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1}
 19   | 2    | {19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2}
 19   | 3    | {19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3}
 19   | 4    | {19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4}
 19   | 5    | {19,18,17,16,15,14,13,12,11,10,9,8,7,6,5}
 19   | 6    | {19,18,17,16,15,14,13,12,11,10,9,8,7,6}
 19   | 7    | {19,18,17,16,15,14,13,12,11,10,9,8,7}
 19   | 8    | {19,18,17,16,15,14,13,12,11,10,9,8}
 19   | 9    | {19,18,17,16,15,14,13,12,11,10,9}
 19   | 10   | {19,18,17,16,15,14,13,12,11,10}
 19   | 11   | {19,18,17,16,15,14,13,12,11}
 19   | 12   | {19,18,17,16,15,14,13,12}
 19   | 13   | {19,18,17,16,15,14,13}
 19   | 14   | {19,18,17,16,15,14}
 19   | 15   | {19,18,17,16,15}
 19   | 16   | {19,18,17,16}
 19   | 17   | {19,18,17}
 19   | 18   | {19,18}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)<-[:e*..2]-(s2)))) order by s1id, s2id;
 s1id | s2id |    ids     
------+------+------------
 1    | 1    | {}
 1    | 2    | {}
 1    | 3    | {}
 1    | 4    | {}
 1    | 5    | {}
 1    | 6    | {}
 1    | 7    | {}
 1    | 8    | {}
 1    | 9    | {}
 1    | 10   | {}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {2,1}
 2    | 2    | {}
 2    | 3    | {}
 2    | 4    | {}
 2    | 5    | {}
 2    | 6    | {}
 2    | 7    | {}
 2    | 8    | {}
 2    | 9    | {}
 2    | 10   | {}
 2    | 11   | {}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {3,2,1}
 3    | 2    | {3,2}
 3    | 3    | {}
 3    | 4    | {}
 3    | 5    | {}
 3    | 6    | {}
 3    | 7    | {}
 3    | 8    | {}
 3    | 9    | {}
 3    | 10   | {}
 3    | 11   | {}
 3    | 12   | {}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {4,3,2}
 4    | 3    | {4,3}
 4    | 4    | {}
 4    | 5    | {}
 4    | 6    | {}
 4    | 7    | {}
 4    | 8    | {}
 4    | 9    | {}
 4    | 10   | {}
 4    | 11   | {}
 4    | 12   | {}
 4    | 13   | {}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {5,4,3}
 5    | 4    | {5,4}
 5    | 5    | {}
 5    | 6    | {}
 5    | 7    | {}
 5    | 8    | {}
 5    | 9    | {}
 5    | 10   | {}
 5    | 11   | {}
 5    | 12   | {}
 5    | 13   | {}
 5    | 14   | {}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {6,5,4}
 6    | 5    | {6,5}
 6    | 6    | {}
 6    | 7    | {}
 6    | 8    | {}
 6    | 9    | {}
 6    | 10   | {}
 6    | 11   | {}
 6    | 12   | {}
 6    | 13   | {}
 6    | 14   | {}
 6    | 15   | {}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {7,6,5}
 7    | 6    | {7,6}
 7    | 7    | {}
 7    | 8    | {}
 7    | 9    | {}
 7    | 10   | {}
 7    | 11   | {}
 7    | 12   | {}
 7    | 13   | {}
 7    | 14   | {}
 7    | 15   | {}
 7    | 16   | {}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {8,7,6}
 8    | 7    | {8,7}
 8    | 8    | {}
 8    | 9    | {}
 8    | 10   | {}
 8    | 11   | {}
 8    | 12   | {}
 8    | 13   | {}
 8    | 14   | {}
 8    | 15   | {}
 8    | 16   | {}
 8    | 17   | {}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {9,8,7}
 9    | 8    | {9,8}
 9    | 9    | {}
 9    | 10   | {}
 9    | 11   | {}
 9    | 12   | {}
 9    | 13   | {}
 9    | 14   | {}
 9    | 15   | {}
 9    | 16   | {}
 9    | 17   | {}
 9    | 18   | {}
 9    | 19   | {}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {10,9,8}
 10   | 9    | {10,9}
 10   | 10   | {}
 10   | 11   | {}
 10   | 12   | {}
 10   | 13   | {}
 10   | 14   | {}
 10   | 15   | {}
 10   | 16   | {}
 10   | 17   | {}
 10   | 18   | {}
 10   | 19   | {}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {11,10,9}
 11   | 10   | {11,10}
 11   | 11   | {}
 11   | 12   | {}
 11   | 13   | {}
 11   | 14   | {}
 11   | 15   | {}
 11   | 16   | {}
 11   | 17   | {}
 11   | 18   | {}
 11   | 19   | {}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {12,11,10}
 12   | 11   | {12,11}
 12   | 12   | {}
 12   | 13   | {}
 12   | 14   | {}
 12   | 15   | {}
 12   | 16   | {}
 12   | 17   | {}
 12   | 18   | {}
 12   | 19   | {}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {13,12,11}
 13   | 12   | {13,12}
 13   | 13   | {}
 13   | 14   | {}
 13   | 15   | {}
 13   | 16   | {}
 13   | 17   | {}
 13   | 18   | {}
 13   | 19   | {}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {14,13,12}
 14   | 13   | {14,13}
 14   | 14   | {}
 14   | 15   | {}
 14   | 16   | {}
 14   | 17   | {}
 14   | 18   | {}
 14   | 19   | {}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {15,14,13}
 15   | 14   | {15,14}
 15   | 15   | {}
 15   | 16   | {}
 15   | 17   | {}
 15   | 18   | {}
 15   | 19   | {}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {16,15,14}
 16   | 15   | {16,15}
 16   | 16   | {}
 16   | 17   | {}
 16   | 18   | {}
 16   | 19   | {}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {17,16,15}
 17   | 16   | {17,16}
 17   | 17   | {}
 17   | 18   | {}
 17   | 19   | {}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {18,17,16}
 18   | 17   | {18,17}
 18   | 18   | {}
 18   | 19   | {}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {19,18,17}
 19   | 18   | {19,18}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, size(allshortestpaths((s1)-[:e]-(s2))) order by s1id, s2id;
 s1id | s2id | count 
------+------+-------
 1    | 1    | 0
 1    | 2    | 1
 1    | 3    | 0
 1    | 4    | 0
 1    | 5    | 0
 1    | 6    | 0
 1    | 7    | 0
 1    | 8    | 0
 1    | 9    | 0
 1    | 10   | 0
 1    | 11   | 0
 1    | 12   | 0
 1    | 13   | 0
 1    | 14   | 0
 1    | 15   | 0
 1    | 16   | 0
 1    | 17   | 0
 1    | 18   | 0
 1    | 19   | 0
 2    | 1    | 1
 2    | 2    | 0
 2    | 3    | 1
 2    | 4    | 0
 2    | 5    | 0
 2    | 6    | 0
 2    | 7    | 0
 2    | 8    | 0
 2    | 9    | 0
 2    | 10   | 0
 2    | 11   | 0
 2    | 12   | 0
 2    | 13   | 0
 2    | 14   | 0
 2    | 15   | 0
 2    | 16   | 0
 2    | 17   | 0
 2    | 18   | 0
 2    | 19   | 0
 3    | 1    | 0
 3    | 2    | 1
 3    | 3    | 0
 3    | 4    | 1
 3    | 5    | 0
 3    | 6    | 0
 3    | 7    | 0
 3    | 8    | 0
 3    | 9    | 0
 3    | 10   | 0
 3    | 11   | 0
 3    | 12   | 0
 3    | 13   | 0
 3    | 14   | 0
 3    | 15   | 0
 3    | 16   | 0
 3    | 17   | 0
 3    | 18   | 0
 3    | 19   | 0
 4    | 1    | 0
 4    | 2    | 0
 4    | 3    | 1
 4    | 4    | 0
 4    | 5    | 1
 4    | 6    | 0
 4    | 7    | 0
 4    | 8    | 0
 4    | 9    | 0
 4    | 10   | 0
 4    | 11   | 0
 4    | 12   | 0
 4    | 13   | 0
 4    | 14   | 0
 4    | 15   | 0
 4    | 16   | 0
 4    | 17   | 0
 4    | 18   | 0
 4    | 19   | 0
 5    | 1    | 0
 5    | 2    | 0
 5    | 3    | 0
 5    | 4    | 1
 5    | 5    | 0
 5    | 6    | 1
 5    | 7    | 0
 5    | 8    | 0
 5    | 9    | 0
 5    | 10   | 0
 5    | 11   | 0
 5    | 12   | 0
 5    | 13   | 0
 5    | 14   | 0
 5    | 15   | 0
 5    | 16   | 0
 5    | 17   | 0
 5    | 18   | 0
 5    | 19   | 0
 6    | 1    | 0
 6    | 2    | 0
 6    | 3    | 0
 6    | 4    | 0
 6    | 5    | 1
 6    | 6    | 0
 6    | 7    | 1
 6    | 8    | 0
 6    | 9    | 0
 6    | 10   | 0
 6    | 11   | 0
 6    | 12   | 0
 6    | 13   | 0
 6    | 14   | 0
 6    | 15   | 0
 6    | 16   | 0
 6    | 17   | 0
 6    | 18   | 0
 6    | 19   | 0
 7    | 1    | 0
 7    | 2    | 0
 7    | 3    | 0
 7    | 4    | 0
 7    | 5    | 0
 7    | 6    | 1
 7    | 7    | 0
 7    | 8    | 1
 7    | 9    | 0
 7    | 10   | 0
 7    | 11   | 0
 7    | 12   | 0
 7    | 13   | 0
 7    | 14   | 0
 7    | 15   | 0
 7    | 16   | 0
 7    | 17   | 0
 7    | 18   | 0
 7    | 19   | 0
 8    | 1    | 0
 8    | 2    | 0
 8    | 3    | 0
 8    | 4    | 0
 8    | 5    | 0
 8    | 6    | 0
 8    | 7    | 1
 8    | 8    | 0
 8    | 9    | 1
 8    | 10   | 0
 8    | 11   | 0
 8    | 12   | 0
 8    | 13   | 0
 8    | 14   | 0
 8    | 15   | 0
 8    | 16   | 0
 8    | 17   | 0
 8    | 18   | 0
 8    | 19   | 0
 9    | 1    | 0
 9    | 2    | 0
 9    | 3    | 0
 9    | 4    | 0
 9    | 5    | 0
 9    | 6    | 0
 9    | 7    | 0
 9    | 8    | 1
 9    | 9    | 0
 9    | 10   | 1
 9    | 11   | 0
 9    | 12   | 0
 9    | 13   | 0
 9    | 14   | 0
 9    | 15   | 0
 9    | 16   | 0
 9    | 17   | 0
 9    | 18   | 0
 9    | 19   | 0
 10   | 1    | 0
 10   | 2    | 0
 10   | 3    | 0
 10   | 4    | 0
 10   | 5    | 0
 10   | 6    | 0
 10   | 7    | 0
 10   | 8    | 0
 10   | 9    | 1
 10   | 10   | 0
 10   | 11   | 1
 10   | 12   | 0
 10   | 13   | 0
 10   | 14   | 0
 10   | 15   | 0
 10   | 16   | 0
 10   | 17   | 0
 10   | 18   | 0
 10   | 19   | 0
 11   | 1    | 0
 11   | 2    | 0
 11   | 3    | 0
 11   | 4    | 0
 11   | 5    | 0
 11   | 6    | 0
 11   | 7    | 0
 11   | 8    | 0
 11   | 9    | 0
 11   | 10   | 1
 11   | 11   | 0
 11   | 12   | 1
 11   | 13   | 0
 11   | 14   | 0
 11   | 15   | 0
 11   | 16   | 0
 11   | 17   | 0
 11   | 18   | 0
 11   | 19   | 0
 12   | 1    | 0
 12   | 2    | 0
 12   | 3    | 0
 12   | 4    | 0
 12   | 5    | 0
 12   | 6    | 0
 12   | 7    | 0
 12   | 8    | 0
 12   | 9    | 0
 12   | 10   | 0
 12   | 11   | 1
 12   | 12   | 0
 12   | 13   | 1
 12   | 14   | 0
 12   | 15   | 0
 12   | 16   | 0
 12   | 17   | 0
 12   | 18   | 0
 12   | 19   | 0
 13   | 1    | 0
 13   | 2    | 0
 13   | 3    | 0
 13   | 4    | 0
 13   | 5    | 0
 13   | 6    | 0
 13   | 7    | 0
 13   | 8    | 0
 13   | 9    | 0
 13   | 10   | 0
 13   | 11   | 0
 13   | 12   | 1
 13   | 13   | 0
 13   | 14   | 1
 13   | 15   | 0
 13   | 16   | 0
 13   | 17   | 0
 13   | 18   | 0
 13   | 19   | 0
 14   | 1    | 0
 14   | 2    | 0
 14   | 3    | 0
 14   | 4    | 0
 14   | 5    | 0
 14   | 6    | 0
 14   | 7    | 0
 14   | 8    | 0
 14   | 9    | 0
 14   | 10   | 0
 14   | 11   | 0
 14   | 12   | 0
 14   | 13   | 1
 14   | 14   | 0
 14   | 15   | 1
 14   | 16   | 0
 14   | 17   | 0
 14   | 18   | 0
 14   | 19   | 0
 15   | 1    | 0
 15   | 2    | 0
 15   | 3    | 0
 15   | 4    | 0
 15   | 5    | 0
 15   | 6    | 0
 15   | 7    | 0
 15   | 8    | 0
 15   | 9    | 0
 15   | 10   | 0
 15   | 11   | 0
 15   | 12   | 0
 15   | 13   | 0
 15   | 14   | 1
 15   | 15   | 0
 15   | 16   | 1
 15   | 17   | 0
 15   | 18   | 0
 15   | 19   | 0
 16   | 1    | 0
 16   | 2    | 0
 16   | 3    | 0
 16   | 4    | 0
 16   | 5    | 0
 16   | 6    | 0
 16   | 7    | 0
 16   | 8    | 0
 16   | 9    | 0
 16   | 10   | 0
 16   | 11   | 0
 16   | 12   | 0
 16   | 13   | 0
 16   | 14   | 0
 16   | 15   | 1
 16   | 16   | 0
 16   | 17   | 1
 16   | 18   | 0
 16   | 19   | 0
 17   | 1    | 0
 17   | 2    | 0
 17   | 3    | 0
 17   | 4    | 0
 17   | 5    | 0
 17   | 6    | 0
 17   | 7    | 0
 17   | 8    | 0
 17   | 9    | 0
 17   | 10   | 0
 17   | 11   | 0
 17   | 12   | 0
 17   | 13   | 0
 17   | 14   | 0
 17   | 15   | 0
 17   | 16   | 1
 17   | 17   | 0
 17   | 18   | 1
 17   | 19   | 0
 18   | 1    | 0
 18   | 2    | 0
 18   | 3    | 0
 18   | 4    | 0
 18   | 5    | 0
 18   | 6    | 0
 18   | 7    | 0
 18   | 8    | 0
 18   | 9    | 0
 18   | 10   | 0
 18   | 11   | 0
 18   | 12   | 0
 18   | 13   | 0
 18   | 14   | 0
 18   | 15   | 0
 18   | 16   | 0
 18   | 17   | 1
 18   | 18   | 0
 18   | 19   | 1
 19   | 1    | 0
 19   | 2    | 0
 19   | 3    | 0
 19   | 4    | 0
 19   | 5    | 0
 19   | 6    | 0
 19   | 7    | 0
 19   | 8    | 0
 19   | 9    | 0
 19   | 10   | 0
 19   | 11   | 0
 19   | 12   | 0
 19   | 13   | 0
 19   | 14   | 0
 19   | 15   | 0
 19   | 16   | 0
 19   | 17   | 0
 19   | 18   | 1
 19   | 19   | 0
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, size(allshortestpaths((s1)-[:e*0..]-(s2))) order by s1id, s2id;
 s1id | s2id | count 
------+------+-------
 1    | 1    | 1
 1    | 2    | 1
 1    | 3    | 1
 1    | 4    | 1
 1    | 5    | 1
 1    | 6    | 1
 1    | 7    | 1
 1    | 8    | 1
 1    | 9    | 1
 1    | 10   | 1
 1    | 11   | 1
 1    | 12   | 1
 1    | 13   | 1
 1    | 14   | 1
 1    | 15   | 1
 1    | 16   | 1
 1    | 17   | 1
 1    | 18   | 1
 1    | 19   | 1
 2    | 1    | 1
 2    | 2    | 1
 2    | 3    | 1
 2    | 4    | 1
 2    | 5    | 1
 2    | 6    | 1
 2    | 7    | 1
 2    | 8    | 1
 2    | 9    | 1
 2    | 10   | 1
 2    | 11   | 1
 2    | 12   | 1
 2    | 13   | 1
 2    | 14   | 1
 2    | 15   | 1
 2    | 16   | 1
 2    | 17   | 1
 2    | 18   | 1
 2    | 19   | 1
 3    | 1    | 1
 3    | 2    | 1
 3    | 3    | 1
 3    | 4    | 1
 3    | 5    | 1
 3    | 6    | 1
 3    | 7    | 1
 3    | 8    | 1
 3    | 9    | 1
 3    | 10   | 1
 3    | 11   | 1
 3    | 12   | 1
 3    | 13   | 1
 3    | 14   | 1
 3    | 15   | 1
 3    | 16   | 1
 3    | 17   | 1
 3    | 18   | 1
 3    | 19   | 1
 4    | 1    | 1
 4    | 2    | 1
 4    | 3    | 1
 4    | 4    | 1
 4    | 5    | 1
 4    | 6    | 1
 4    | 7    | 1
 4    | 8    | 1
 4    | 9    | 1
 4    | 10   | 1
 4    | 11   | 1
 4    | 12   | 1
 4    | 13   | 1
 4    | 14   | 1
 4    | 15   | 1
 4    | 16   | 1
 4    | 17   | 1
 4    | 18   | 1
 4    | 19   | 1
 5    | 1    | 1
 5    | 2    | 1
 5    | 3    | 1
 5    | 4    | 1
 5    | 5    | 1
 5    | 6    | 1
 5    | 7    | 1
 5    | 8    | 1
 5    | 9    | 1
 5    | 10   | 1
 5    | 11   | 1
 5    | 12   | 1
 5    | 13   | 1
 5    | 14   | 1
 5    | 15   | 1
 5    | 16   | 1
 5    | 17   | 1
 5    | 18   | 1
 5    | 19   | 1
 6    | 1    | 1
 6    | 2    | 1
 6    | 3    | 1
 6    | 4    | 1
 6    | 5    | 1
 6    | 6    | 1
 6    | 7    | 1
 6    | 8    | 1
 6    | 9    | 1
 6    | 10   | 1
 6    | 11   | 1
 6    | 12   | 1
 6    | 13   | 1
 6    | 14   | 1
 6    | 15   | 1
 6    | 16   | 1
 6    | 17   | 1
 6    | 18   | 1
 6    | 19   | 1
 7    | 1    | 1
 7    | 2    | 1
 7    | 3    | 1
 7    | 4    | 1
 7    | 5    | 1
 7    | 6    | 1
 7    | 7    | 1
 7    | 8    | 1
 7    | 9    | 1
 7    | 10   | 1
 7    | 11   | 1
 7    | 12   | 1
 7    | 13   | 1
 7    | 14   | 1
 7    | 15   | 1
 7    | 16   | 1
 7    | 17   | 1
 7    | 18   | 1
 7    | 19   | 1
 8    | 1    | 1
 8    | 2    | 1
 8    | 3    | 1
 8    | 4    | 1
 8    | 5    | 1
 8    | 6    | 1
 8    | 7    | 1
 8    | 8    | 1
 8    | 9    | 1
 8    | 10   | 1
 8    | 11   | 1
 8    | 12   | 1
 8    | 13   | 1
 8    | 14   | 1
 8    | 15   | 1
 8    | 16   | 1
 8    | 17   | 1
 8    | 18   | 1
 8    | 19   | 1
 9    | 1    | 1
 9    | 2    | 1
 9    | 3    | 1
 9    | 4    | 1
 9    | 5    | 1
 9    | 6    | 1
 9    | 7    | 1
 9    | 8    | 1
 9    | 9    | 1
 9    | 10   | 1
 9    | 11   | 1
 9    | 12   | 1
 9    | 13   | 1
 9    | 14   | 1
 9    | 15   | 1
 9    | 16   | 1
 9    | 17   | 1
 9    | 18   | 1
 9    | 19   | 1
 10   | 1    | 1
 10   | 2    | 1
 10   | 3    | 1
 10   | 4    | 1
 10   | 5    | 1
 10   | 6    | 1
 10   | 7    | 1
 10   | 8    | 1
 10   | 9    | 1
 10   | 10   | 1
 10   | 11   | 1
 10   | 12   | 1
 10   | 13   | 1
 10   | 14   | 1
 10   | 15   | 1
 10   | 16   | 1
 10   | 17   | 1
 10   | 18   | 1
 10   | 19   | 1
 11   | 1    | 1
 11   | 2    | 1
 11   | 3    | 1
 11   | 4    | 1
 11   | 5    | 1
 11   | 6    | 1
 11   | 7    | 1
 11   | 8    | 1
 11   | 9    | 1
 11   | 10   | 1
 11   | 11   | 1
 11   | 12   | 1
 11   | 13   | 1
 11   | 14   | 1
 11   | 15   | 1
 11   | 16   | 1
 11   | 17   | 1
 11   | 18   | 1
 11   | 19   | 1
 12   | 1    | 1
 12   | 2    | 1
 12   | 3    | 1
 12   | 4    | 1
 12   | 5    | 1
 12   | 6    | 1
 12   | 7    | 1
 12   | 8    | 1
 12   | 9    | 1
 12   | 10   | 1
 12   | 11   | 1
 12   | 12   | 1
 12   | 13   | 1
 12   | 14   | 1
 12   | 15   | 1
 12   | 16   | 1
 12   | 17   | 1
 12   | 18   | 1
 12   | 19   | 1
 13   | 1    | 1
 13   | 2    | 1
 13   | 3    | 1
 13   | 4    | 1
 13   | 5    | 1
 13   | 6    | 1
 13   | 7    | 1
 13   | 8    | 1
 13   | 9    | 1
 13   | 10   | 1
 13   | 11   | 1
 13   | 12   | 1
 13   | 13   | 1
 13   | 14   | 1
 13   | 15   | 1
 13   | 16   | 1
 13   | 17   | 1
 13   | 18   | 1
 13   | 19   | 1
 14   | 1    | 1
 14   | 2    | 1
 14   | 3    | 1
 14   | 4    | 1
 14   | 5    | 1
 14   | 6    | 1
 14   | 7    | 1
 14   | 8    | 1
 14   | 9    | 1
 14   | 10   | 1
 14   | 11   | 1
 14   | 12   | 1
 14   | 13   | 1
 14   | 14   | 1
 14   | 15   | 1
 14   | 16   | 1
 14   | 17   | 1
 14   | 18   | 1
 14   | 19   | 1
 15   | 1    | 1
 15   | 2    | 1
 15   | 3    | 1
 15   | 4    | 1
 15   | 5    | 1
 15   | 6    | 1
 15   | 7    | 1
 15   | 8    | 1
 15   | 9    | 1
 15   | 10   | 1
 15   | 11   | 1
 15   | 12   | 1
 15   | 13   | 1
 15   | 14   | 1
 15   | 15   | 1
 15   | 16   | 1
 15   | 17   | 1
 15   | 18   | 1
 15   | 19   | 1
 16   | 1    | 1
 16   | 2    | 1
 16   | 3    | 1
 16   | 4    | 1
 16   | 5    | 1
 16   | 6    | 1
 16   | 7    | 1
 16   | 8    | 1
 16   | 9    | 1
 16   | 10   | 1
 16   | 11   | 1
 16   | 12   | 1
 16   | 13   | 1
 16   | 14   | 1
 16   | 15   | 1
 16   | 16   | 1
 16   | 17   | 1
 16   | 18   | 1
 16   | 19   | 1
 17   | 1    | 1
 17   | 2    | 1
 17   | 3    | 1
 17   | 4    | 1
 17   | 5    | 1
 17   | 6    | 1
 17   | 7    | 1
 17   | 8    | 1
 17   | 9    | 1
 17   | 10   | 1
 17   | 11   | 1
 17   | 12   | 1
 17   | 13   | 1
 17   | 14   | 1
 17   | 15   | 1
 17   | 16   | 1
 17   | 17   | 1
 17   | 18   | 1
 17   | 19   | 1
 18   | 1    | 1
 18   | 2    | 1
 18   | 3    | 1
 18   | 4    | 1
 18   | 5    | 1
 18   | 6    | 1
 18   | 7    | 1
 18   | 8    | 1
 18   | 9    | 1
 18   | 10   | 1
 18   | 11   | 1
 18   | 12   | 1
 18   | 13   | 1
 18   | 14   | 1
 18   | 15   | 1
 18   | 16   | 1
 18   | 17   | 1
 18   | 18   | 1
 18   | 19   | 1
 19   | 1    | 1
 19   | 2    | 1
 19   | 3    | 1
 19   | 4    | 1
 19   | 5    | 1
 19   | 6    | 1
 19   | 7    | 1
 19   | 8    | 1
 19   | 9    | 1
 19   | 10   | 1
 19   | 11   | 1
 19   | 12   | 1
 19   | 13   | 1
 19   | 14   | 1
 19   | 15   | 1
 19   | 16   | 1
 19   | 17   | 1
 19   | 18   | 1
 19   | 19   | 1
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, size(allshortestpaths((s1)-[:e*]-(s2))) order by s1id, s2id;
 s1id | s2id | count 
------+------+-------
 1    | 1    | 1
 1    | 2    | 1
 1    | 3    | 1
 1    | 4    | 1
 1    | 5    | 1
 1    | 6    | 1
 1    | 7    | 1
 1    | 8    | 1
 1    | 9    | 1
 1    | 10   | 1
 1    | 11   | 1
 1    | 12   | 1
 1    | 13   | 1
 1    | 14   | 1
 1    | 15   | 1
 1    | 16   | 1
 1    | 17   | 1
 1    | 18   | 1
 1    | 19   | 1
 2    | 1    | 1
 2    | 2    | 2
 2    | 3    | 1
 2    | 4    | 1
 2    | 5    | 1
 2    | 6    | 1
 2    | 7    | 1
 2    | 8    | 1
 2    | 9    | 1
 2    | 10   | 1
 2    | 11   | 1
 2    | 12   | 1
 2    | 13   | 1
 2    | 14   | 1
 2    | 15   | 1
 2    | 16   | 1
 2    | 17   | 1
 2    | 18   | 1
 2    | 19   | 1
 3    | 1    | 1
 3    | 2    | 1
 3    | 3    | 2
 3    | 4    | 1
 3    | 5    | 1
 3    | 6    | 1
 3    | 7    | 1
 3    | 8    | 1
 3    | 9    | 1
 3    | 10   | 1
 3    | 11   | 1
 3    | 12   | 1
 3    | 13   | 1
 3    | 14   | 1
 3    | 15   | 1
 3    | 16   | 1
 3    | 17   | 1
 3    | 18   | 1
 3    | 19   | 1
 4    | 1    | 1
 4    | 2    | 1
 4    | 3    | 1
 4    | 4    | 2
 4    | 5    | 1
 4    | 6    | 1
 4    | 7    | 1
 4    | 8    | 1
 4    | 9    | 1
 4    | 10   | 1
 4    | 11   | 1
 4    | 12   | 1
 4    | 13   | 1
 4    | 14   | 1
 4    | 15   | 1
 4    | 16   | 1
 4    | 17   | 1
 4    | 18   | 1
 4    | 19   | 1
 5    | 1    | 1
 5    | 2    | 1
 5    | 3    | 1
 5    | 4    | 1
 5    | 5    | 2
 5    | 6    | 1
 5    | 7    | 1
 5    | 8    | 1
 5    | 9    | 1
 5    | 10   | 1
 5    | 11   | 1
 5    | 12   | 1
 5    | 13   | 1
 5    | 14   | 1
 5    | 15   | 1
 5    | 16   | 1
 5    | 17   | 1
 5    | 18   | 1
 5    | 19   | 1
 6    | 1    | 1
 6    | 2    | 1
 6    | 3    | 1
 6    | 4    | 1
 6    | 5    | 1
 6    | 6    | 2
 6    | 7    | 1
 6    | 8    | 1
 6    | 9    | 1
 6    | 10   | 1
 6    | 11   | 1
 6    | 12   | 1
 6    | 13   | 1
 6    | 14   | 1
 6    | 15   | 1
 6    | 16   | 1
 6    | 17   | 1
 6    | 18   | 1
 6    | 19   | 1
 7    | 1    | 1
 7    | 2    | 1
 7    | 3    | 1
 7    | 4    | 1
 7    | 5    | 1
 7    | 6    | 1
 7    | 7    | 2
 7    | 8    | 1
 7    | 9    | 1
 7    | 10   | 1
 7    | 11   | 1
 7    | 12   | 1
 7    | 13   | 1
 7    | 14   | 1
 7    | 15   | 1
 7    | 16   | 1
 7    | 17   | 1
 7    | 18   | 1
 7    | 19   | 1
 8    | 1    | 1
 8    | 2    | 1
 8    | 3    | 1
 8    | 4    | 1
 8    | 5    | 1
 8    | 6    | 1
 8    | 7    | 1
 8    | 8    | 2
 8    | 9    | 1
 8    | 10   | 1
 8    | 11   | 1
 8    | 12   | 1
 8    | 13   | 1
 8    | 14   | 1
 8    | 15   | 1
 8    | 16   | 1
 8    | 17   | 1
 8    | 18   | 1
 8    | 19   | 1
 9    | 1    | 1
 9    | 2    | 1
 9    | 3    | 1
 9    | 4    | 1
 9    | 5    | 1
 9    | 6    | 1
 9    | 7    | 1
 9    | 8    | 1
 9    | 9    | 2
 9    | 10   | 1
 9    | 11   | 1
 9    | 12   | 1
 9    | 13   | 1
 9    | 14   | 1
 9    | 15   | 1
 9    | 16   | 1
 9    | 17   | 1
 9    | 18   | 1
 9    | 19   | 1
 10   | 1    | 1
 10   | 2    | 1
 10   | 3    | 1
 10   | 4    | 1
 10   | 5    | 1
 10   | 6    | 1
 10   | 7    | 1
 10   | 8    | 1
 10   | 9    | 1
 10   | 10   | 2
 10   | 11   | 1
 10   | 12   | 1
 10   | 13   | 1
 10   | 14   | 1
 10   | 15   | 1
 10   | 16   | 1
 10   | 17   | 1
 10   | 18   | 1
 10   | 19   | 1
 11   | 1    | 1
 11   | 2    | 1
 11   | 3    | 1
 11   | 4    | 1
 11   | 5    | 1
 11   | 6    | 1
 11   | 7    | 1
 11   | 8    | 1
 11   | 9    | 1
 11   | 10   | 1
 11   | 11   | 2
 11   | 12   | 1
 11   | 13   | 1
 11   | 14   | 1
 11   | 15   | 1
 11   | 16   | 1
 11   | 17   | 1
 11   | 18   | 1
 11   | 19   | 1
 12   | 1    | 1
 12   | 2    | 1
 12   | 3    | 1
 12   | 4    | 1
 12   | 5    | 1
 12   | 6    | 1
 12   | 7    | 1
 12   | 8    | 1
 12   | 9    | 1
 12   | 10   | 1
 12   | 11   | 1
 12   | 12   | 2
 12   | 13   | 1
 12   | 14   | 1
 12   | 15   | 1
 12   | 16   | 1
 12   | 17   | 1
 12   | 18   | 1
 12   | 19   | 1
 13   | 1    | 1
 13   | 2    | 1
 13   | 3    | 1
 13   | 4    | 1
 13   | 5    | 1
 13   | 6    | 1
 13   | 7    | 1
 13   | 8    | 1
 13   | 9    | 1
 13   | 10   | 1
 13   | 11   | 1
 13   | 12   | 1
 13   | 13   | 2
 13   | 14   | 1
 13   | 15   | 1
 13   | 16   | 1
 13   | 17   | 1
 13   | 18   | 1
 13   | 19   | 1
 14   | 1    | 1
 14   | 2    | 1
 14   | 3    | 1
 14   | 4    | 1
 14   | 5    | 1
 14   | 6    | 1
 14   | 7    | 1
 14   | 8    | 1
 14   | 9    | 1
 14   | 10   | 1
 14   | 11   | 1
 14   | 12   | 1
 14   | 13   | 1
 14   | 14   | 2
 14   | 15   | 1
 14   | 16   | 1
 14   | 17   | 1
 14   | 18   | 1
 14   | 19   | 1
 15   | 1    | 1
 15   | 2    | 1
 15   | 3    | 1
 15   | 4    | 1
 15   | 5    | 1
 15   | 6    | 1
 15   | 7    | 1
 15   | 8    | 1
 15   | 9    | 1
 15   | 10   | 1
 15   | 11   | 1
 15   | 12   | 1
 15   | 13   | 1
 15   | 14   | 1
 15   | 15   | 2
 15   | 16   | 1
 15   | 17   | 1
 15   | 18   | 1
 15   | 19   | 1
 16   | 1    | 1
 16   | 2    | 1
 16   | 3    | 1
 16   | 4    | 1
 16   | 5    | 1
 16   | 6    | 1
 16   | 7    | 1
 16   | 8    | 1
 16   | 9    | 1
 16   | 10   | 1
 16   | 11   | 1
 16   | 12   | 1
 16   | 13   | 1
 16   | 14   | 1
 16   | 15   | 1
 16   | 16   | 2
 16   | 17   | 1
 16   | 18   | 1
 16   | 19   | 1
 17   | 1    | 1
 17   | 2    | 1
 17   | 3    | 1
 17   | 4    | 1
 17   | 5    | 1
 17   | 6    | 1
 17   | 7    | 1
 17   | 8    | 1
 17   | 9    | 1
 17   | 10   | 1
 17   | 11   | 1
 17   | 12   | 1
 17   | 13   | 1
 17   | 14   | 1
 17   | 15   | 1
 17   | 16   | 1
 17   | 17   | 2
 17   | 18   | 1
 17   | 19   | 1
 18   | 1    | 1
 18   | 2    | 1
 18   | 3    | 1
 18   | 4    | 1
 18   | 5    | 1
 18   | 6    | 1
 18   | 7    | 1
 18   | 8    | 1
 18   | 9    | 1
 18   | 10   | 1
 18   | 11   | 1
 18   | 12   | 1
 18   | 13   | 1
 18   | 14   | 1
 18   | 15   | 1
 18   | 16   | 1
 18   | 17   | 1
 18   | 18   | 2
 18   | 19   | 1
 19   | 1    | 1
 19   | 2    | 1
 19   | 3    | 1
 19   | 4    | 1
 19   | 5    | 1
 19   | 6    | 1
 19   | 7    | 1
 19   | 8    | 1
 19   | 9    | 1
 19   | 10   | 1
 19   | 11   | 1
 19   | 12   | 1
 19   | 13   | 1
 19   | 14   | 1
 19   | 15   | 1
 19   | 16   | 1
 19   | 17   | 1
 19   | 18   | 1
 19   | 19   | 1
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, size(allshortestpaths((s1)-[:e*..2]-(s2))) order by s1id, s2id;
 s1id | s2id | count 
------+------+-------
 1    | 1    | 1
 1    | 2    | 1
 1    | 3    | 1
 1    | 4    | 0
 1    | 5    | 0
 1    | 6    | 0
 1    | 7    | 0
 1    | 8    | 0
 1    | 9    | 0
 1    | 10   | 0
 1    | 11   | 0
 1    | 12   | 0
 1    | 13   | 0
 1    | 14   | 0
 1    | 15   | 0
 1    | 16   | 0
 1    | 17   | 0
 1    | 18   | 0
 1    | 19   | 0
 2    | 1    | 1
 2    | 2    | 2
 2    | 3    | 1
 2    | 4    | 1
 2    | 5    | 0
 2    | 6    | 0
 2    | 7    | 0
 2    | 8    | 0
 2    | 9    | 0
 2    | 10   | 0
 2    | 11   | 0
 2    | 12   | 0
 2    | 13   | 0
 2    | 14   | 0
 2    | 15   | 0
 2    | 16   | 0
 2    | 17   | 0
 2    | 18   | 0
 2    | 19   | 0
 3    | 1    | 1
 3    | 2    | 1
 3    | 3    | 2
 3    | 4    | 1
 3    | 5    | 1
 3    | 6    | 0
 3    | 7    | 0
 3    | 8    | 0
 3    | 9    | 0
 3    | 10   | 0
 3    | 11   | 0
 3    | 12   | 0
 3    | 13   | 0
 3    | 14   | 0
 3    | 15   | 0
 3    | 16   | 0
 3    | 17   | 0
 3    | 18   | 0
 3    | 19   | 0
 4    | 1    | 0
 4    | 2    | 1
 4    | 3    | 1
 4    | 4    | 2
 4    | 5    | 1
 4    | 6    | 1
 4    | 7    | 0
 4    | 8    | 0
 4    | 9    | 0
 4    | 10   | 0
 4    | 11   | 0
 4    | 12   | 0
 4    | 13   | 0
 4    | 14   | 0
 4    | 15   | 0
 4    | 16   | 0
 4    | 17   | 0
 4    | 18   | 0
 4    | 19   | 0
 5    | 1    | 0
 5    | 2    | 0
 5    | 3    | 1
 5    | 4    | 1
 5    | 5    | 2
 5    | 6    | 1
 5    | 7    | 1
 5    | 8    | 0
 5    | 9    | 0
 5    | 10   | 0
 5    | 11   | 0
 5    | 12   | 0
 5    | 13   | 0
 5    | 14   | 0
 5    | 15   | 0
 5    | 16   | 0
 5    | 17   | 0
 5    | 18   | 0
 5    | 19   | 0
 6    | 1    | 0
 6    | 2    | 0
 6    | 3    | 0
 6    | 4    | 1
 6    | 5    | 1
 6    | 6    | 2
 6    | 7    | 1
 6    | 8    | 1
 6    | 9    | 0
 6    | 10   | 0
 6    | 11   | 0
 6    | 12   | 0
 6    | 13   | 0
 6    | 14   | 0
 6    | 15   | 0
 6    | 16   | 0
 6    | 17   | 0
 6    | 18   | 0
 6    | 19   | 0
 7    | 1    | 0
 7    | 2    | 0
 7    | 3    | 0
 7    | 4    | 0
 7    | 5    | 1
 7    | 6    | 1
 7    | 7    | 2
 7    | 8    | 1
 7    | 9    | 1
 7    | 10   | 0
 7    | 11   | 0
 7    | 12   | 0
 7    | 13   | 0
 7    | 14   | 0
 7    | 15   | 0
 7    | 16   | 0
 7    | 17   | 0
 7    | 18   | 0
 7    | 19   | 0
 8    | 1    | 0
 8    | 2    | 0
 8    | 3    | 0
 8    | 4    | 0
 8    | 5    | 0
 8    | 6    | 1
 8    | 7    | 1
 8    | 8    | 2
 8    | 9    | 1
 8    | 10   | 1
 8    | 11   | 0
 8    | 12   | 0
 8    | 13   | 0
 8    | 14   | 0
 8    | 15   | 0
 8    | 16   | 0
 8    | 17   | 0
 8    | 18   | 0
 8    | 19   | 0
 9    | 1    | 0
 9    | 2    | 0
 9    | 3    | 0
 9    | 4    | 0
 9    | 5    | 0
 9    | 6    | 0
 9    | 7    | 1
 9    | 8    | 1
 9    | 9    | 2
 9    | 10   | 1
 9    | 11   | 1
 9    | 12   | 0
 9    | 13   | 0
 9    | 14   | 0
 9    | 15   | 0
 9    | 16   | 0
 9    | 17   | 0
 9    | 18   | 0
 9    | 19   | 0
 10   | 1    | 0
 10   | 2    | 0
 10   | 3    | 0
 10   | 4    | 0
 10   | 5    | 0
 10   | 6    | 0
 10   | 7    | 0
 10   | 8    | 1
 10   | 9    | 1
 10   | 10   | 2
 10   | 11   | 1
 10   | 12   | 1
 10   | 13   | 0
 10   | 14   | 0
 10   | 15   | 0
 10   | 16   | 0
 10   | 17   | 0
 10   | 18   | 0
 10   | 19   | 0
 11   | 1    | 0
 11   | 2    | 0
 11   | 3    | 0
 11   | 4    | 0
 11   | 5    | 0
 11   | 6    | 0
 11   | 7    | 0
 11   | 8    | 0
 11   | 9    | 1
 11   | 10   | 1
 11   | 11   | 2
 11   | 12   | 1
 11   | 13   | 1
 11   | 14   | 0
 11   | 15   | 0
 11   | 16   | 0
 11   | 17   | 0
 11   | 18   | 0
 11   | 19   | 0
 12   | 1    | 0
 12   | 2    | 0
 12   | 3    | 0
 12   | 4    | 0
 12   | 5    | 0
 12   | 6    | 0
 12   | 7    | 0
 12   | 8    | 0
 12   | 9    | 0
 12   | 10   | 1
 12   | 11   | 1
 12   | 12   | 2
 12   | 13   | 1
 12   | 14   | 1
 12   | 15   | 0
 12   | 16   | 0
 12   | 17   | 0
 12   | 18   | 0
 12   | 19   | 0
 13   | 1    | 0
 13   | 2    | 0
 13   | 3    | 0
 13   | 4    | 0
 13   | 5    | 0
 13   | 6    | 0
 13   | 7    | 0
 13   | 8    | 0
 13   | 9    | 0
 13   | 10   | 0
 13   | 11   | 1
 13   | 12   | 1
 13   | 13   | 2
 13   | 14   | 1
 13   | 15   | 1
 13   | 16   | 0
 13   | 17   | 0
 13   | 18   | 0
 13   | 19   | 0
 14   | 1    | 0
 14   | 2    | 0
 14   | 3    | 0
 14   | 4    | 0
 14   | 5    | 0
 14   | 6    | 0
 14   | 7    | 0
 14   | 8    | 0
 14   | 9    | 0
 14   | 10   | 0
 14   | 11   | 0
 14   | 12   | 1
 14   | 13   | 1
 14   | 14   | 2
 14   | 15   | 1
 14   | 16   | 1
 14   | 17   | 0
 14   | 18   | 0
 14   | 19   | 0
 15   | 1    | 0
 15   | 2    | 0
 15   | 3    | 0
 15   | 4    | 0
 15   | 5    | 0
 15   | 6    | 0
 15   | 7    | 0
 15   | 8    | 0
 15   | 9    | 0
 15   | 10   | 0
 15   | 11   | 0
 15   | 12   | 0
 15   | 13   | 1
 15   | 14   | 1
 15   | 15   | 2
 15   | 16   | 1
 15   | 17   | 1
 15   | 18   | 0
 15   | 19   | 0
 16   | 1    | 0
 16   | 2    | 0
 16   | 3    | 0
 16   | 4    | 0
 16   | 5    | 0
 16   | 6    | 0
 16   | 7    | 0
 16   | 8    | 0
 16   | 9    | 0
 16   | 10   | 0
 16   | 11   | 0
 16   | 12   | 0
 16   | 13   | 0
 16   | 14   | 1
 16   | 15   | 1
 16   | 16   | 2
 16   | 17   | 1
 16   | 18   | 1
 16   | 19   | 0
 17   | 1    | 0
 17   | 2    | 0
 17   | 3    | 0
 17   | 4    | 0
 17   | 5    | 0
 17   | 6    | 0
 17   | 7    | 0
 17   | 8    | 0
 17   | 9    | 0
 17   | 10   | 0
 17   | 11   | 0
 17   | 12   | 0
 17   | 13   | 0
 17   | 14   | 0
 17   | 15   | 1
 17   | 16   | 1
 17   | 17   | 2
 17   | 18   | 1
 17   | 19   | 1
 18   | 1    | 0
 18   | 2    | 0
 18   | 3    | 0
 18   | 4    | 0
 18   | 5    | 0
 18   | 6    | 0
 18   | 7    | 0
 18   | 8    | 0
 18   | 9    | 0
 18   | 10   | 0
 18   | 11   | 0
 18   | 12   | 0
 18   | 13   | 0
 18   | 14   | 0
 18   | 15   | 0
 18   | 16   | 1
 18   | 17   | 1
 18   | 18   | 2
 18   | 19   | 1
 19   | 1    | 0
 19   | 2    | 0
 19   | 3    | 0
 19   | 4    | 0
 19   | 5    | 0
 19   | 6    | 0
 19   | 7    | 0
 19   | 8    | 0
 19   | 9    | 0
 19   | 10   | 0
 19   | 11   | 0
 19   | 12   | 0
 19   | 13   | 0
 19   | 14   | 0
 19   | 15   | 0
 19   | 16   | 0
 19   | 17   | 1
 19   | 18   | 1
 19   | 19   | 1
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*0..0]->(s2)))) order by s1id, s2id;
 s1id | s2id | ids  
------+------+------
 1    | 1    | {1}
 1    | 2    | {}
 1    | 3    | {}
 1    | 4    | {}
 1    | 5    | {}
 1    | 6    | {}
 1    | 7    | {}
 1    | 8    | {}
 1    | 9    | {}
 1    | 10   | {}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {2}
 2    | 3    | {}
 2    | 4    | {}
 2    | 5    | {}
 2    | 6    | {}
 2    | 7    | {}
 2    | 8    | {}
 2    | 9    | {}
 2    | 10   | {}
 2    | 11   | {}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {3}
 3    | 4    | {}
 3    | 5    | {}
 3    | 6    | {}
 3    | 7    | {}
 3    | 8    | {}
 3    | 9    | {}
 3    | 10   | {}
 3    | 11   | {}
 3    | 12   | {}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {4}
 4    | 5    | {}
 4    | 6    | {}
 4    | 7    | {}
 4    | 8    | {}
 4    | 9    | {}
 4    | 10   | {}
 4    | 11   | {}
 4    | 12   | {}
 4    | 13   | {}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {5}
 5    | 6    | {}
 5    | 7    | {}
 5    | 8    | {}
 5    | 9    | {}
 5    | 10   | {}
 5    | 11   | {}
 5    | 12   | {}
 5    | 13   | {}
 5    | 14   | {}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {6}
 6    | 7    | {}
 6    | 8    | {}
 6    | 9    | {}
 6    | 10   | {}
 6    | 11   | {}
 6    | 12   | {}
 6    | 13   | {}
 6    | 14   | {}
 6    | 15   | {}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {7}
 7    | 8    | {}
 7    | 9    | {}
 7    | 10   | {}
 7    | 11   | {}
 7    | 12   | {}
 7    | 13   | {}
 7    | 14   | {}
 7    | 15   | {}
 7    | 16   | {}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {8}
 8    | 9    | {}
 8    | 10   | {}
 8    | 11   | {}
 8    | 12   | {}
 8    | 13   | {}
 8    | 14   | {}
 8    | 15   | {}
 8    | 16   | {}
 8    | 17   | {}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {9}
 9    | 10   | {}
 9    | 11   | {}
 9    | 12   | {}
 9    | 13   | {}
 9    | 14   | {}
 9    | 15   | {}
 9    | 16   | {}
 9    | 17   | {}
 9    | 18   | {}
 9    | 19   | {}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {10}
 10   | 11   | {}
 10   | 12   | {}
 10   | 13   | {}
 10   | 14   | {}
 10   | 15   | {}
 10   | 16   | {}
 10   | 17   | {}
 10   | 18   | {}
 10   | 19   | {}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {11}
 11   | 12   | {}
 11   | 13   | {}
 11   | 14   | {}
 11   | 15   | {}
 11   | 16   | {}
 11   | 17   | {}
 11   | 18   | {}
 11   | 19   | {}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {12}
 12   | 13   | {}
 12   | 14   | {}
 12   | 15   | {}
 12   | 16   | {}
 12   | 17   | {}
 12   | 18   | {}
 12   | 19   | {}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {13}
 13   | 14   | {}
 13   | 15   | {}
 13   | 16   | {}
 13   | 17   | {}
 13   | 18   | {}
 13   | 19   | {}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {14}
 14   | 15   | {}
 14   | 16   | {}
 14   | 17   | {}
 14   | 18   | {}
 14   | 19   | {}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {15}
 15   | 16   | {}
 15   | 17   | {}
 15   | 18   | {}
 15   | 19   | {}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {16}
 16   | 17   | {}
 16   | 18   | {}
 16   | 19   | {}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {17}
 17   | 18   | {}
 17   | 19   | {}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {18}
 18   | 19   | {}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {19}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..1]->(s2)))) order by s1id, s2id;
 s1id | s2id |   ids   
------+------+---------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {}
 1    | 4    | {}
 1    | 5    | {}
 1    | 6    | {}
 1    | 7    | {}
 1    | 8    | {}
 1    | 9    | {}
 1    | 10   | {}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {}
 2    | 5    | {}
 2    | 6    | {}
 2    | 7    | {}
 2    | 8    | {}
 2    | 9    | {}
 2    | 10   | {}
 2    | 11   | {}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {}
 3    | 6    | {}
 3    | 7    | {}
 3    | 8    | {}
 3    | 9    | {}
 3    | 10   | {}
 3    | 11   | {}
 3    | 12   | {}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {}
 4    | 7    | {}
 4    | 8    | {}
 4    | 9    | {}
 4    | 10   | {}
 4    | 11   | {}
 4    | 12   | {}
 4    | 13   | {}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {}
 5    | 8    | {}
 5    | 9    | {}
 5    | 10   | {}
 5    | 11   | {}
 5    | 12   | {}
 5    | 13   | {}
 5    | 14   | {}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {}
 6    | 9    | {}
 6    | 10   | {}
 6    | 11   | {}
 6    | 12   | {}
 6    | 13   | {}
 6    | 14   | {}
 6    | 15   | {}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {}
 7    | 10   | {}
 7    | 11   | {}
 7    | 12   | {}
 7    | 13   | {}
 7    | 14   | {}
 7    | 15   | {}
 7    | 16   | {}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {}
 8    | 11   | {}
 8    | 12   | {}
 8    | 13   | {}
 8    | 14   | {}
 8    | 15   | {}
 8    | 16   | {}
 8    | 17   | {}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {}
 9    | 12   | {}
 9    | 13   | {}
 9    | 14   | {}
 9    | 15   | {}
 9    | 16   | {}
 9    | 17   | {}
 9    | 18   | {}
 9    | 19   | {}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {}
 10   | 13   | {}
 10   | 14   | {}
 10   | 15   | {}
 10   | 16   | {}
 10   | 17   | {}
 10   | 18   | {}
 10   | 19   | {}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {}
 11   | 14   | {}
 11   | 15   | {}
 11   | 16   | {}
 11   | 17   | {}
 11   | 18   | {}
 11   | 19   | {}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {}
 12   | 15   | {}
 12   | 16   | {}
 12   | 17   | {}
 12   | 18   | {}
 12   | 19   | {}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {}
 13   | 16   | {}
 13   | 17   | {}
 13   | 18   | {}
 13   | 19   | {}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {}
 14   | 17   | {}
 14   | 18   | {}
 14   | 19   | {}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {}
 15   | 18   | {}
 15   | 19   | {}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {}
 16   | 19   | {}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..2]->(s2)))) order by s1id, s2id;
 s1id | s2id |    ids     
------+------+------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {}
 1    | 5    | {}
 1    | 6    | {}
 1    | 7    | {}
 1    | 8    | {}
 1    | 9    | {}
 1    | 10   | {}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {}
 2    | 6    | {}
 2    | 7    | {}
 2    | 8    | {}
 2    | 9    | {}
 2    | 10   | {}
 2    | 11   | {}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {}
 3    | 7    | {}
 3    | 8    | {}
 3    | 9    | {}
 3    | 10   | {}
 3    | 11   | {}
 3    | 12   | {}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {}
 4    | 8    | {}
 4    | 9    | {}
 4    | 10   | {}
 4    | 11   | {}
 4    | 12   | {}
 4    | 13   | {}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {}
 5    | 9    | {}
 5    | 10   | {}
 5    | 11   | {}
 5    | 12   | {}
 5    | 13   | {}
 5    | 14   | {}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {}
 6    | 10   | {}
 6    | 11   | {}
 6    | 12   | {}
 6    | 13   | {}
 6    | 14   | {}
 6    | 15   | {}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {}
 7    | 11   | {}
 7    | 12   | {}
 7    | 13   | {}
 7    | 14   | {}
 7    | 15   | {}
 7    | 16   | {}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {}
 8    | 12   | {}
 8    | 13   | {}
 8    | 14   | {}
 8    | 15   | {}
 8    | 16   | {}
 8    | 17   | {}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {}
 9    | 13   | {}
 9    | 14   | {}
 9    | 15   | {}
 9    | 16   | {}
 9    | 17   | {}
 9    | 18   | {}
 9    | 19   | {}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {}
 10   | 14   | {}
 10   | 15   | {}
 10   | 16   | {}
 10   | 17   | {}
 10   | 18   | {}
 10   | 19   | {}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {}
 11   | 15   | {}
 11   | 16   | {}
 11   | 17   | {}
 11   | 18   | {}
 11   | 19   | {}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {}
 12   | 16   | {}
 12   | 17   | {}
 12   | 18   | {}
 12   | 19   | {}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {}
 13   | 17   | {}
 13   | 18   | {}
 13   | 19   | {}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {}
 14   | 18   | {}
 14   | 19   | {}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {}
 15   | 19   | {}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..3]->(s2)))) order by s1id, s2id;
 s1id | s2id |      ids      
------+------+---------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {}
 1    | 6    | {}
 1    | 7    | {}
 1    | 8    | {}
 1    | 9    | {}
 1    | 10   | {}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {}
 2    | 7    | {}
 2    | 8    | {}
 2    | 9    | {}
 2    | 10   | {}
 2    | 11   | {}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {}
 3    | 8    | {}
 3    | 9    | {}
 3    | 10   | {}
 3    | 11   | {}
 3    | 12   | {}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {}
 4    | 9    | {}
 4    | 10   | {}
 4    | 11   | {}
 4    | 12   | {}
 4    | 13   | {}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {}
 5    | 10   | {}
 5    | 11   | {}
 5    | 12   | {}
 5    | 13   | {}
 5    | 14   | {}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {}
 6    | 11   | {}
 6    | 12   | {}
 6    | 13   | {}
 6    | 14   | {}
 6    | 15   | {}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {}
 7    | 12   | {}
 7    | 13   | {}
 7    | 14   | {}
 7    | 15   | {}
 7    | 16   | {}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {}
 8    | 13   | {}
 8    | 14   | {}
 8    | 15   | {}
 8    | 16   | {}
 8    | 17   | {}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {}
 9    | 14   | {}
 9    | 15   | {}
 9    | 16   | {}
 9    | 17   | {}
 9    | 18   | {}
 9    | 19   | {}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {}
 10   | 15   | {}
 10   | 16   | {}
 10   | 17   | {}
 10   | 18   | {}
 10   | 19   | {}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {}
 11   | 16   | {}
 11   | 17   | {}
 11   | 18   | {}
 11   | 19   | {}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {}
 12   | 17   | {}
 12   | 18   | {}
 12   | 19   | {}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {}
 13   | 18   | {}
 13   | 19   | {}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {}
 14   | 19   | {}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..4]->(s2)))) order by s1id, s2id;
 s1id | s2id |       ids        
------+------+------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {}
 1    | 7    | {}
 1    | 8    | {}
 1    | 9    | {}
 1    | 10   | {}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {}
 2    | 8    | {}
 2    | 9    | {}
 2    | 10   | {}
 2    | 11   | {}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {}
 3    | 9    | {}
 3    | 10   | {}
 3    | 11   | {}
 3    | 12   | {}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {}
 4    | 10   | {}
 4    | 11   | {}
 4    | 12   | {}
 4    | 13   | {}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {}
 5    | 11   | {}
 5    | 12   | {}
 5    | 13   | {}
 5    | 14   | {}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {}
 6    | 12   | {}
 6    | 13   | {}
 6    | 14   | {}
 6    | 15   | {}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {}
 7    | 13   | {}
 7    | 14   | {}
 7    | 15   | {}
 7    | 16   | {}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {}
 8    | 14   | {}
 8    | 15   | {}
 8    | 16   | {}
 8    | 17   | {}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {}
 9    | 15   | {}
 9    | 16   | {}
 9    | 17   | {}
 9    | 18   | {}
 9    | 19   | {}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {}
 10   | 16   | {}
 10   | 17   | {}
 10   | 18   | {}
 10   | 19   | {}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {}
 11   | 17   | {}
 11   | 18   | {}
 11   | 19   | {}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {}
 12   | 18   | {}
 12   | 19   | {}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {}
 13   | 19   | {}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..5]->(s2)))) order by s1id, s2id;
 s1id | s2id |         ids         
------+------+---------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {}
 1    | 8    | {}
 1    | 9    | {}
 1    | 10   | {}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {}
 2    | 9    | {}
 2    | 10   | {}
 2    | 11   | {}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {}
 3    | 10   | {}
 3    | 11   | {}
 3    | 12   | {}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {}
 4    | 11   | {}
 4    | 12   | {}
 4    | 13   | {}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {}
 5    | 12   | {}
 5    | 13   | {}
 5    | 14   | {}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {}
 6    | 13   | {}
 6    | 14   | {}
 6    | 15   | {}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {}
 7    | 14   | {}
 7    | 15   | {}
 7    | 16   | {}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {}
 8    | 15   | {}
 8    | 16   | {}
 8    | 17   | {}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {}
 9    | 16   | {}
 9    | 17   | {}
 9    | 18   | {}
 9    | 19   | {}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {}
 10   | 17   | {}
 10   | 18   | {}
 10   | 19   | {}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {}
 11   | 18   | {}
 11   | 19   | {}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {}
 12   | 19   | {}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..6]->(s2)))) order by s1id, s2id;
 s1id | s2id |          ids           
------+------+------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {}
 1    | 9    | {}
 1    | 10   | {}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {}
 2    | 10   | {}
 2    | 11   | {}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {}
 3    | 11   | {}
 3    | 12   | {}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {}
 4    | 12   | {}
 4    | 13   | {}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {}
 5    | 13   | {}
 5    | 14   | {}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {}
 6    | 14   | {}
 6    | 15   | {}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {}
 7    | 15   | {}
 7    | 16   | {}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {}
 8    | 16   | {}
 8    | 17   | {}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {}
 9    | 17   | {}
 9    | 18   | {}
 9    | 19   | {}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {}
 10   | 18   | {}
 10   | 19   | {}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {}
 11   | 19   | {}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..7]->(s2)))) order by s1id, s2id;
 s1id | s2id |            ids            
------+------+---------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {}
 1    | 10   | {}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {}
 2    | 11   | {}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {}
 3    | 12   | {}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {}
 4    | 13   | {}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {}
 5    | 14   | {}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {}
 6    | 15   | {}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {}
 7    | 16   | {}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {}
 8    | 17   | {}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {}
 9    | 18   | {}
 9    | 19   | {}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {}
 10   | 19   | {}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..8]->(s2)))) order by s1id, s2id;
 s1id | s2id |             ids              
------+------+------------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {1,2,3,4,5,6,7,8,9}
 1    | 10   | {}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {2,3,4,5,6,7,8,9,10}
 2    | 11   | {}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {3,4,5,6,7,8,9,10,11}
 3    | 12   | {}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {4,5,6,7,8,9,10,11,12}
 4    | 13   | {}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {5,6,7,8,9,10,11,12,13}
 5    | 14   | {}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {6,7,8,9,10,11,12,13,14}
 6    | 15   | {}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {7,8,9,10,11,12,13,14,15}
 7    | 16   | {}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {8,9,10,11,12,13,14,15,16}
 8    | 17   | {}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {9,10,11,12,13,14,15,16,17}
 9    | 18   | {}
 9    | 19   | {}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {10,11,12,13,14,15,16,17,18}
 10   | 19   | {}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {11,12,13,14,15,16,17,18,19}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..9]->(s2)))) order by s1id, s2id;
 s1id | s2id |               ids               
------+------+---------------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {1,2,3,4,5,6,7,8,9}
 1    | 10   | {1,2,3,4,5,6,7,8,9,10}
 1    | 11   | {}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {2,3,4,5,6,7,8,9,10}
 2    | 11   | {2,3,4,5,6,7,8,9,10,11}
 2    | 12   | {}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {3,4,5,6,7,8,9,10,11}
 3    | 12   | {3,4,5,6,7,8,9,10,11,12}
 3    | 13   | {}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {4,5,6,7,8,9,10,11,12}
 4    | 13   | {4,5,6,7,8,9,10,11,12,13}
 4    | 14   | {}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {5,6,7,8,9,10,11,12,13}
 5    | 14   | {5,6,7,8,9,10,11,12,13,14}
 5    | 15   | {}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {6,7,8,9,10,11,12,13,14}
 6    | 15   | {6,7,8,9,10,11,12,13,14,15}
 6    | 16   | {}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {7,8,9,10,11,12,13,14,15}
 7    | 16   | {7,8,9,10,11,12,13,14,15,16}
 7    | 17   | {}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {8,9,10,11,12,13,14,15,16}
 8    | 17   | {8,9,10,11,12,13,14,15,16,17}
 8    | 18   | {}
 8    | 19   | {}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {9,10,11,12,13,14,15,16,17}
 9    | 18   | {9,10,11,12,13,14,15,16,17,18}
 9    | 19   | {}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {10,11,12,13,14,15,16,17,18}
 10   | 19   | {10,11,12,13,14,15,16,17,18,19}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {11,12,13,14,15,16,17,18,19}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..10]->(s2)))) order by s1id, s2id;
 s1id | s2id |                ids                
------+------+-----------------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {1,2,3,4,5,6,7,8,9}
 1    | 10   | {1,2,3,4,5,6,7,8,9,10}
 1    | 11   | {1,2,3,4,5,6,7,8,9,10,11}
 1    | 12   | {}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {2,3,4,5,6,7,8,9,10}
 2    | 11   | {2,3,4,5,6,7,8,9,10,11}
 2    | 12   | {2,3,4,5,6,7,8,9,10,11,12}
 2    | 13   | {}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {3,4,5,6,7,8,9,10,11}
 3    | 12   | {3,4,5,6,7,8,9,10,11,12}
 3    | 13   | {3,4,5,6,7,8,9,10,11,12,13}
 3    | 14   | {}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {4,5,6,7,8,9,10,11,12}
 4    | 13   | {4,5,6,7,8,9,10,11,12,13}
 4    | 14   | {4,5,6,7,8,9,10,11,12,13,14}
 4    | 15   | {}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {5,6,7,8,9,10,11,12,13}
 5    | 14   | {5,6,7,8,9,10,11,12,13,14}
 5    | 15   | {5,6,7,8,9,10,11,12,13,14,15}
 5    | 16   | {}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {6,7,8,9,10,11,12,13,14}
 6    | 15   | {6,7,8,9,10,11,12,13,14,15}
 6    | 16   | {6,7,8,9,10,11,12,13,14,15,16}
 6    | 17   | {}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {7,8,9,10,11,12,13,14,15}
 7    | 16   | {7,8,9,10,11,12,13,14,15,16}
 7    | 17   | {7,8,9,10,11,12,13,14,15,16,17}
 7    | 18   | {}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {8,9,10,11,12,13,14,15,16}
 8    | 17   | {8,9,10,11,12,13,14,15,16,17}
 8    | 18   | {8,9,10,11,12,13,14,15,16,17,18}
 8    | 19   | {}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {9,10,11,12,13,14,15,16,17}
 9    | 18   | {9,10,11,12,13,14,15,16,17,18}
 9    | 19   | {9,10,11,12,13,14,15,16,17,18,19}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {10,11,12,13,14,15,16,17,18}
 10   | 19   | {10,11,12,13,14,15,16,17,18,19}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {11,12,13,14,15,16,17,18,19}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..11]->(s2)))) order by s1id, s2id;
 s1id | s2id |                 ids                 
------+------+-------------------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {1,2,3,4,5,6,7,8,9}
 1    | 10   | {1,2,3,4,5,6,7,8,9,10}
 1    | 11   | {1,2,3,4,5,6,7,8,9,10,11}
 1    | 12   | {1,2,3,4,5,6,7,8,9,10,11,12}
 1    | 13   | {}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {2,3,4,5,6,7,8,9,10}
 2    | 11   | {2,3,4,5,6,7,8,9,10,11}
 2    | 12   | {2,3,4,5,6,7,8,9,10,11,12}
 2    | 13   | {2,3,4,5,6,7,8,9,10,11,12,13}
 2    | 14   | {}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {3,4,5,6,7,8,9,10,11}
 3    | 12   | {3,4,5,6,7,8,9,10,11,12}
 3    | 13   | {3,4,5,6,7,8,9,10,11,12,13}
 3    | 14   | {3,4,5,6,7,8,9,10,11,12,13,14}
 3    | 15   | {}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {4,5,6,7,8,9,10,11,12}
 4    | 13   | {4,5,6,7,8,9,10,11,12,13}
 4    | 14   | {4,5,6,7,8,9,10,11,12,13,14}
 4    | 15   | {4,5,6,7,8,9,10,11,12,13,14,15}
 4    | 16   | {}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {5,6,7,8,9,10,11,12,13}
 5    | 14   | {5,6,7,8,9,10,11,12,13,14}
 5    | 15   | {5,6,7,8,9,10,11,12,13,14,15}
 5    | 16   | {5,6,7,8,9,10,11,12,13,14,15,16}
 5    | 17   | {}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {6,7,8,9,10,11,12,13,14}
 6    | 15   | {6,7,8,9,10,11,12,13,14,15}
 6    | 16   | {6,7,8,9,10,11,12,13,14,15,16}
 6    | 17   | {6,7,8,9,10,11,12,13,14,15,16,17}
 6    | 18   | {}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {7,8,9,10,11,12,13,14,15}
 7    | 16   | {7,8,9,10,11,12,13,14,15,16}
 7    | 17   | {7,8,9,10,11,12,13,14,15,16,17}
 7    | 18   | {7,8,9,10,11,12,13,14,15,16,17,18}
 7    | 19   | {}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {8,9,10,11,12,13,14,15,16}
 8    | 17   | {8,9,10,11,12,13,14,15,16,17}
 8    | 18   | {8,9,10,11,12,13,14,15,16,17,18}
 8    | 19   | {8,9,10,11,12,13,14,15,16,17,18,19}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {9,10,11,12,13,14,15,16,17}
 9    | 18   | {9,10,11,12,13,14,15,16,17,18}
 9    | 19   | {9,10,11,12,13,14,15,16,17,18,19}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {10,11,12,13,14,15,16,17,18}
 10   | 19   | {10,11,12,13,14,15,16,17,18,19}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {11,12,13,14,15,16,17,18,19}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..12]->(s2)))) order by s1id, s2id;
 s1id | s2id |                  ids                  
------+------+---------------------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {1,2,3,4,5,6,7,8,9}
 1    | 10   | {1,2,3,4,5,6,7,8,9,10}
 1    | 11   | {1,2,3,4,5,6,7,8,9,10,11}
 1    | 12   | {1,2,3,4,5,6,7,8,9,10,11,12}
 1    | 13   | {1,2,3,4,5,6,7,8,9,10,11,12,13}
 1    | 14   | {}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {2,3,4,5,6,7,8,9,10}
 2    | 11   | {2,3,4,5,6,7,8,9,10,11}
 2    | 12   | {2,3,4,5,6,7,8,9,10,11,12}
 2    | 13   | {2,3,4,5,6,7,8,9,10,11,12,13}
 2    | 14   | {2,3,4,5,6,7,8,9,10,11,12,13,14}
 2    | 15   | {}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {3,4,5,6,7,8,9,10,11}
 3    | 12   | {3,4,5,6,7,8,9,10,11,12}
 3    | 13   | {3,4,5,6,7,8,9,10,11,12,13}
 3    | 14   | {3,4,5,6,7,8,9,10,11,12,13,14}
 3    | 15   | {3,4,5,6,7,8,9,10,11,12,13,14,15}
 3    | 16   | {}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {4,5,6,7,8,9,10,11,12}
 4    | 13   | {4,5,6,7,8,9,10,11,12,13}
 4    | 14   | {4,5,6,7,8,9,10,11,12,13,14}
 4    | 15   | {4,5,6,7,8,9,10,11,12,13,14,15}
 4    | 16   | {4,5,6,7,8,9,10,11,12,13,14,15,16}
 4    | 17   | {}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {5,6,7,8,9,10,11,12,13}
 5    | 14   | {5,6,7,8,9,10,11,12,13,14}
 5    | 15   | {5,6,7,8,9,10,11,12,13,14,15}
 5    | 16   | {5,6,7,8,9,10,11,12,13,14,15,16}
 5    | 17   | {5,6,7,8,9,10,11,12,13,14,15,16,17}
 5    | 18   | {}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {6,7,8,9,10,11,12,13,14}
 6    | 15   | {6,7,8,9,10,11,12,13,14,15}
 6    | 16   | {6,7,8,9,10,11,12,13,14,15,16}
 6    | 17   | {6,7,8,9,10,11,12,13,14,15,16,17}
 6    | 18   | {6,7,8,9,10,11,12,13,14,15,16,17,18}
 6    | 19   | {}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {7,8,9,10,11,12,13,14,15}
 7    | 16   | {7,8,9,10,11,12,13,14,15,16}
 7    | 17   | {7,8,9,10,11,12,13,14,15,16,17}
 7    | 18   | {7,8,9,10,11,12,13,14,15,16,17,18}
 7    | 19   | {7,8,9,10,11,12,13,14,15,16,17,18,19}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {8,9,10,11,12,13,14,15,16}
 8    | 17   | {8,9,10,11,12,13,14,15,16,17}
 8    | 18   | {8,9,10,11,12,13,14,15,16,17,18}
 8    | 19   | {8,9,10,11,12,13,14,15,16,17,18,19}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {9,10,11,12,13,14,15,16,17}
 9    | 18   | {9,10,11,12,13,14,15,16,17,18}
 9    | 19   | {9,10,11,12,13,14,15,16,17,18,19}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {10,11,12,13,14,15,16,17,18}
 10   | 19   | {10,11,12,13,14,15,16,17,18,19}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {11,12,13,14,15,16,17,18,19}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..13]->(s2)))) order by s1id, s2id;
 s1id | s2id |                   ids                   
------+------+-----------------------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {1,2,3,4,5,6,7,8,9}
 1    | 10   | {1,2,3,4,5,6,7,8,9,10}
 1    | 11   | {1,2,3,4,5,6,7,8,9,10,11}
 1    | 12   | {1,2,3,4,5,6,7,8,9,10,11,12}
 1    | 13   | {1,2,3,4,5,6,7,8,9,10,11,12,13}
 1    | 14   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14}
 1    | 15   | {}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {2,3,4,5,6,7,8,9,10}
 2    | 11   | {2,3,4,5,6,7,8,9,10,11}
 2    | 12   | {2,3,4,5,6,7,8,9,10,11,12}
 2    | 13   | {2,3,4,5,6,7,8,9,10,11,12,13}
 2    | 14   | {2,3,4,5,6,7,8,9,10,11,12,13,14}
 2    | 15   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 2    | 16   | {}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {3,4,5,6,7,8,9,10,11}
 3    | 12   | {3,4,5,6,7,8,9,10,11,12}
 3    | 13   | {3,4,5,6,7,8,9,10,11,12,13}
 3    | 14   | {3,4,5,6,7,8,9,10,11,12,13,14}
 3    | 15   | {3,4,5,6,7,8,9,10,11,12,13,14,15}
 3    | 16   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 3    | 17   | {}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {4,5,6,7,8,9,10,11,12}
 4    | 13   | {4,5,6,7,8,9,10,11,12,13}
 4    | 14   | {4,5,6,7,8,9,10,11,12,13,14}
 4    | 15   | {4,5,6,7,8,9,10,11,12,13,14,15}
 4    | 16   | {4,5,6,7,8,9,10,11,12,13,14,15,16}
 4    | 17   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 4    | 18   | {}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {5,6,7,8,9,10,11,12,13}
 5    | 14   | {5,6,7,8,9,10,11,12,13,14}
 5    | 15   | {5,6,7,8,9,10,11,12,13,14,15}
 5    | 16   | {5,6,7,8,9,10,11,12,13,14,15,16}
 5    | 17   | {5,6,7,8,9,10,11,12,13,14,15,16,17}
 5    | 18   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 5    | 19   | {}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {6,7,8,9,10,11,12,13,14}
 6    | 15   | {6,7,8,9,10,11,12,13,14,15}
 6    | 16   | {6,7,8,9,10,11,12,13,14,15,16}
 6    | 17   | {6,7,8,9,10,11,12,13,14,15,16,17}
 6    | 18   | {6,7,8,9,10,11,12,13,14,15,16,17,18}
 6    | 19   | {6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {7,8,9,10,11,12,13,14,15}
 7    | 16   | {7,8,9,10,11,12,13,14,15,16}
 7    | 17   | {7,8,9,10,11,12,13,14,15,16,17}
 7    | 18   | {7,8,9,10,11,12,13,14,15,16,17,18}
 7    | 19   | {7,8,9,10,11,12,13,14,15,16,17,18,19}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {8,9,10,11,12,13,14,15,16}
 8    | 17   | {8,9,10,11,12,13,14,15,16,17}
 8    | 18   | {8,9,10,11,12,13,14,15,16,17,18}
 8    | 19   | {8,9,10,11,12,13,14,15,16,17,18,19}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {9,10,11,12,13,14,15,16,17}
 9    | 18   | {9,10,11,12,13,14,15,16,17,18}
 9    | 19   | {9,10,11,12,13,14,15,16,17,18,19}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {10,11,12,13,14,15,16,17,18}
 10   | 19   | {10,11,12,13,14,15,16,17,18,19}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {11,12,13,14,15,16,17,18,19}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..14]->(s2)))) order by s1id, s2id;
 s1id | s2id |                    ids                    
------+------+-------------------------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {1,2,3,4,5,6,7,8,9}
 1    | 10   | {1,2,3,4,5,6,7,8,9,10}
 1    | 11   | {1,2,3,4,5,6,7,8,9,10,11}
 1    | 12   | {1,2,3,4,5,6,7,8,9,10,11,12}
 1    | 13   | {1,2,3,4,5,6,7,8,9,10,11,12,13}
 1    | 14   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14}
 1    | 15   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 1    | 16   | {}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {2,3,4,5,6,7,8,9,10}
 2    | 11   | {2,3,4,5,6,7,8,9,10,11}
 2    | 12   | {2,3,4,5,6,7,8,9,10,11,12}
 2    | 13   | {2,3,4,5,6,7,8,9,10,11,12,13}
 2    | 14   | {2,3,4,5,6,7,8,9,10,11,12,13,14}
 2    | 15   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 2    | 16   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 2    | 17   | {}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {3,4,5,6,7,8,9,10,11}
 3    | 12   | {3,4,5,6,7,8,9,10,11,12}
 3    | 13   | {3,4,5,6,7,8,9,10,11,12,13}
 3    | 14   | {3,4,5,6,7,8,9,10,11,12,13,14}
 3    | 15   | {3,4,5,6,7,8,9,10,11,12,13,14,15}
 3    | 16   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 3    | 17   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 3    | 18   | {}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {4,5,6,7,8,9,10,11,12}
 4    | 13   | {4,5,6,7,8,9,10,11,12,13}
 4    | 14   | {4,5,6,7,8,9,10,11,12,13,14}
 4    | 15   | {4,5,6,7,8,9,10,11,12,13,14,15}
 4    | 16   | {4,5,6,7,8,9,10,11,12,13,14,15,16}
 4    | 17   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 4    | 18   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 4    | 19   | {}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {5,6,7,8,9,10,11,12,13}
 5    | 14   | {5,6,7,8,9,10,11,12,13,14}
 5    | 15   | {5,6,7,8,9,10,11,12,13,14,15}
 5    | 16   | {5,6,7,8,9,10,11,12,13,14,15,16}
 5    | 17   | {5,6,7,8,9,10,11,12,13,14,15,16,17}
 5    | 18   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 5    | 19   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {6,7,8,9,10,11,12,13,14}
 6    | 15   | {6,7,8,9,10,11,12,13,14,15}
 6    | 16   | {6,7,8,9,10,11,12,13,14,15,16}
 6    | 17   | {6,7,8,9,10,11,12,13,14,15,16,17}
 6    | 18   | {6,7,8,9,10,11,12,13,14,15,16,17,18}
 6    | 19   | {6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {7,8,9,10,11,12,13,14,15}
 7    | 16   | {7,8,9,10,11,12,13,14,15,16}
 7    | 17   | {7,8,9,10,11,12,13,14,15,16,17}
 7    | 18   | {7,8,9,10,11,12,13,14,15,16,17,18}
 7    | 19   | {7,8,9,10,11,12,13,14,15,16,17,18,19}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {8,9,10,11,12,13,14,15,16}
 8    | 17   | {8,9,10,11,12,13,14,15,16,17}
 8    | 18   | {8,9,10,11,12,13,14,15,16,17,18}
 8    | 19   | {8,9,10,11,12,13,14,15,16,17,18,19}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {9,10,11,12,13,14,15,16,17}
 9    | 18   | {9,10,11,12,13,14,15,16,17,18}
 9    | 19   | {9,10,11,12,13,14,15,16,17,18,19}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {10,11,12,13,14,15,16,17,18}
 10   | 19   | {10,11,12,13,14,15,16,17,18,19}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {11,12,13,14,15,16,17,18,19}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..15]->(s2)))) order by s1id, s2id;
 s1id | s2id |                     ids                     
------+------+---------------------------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {1,2,3,4,5,6,7,8,9}
 1    | 10   | {1,2,3,4,5,6,7,8,9,10}
 1    | 11   | {1,2,3,4,5,6,7,8,9,10,11}
 1    | 12   | {1,2,3,4,5,6,7,8,9,10,11,12}
 1    | 13   | {1,2,3,4,5,6,7,8,9,10,11,12,13}
 1    | 14   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14}
 1    | 15   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 1    | 16   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 1    | 17   | {}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {2,3,4,5,6,7,8,9,10}
 2    | 11   | {2,3,4,5,6,7,8,9,10,11}
 2    | 12   | {2,3,4,5,6,7,8,9,10,11,12}
 2    | 13   | {2,3,4,5,6,7,8,9,10,11,12,13}
 2    | 14   | {2,3,4,5,6,7,8,9,10,11,12,13,14}
 2    | 15   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 2    | 16   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 2    | 17   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 2    | 18   | {}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {3,4,5,6,7,8,9,10,11}
 3    | 12   | {3,4,5,6,7,8,9,10,11,12}
 3    | 13   | {3,4,5,6,7,8,9,10,11,12,13}
 3    | 14   | {3,4,5,6,7,8,9,10,11,12,13,14}
 3    | 15   | {3,4,5,6,7,8,9,10,11,12,13,14,15}
 3    | 16   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 3    | 17   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 3    | 18   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 3    | 19   | {}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {4,5,6,7,8,9,10,11,12}
 4    | 13   | {4,5,6,7,8,9,10,11,12,13}
 4    | 14   | {4,5,6,7,8,9,10,11,12,13,14}
 4    | 15   | {4,5,6,7,8,9,10,11,12,13,14,15}
 4    | 16   | {4,5,6,7,8,9,10,11,12,13,14,15,16}
 4    | 17   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 4    | 18   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 4    | 19   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {5,6,7,8,9,10,11,12,13}
 5    | 14   | {5,6,7,8,9,10,11,12,13,14}
 5    | 15   | {5,6,7,8,9,10,11,12,13,14,15}
 5    | 16   | {5,6,7,8,9,10,11,12,13,14,15,16}
 5    | 17   | {5,6,7,8,9,10,11,12,13,14,15,16,17}
 5    | 18   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 5    | 19   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {6,7,8,9,10,11,12,13,14}
 6    | 15   | {6,7,8,9,10,11,12,13,14,15}
 6    | 16   | {6,7,8,9,10,11,12,13,14,15,16}
 6    | 17   | {6,7,8,9,10,11,12,13,14,15,16,17}
 6    | 18   | {6,7,8,9,10,11,12,13,14,15,16,17,18}
 6    | 19   | {6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {7,8,9,10,11,12,13,14,15}
 7    | 16   | {7,8,9,10,11,12,13,14,15,16}
 7    | 17   | {7,8,9,10,11,12,13,14,15,16,17}
 7    | 18   | {7,8,9,10,11,12,13,14,15,16,17,18}
 7    | 19   | {7,8,9,10,11,12,13,14,15,16,17,18,19}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {8,9,10,11,12,13,14,15,16}
 8    | 17   | {8,9,10,11,12,13,14,15,16,17}
 8    | 18   | {8,9,10,11,12,13,14,15,16,17,18}
 8    | 19   | {8,9,10,11,12,13,14,15,16,17,18,19}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {9,10,11,12,13,14,15,16,17}
 9    | 18   | {9,10,11,12,13,14,15,16,17,18}
 9    | 19   | {9,10,11,12,13,14,15,16,17,18,19}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {10,11,12,13,14,15,16,17,18}
 10   | 19   | {10,11,12,13,14,15,16,17,18,19}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {11,12,13,14,15,16,17,18,19}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..16]->(s2)))) order by s1id, s2id;
 s1id | s2id |                      ids                      
------+------+-----------------------------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {1,2,3,4,5,6,7,8,9}
 1    | 10   | {1,2,3,4,5,6,7,8,9,10}
 1    | 11   | {1,2,3,4,5,6,7,8,9,10,11}
 1    | 12   | {1,2,3,4,5,6,7,8,9,10,11,12}
 1    | 13   | {1,2,3,4,5,6,7,8,9,10,11,12,13}
 1    | 14   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14}
 1    | 15   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 1    | 16   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 1    | 17   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 1    | 18   | {}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {2,3,4,5,6,7,8,9,10}
 2    | 11   | {2,3,4,5,6,7,8,9,10,11}
 2    | 12   | {2,3,4,5,6,7,8,9,10,11,12}
 2    | 13   | {2,3,4,5,6,7,8,9,10,11,12,13}
 2    | 14   | {2,3,4,5,6,7,8,9,10,11,12,13,14}
 2    | 15   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 2    | 16   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 2    | 17   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 2    | 18   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 2    | 19   | {}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {3,4,5,6,7,8,9,10,11}
 3    | 12   | {3,4,5,6,7,8,9,10,11,12}
 3    | 13   | {3,4,5,6,7,8,9,10,11,12,13}
 3    | 14   | {3,4,5,6,7,8,9,10,11,12,13,14}
 3    | 15   | {3,4,5,6,7,8,9,10,11,12,13,14,15}
 3    | 16   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 3    | 17   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 3    | 18   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 3    | 19   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {4,5,6,7,8,9,10,11,12}
 4    | 13   | {4,5,6,7,8,9,10,11,12,13}
 4    | 14   | {4,5,6,7,8,9,10,11,12,13,14}
 4    | 15   | {4,5,6,7,8,9,10,11,12,13,14,15}
 4    | 16   | {4,5,6,7,8,9,10,11,12,13,14,15,16}
 4    | 17   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 4    | 18   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 4    | 19   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {5,6,7,8,9,10,11,12,13}
 5    | 14   | {5,6,7,8,9,10,11,12,13,14}
 5    | 15   | {5,6,7,8,9,10,11,12,13,14,15}
 5    | 16   | {5,6,7,8,9,10,11,12,13,14,15,16}
 5    | 17   | {5,6,7,8,9,10,11,12,13,14,15,16,17}
 5    | 18   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 5    | 19   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {6,7,8,9,10,11,12,13,14}
 6    | 15   | {6,7,8,9,10,11,12,13,14,15}
 6    | 16   | {6,7,8,9,10,11,12,13,14,15,16}
 6    | 17   | {6,7,8,9,10,11,12,13,14,15,16,17}
 6    | 18   | {6,7,8,9,10,11,12,13,14,15,16,17,18}
 6    | 19   | {6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {7,8,9,10,11,12,13,14,15}
 7    | 16   | {7,8,9,10,11,12,13,14,15,16}
 7    | 17   | {7,8,9,10,11,12,13,14,15,16,17}
 7    | 18   | {7,8,9,10,11,12,13,14,15,16,17,18}
 7    | 19   | {7,8,9,10,11,12,13,14,15,16,17,18,19}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {8,9,10,11,12,13,14,15,16}
 8    | 17   | {8,9,10,11,12,13,14,15,16,17}
 8    | 18   | {8,9,10,11,12,13,14,15,16,17,18}
 8    | 19   | {8,9,10,11,12,13,14,15,16,17,18,19}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {9,10,11,12,13,14,15,16,17}
 9    | 18   | {9,10,11,12,13,14,15,16,17,18}
 9    | 19   | {9,10,11,12,13,14,15,16,17,18,19}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {10,11,12,13,14,15,16,17,18}
 10   | 19   | {10,11,12,13,14,15,16,17,18,19}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {11,12,13,14,15,16,17,18,19}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..17]->(s2)))) order by s1id, s2id;
 s1id | s2id |                       ids                       
------+------+-------------------------------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {1,2,3,4,5,6,7,8,9}
 1    | 10   | {1,2,3,4,5,6,7,8,9,10}
 1    | 11   | {1,2,3,4,5,6,7,8,9,10,11}
 1    | 12   | {1,2,3,4,5,6,7,8,9,10,11,12}
 1    | 13   | {1,2,3,4,5,6,7,8,9,10,11,12,13}
 1    | 14   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14}
 1    | 15   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 1    | 16   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 1    | 17   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 1    | 18   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 1    | 19   | {}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {2,3,4,5,6,7,8,9,10}
 2    | 11   | {2,3,4,5,6,7,8,9,10,11}
 2    | 12   | {2,3,4,5,6,7,8,9,10,11,12}
 2    | 13   | {2,3,4,5,6,7,8,9,10,11,12,13}
 2    | 14   | {2,3,4,5,6,7,8,9,10,11,12,13,14}
 2    | 15   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 2    | 16   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 2    | 17   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 2    | 18   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 2    | 19   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {3,4,5,6,7,8,9,10,11}
 3    | 12   | {3,4,5,6,7,8,9,10,11,12}
 3    | 13   | {3,4,5,6,7,8,9,10,11,12,13}
 3    | 14   | {3,4,5,6,7,8,9,10,11,12,13,14}
 3    | 15   | {3,4,5,6,7,8,9,10,11,12,13,14,15}
 3    | 16   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 3    | 17   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 3    | 18   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 3    | 19   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {4,5,6,7,8,9,10,11,12}
 4    | 13   | {4,5,6,7,8,9,10,11,12,13}
 4    | 14   | {4,5,6,7,8,9,10,11,12,13,14}
 4    | 15   | {4,5,6,7,8,9,10,11,12,13,14,15}
 4    | 16   | {4,5,6,7,8,9,10,11,12,13,14,15,16}
 4    | 17   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 4    | 18   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 4    | 19   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {5,6,7,8,9,10,11,12,13}
 5    | 14   | {5,6,7,8,9,10,11,12,13,14}
 5    | 15   | {5,6,7,8,9,10,11,12,13,14,15}
 5    | 16   | {5,6,7,8,9,10,11,12,13,14,15,16}
 5    | 17   | {5,6,7,8,9,10,11,12,13,14,15,16,17}
 5    | 18   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 5    | 19   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {6,7,8,9,10,11,12,13,14}
 6    | 15   | {6,7,8,9,10,11,12,13,14,15}
 6    | 16   | {6,7,8,9,10,11,12,13,14,15,16}
 6    | 17   | {6,7,8,9,10,11,12,13,14,15,16,17}
 6    | 18   | {6,7,8,9,10,11,12,13,14,15,16,17,18}
 6    | 19   | {6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {7,8,9,10,11,12,13,14,15}
 7    | 16   | {7,8,9,10,11,12,13,14,15,16}
 7    | 17   | {7,8,9,10,11,12,13,14,15,16,17}
 7    | 18   | {7,8,9,10,11,12,13,14,15,16,17,18}
 7    | 19   | {7,8,9,10,11,12,13,14,15,16,17,18,19}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {8,9,10,11,12,13,14,15,16}
 8    | 17   | {8,9,10,11,12,13,14,15,16,17}
 8    | 18   | {8,9,10,11,12,13,14,15,16,17,18}
 8    | 19   | {8,9,10,11,12,13,14,15,16,17,18,19}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {9,10,11,12,13,14,15,16,17}
 9    | 18   | {9,10,11,12,13,14,15,16,17,18}
 9    | 19   | {9,10,11,12,13,14,15,16,17,18,19}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {10,11,12,13,14,15,16,17,18}
 10   | 19   | {10,11,12,13,14,15,16,17,18,19}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {11,12,13,14,15,16,17,18,19}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..18]->(s2)))) order by s1id, s2id;
 s1id | s2id |                        ids                        
------+------+---------------------------------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {1,2,3,4,5,6,7,8,9}
 1    | 10   | {1,2,3,4,5,6,7,8,9,10}
 1    | 11   | {1,2,3,4,5,6,7,8,9,10,11}
 1    | 12   | {1,2,3,4,5,6,7,8,9,10,11,12}
 1    | 13   | {1,2,3,4,5,6,7,8,9,10,11,12,13}
 1    | 14   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14}
 1    | 15   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 1    | 16   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 1    | 17   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 1    | 18   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 1    | 19   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {2,3,4,5,6,7,8,9,10}
 2    | 11   | {2,3,4,5,6,7,8,9,10,11}
 2    | 12   | {2,3,4,5,6,7,8,9,10,11,12}
 2    | 13   | {2,3,4,5,6,7,8,9,10,11,12,13}
 2    | 14   | {2,3,4,5,6,7,8,9,10,11,12,13,14}
 2    | 15   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 2    | 16   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 2    | 17   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 2    | 18   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 2    | 19   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {3,4,5,6,7,8,9,10,11}
 3    | 12   | {3,4,5,6,7,8,9,10,11,12}
 3    | 13   | {3,4,5,6,7,8,9,10,11,12,13}
 3    | 14   | {3,4,5,6,7,8,9,10,11,12,13,14}
 3    | 15   | {3,4,5,6,7,8,9,10,11,12,13,14,15}
 3    | 16   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 3    | 17   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 3    | 18   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 3    | 19   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {4,5,6,7,8,9,10,11,12}
 4    | 13   | {4,5,6,7,8,9,10,11,12,13}
 4    | 14   | {4,5,6,7,8,9,10,11,12,13,14}
 4    | 15   | {4,5,6,7,8,9,10,11,12,13,14,15}
 4    | 16   | {4,5,6,7,8,9,10,11,12,13,14,15,16}
 4    | 17   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 4    | 18   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 4    | 19   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {5,6,7,8,9,10,11,12,13}
 5    | 14   | {5,6,7,8,9,10,11,12,13,14}
 5    | 15   | {5,6,7,8,9,10,11,12,13,14,15}
 5    | 16   | {5,6,7,8,9,10,11,12,13,14,15,16}
 5    | 17   | {5,6,7,8,9,10,11,12,13,14,15,16,17}
 5    | 18   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 5    | 19   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {6,7,8,9,10,11,12,13,14}
 6    | 15   | {6,7,8,9,10,11,12,13,14,15}
 6    | 16   | {6,7,8,9,10,11,12,13,14,15,16}
 6    | 17   | {6,7,8,9,10,11,12,13,14,15,16,17}
 6    | 18   | {6,7,8,9,10,11,12,13,14,15,16,17,18}
 6    | 19   | {6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {7,8,9,10,11,12,13,14,15}
 7    | 16   | {7,8,9,10,11,12,13,14,15,16}
 7    | 17   | {7,8,9,10,11,12,13,14,15,16,17}
 7    | 18   | {7,8,9,10,11,12,13,14,15,16,17,18}
 7    | 19   | {7,8,9,10,11,12,13,14,15,16,17,18,19}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {8,9,10,11,12,13,14,15,16}
 8    | 17   | {8,9,10,11,12,13,14,15,16,17}
 8    | 18   | {8,9,10,11,12,13,14,15,16,17,18}
 8    | 19   | {8,9,10,11,12,13,14,15,16,17,18,19}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {9,10,11,12,13,14,15,16,17}
 9    | 18   | {9,10,11,12,13,14,15,16,17,18}
 9    | 19   | {9,10,11,12,13,14,15,16,17,18,19}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {10,11,12,13,14,15,16,17,18}
 10   | 19   | {10,11,12,13,14,15,16,17,18,19}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {11,12,13,14,15,16,17,18,19}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..19]->(s2)))) order by s1id, s2id;
 s1id | s2id |                        ids                        
------+------+---------------------------------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {1,2,3,4,5,6,7,8,9}
 1    | 10   | {1,2,3,4,5,6,7,8,9,10}
 1    | 11   | {1,2,3,4,5,6,7,8,9,10,11}
 1    | 12   | {1,2,3,4,5,6,7,8,9,10,11,12}
 1    | 13   | {1,2,3,4,5,6,7,8,9,10,11,12,13}
 1    | 14   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14}
 1    | 15   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 1    | 16   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 1    | 17   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 1    | 18   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 1    | 19   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {2,3,4,5,6,7,8,9,10}
 2    | 11   | {2,3,4,5,6,7,8,9,10,11}
 2    | 12   | {2,3,4,5,6,7,8,9,10,11,12}
 2    | 13   | {2,3,4,5,6,7,8,9,10,11,12,13}
 2    | 14   | {2,3,4,5,6,7,8,9,10,11,12,13,14}
 2    | 15   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 2    | 16   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 2    | 17   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 2    | 18   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 2    | 19   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {3,4,5,6,7,8,9,10,11}
 3    | 12   | {3,4,5,6,7,8,9,10,11,12}
 3    | 13   | {3,4,5,6,7,8,9,10,11,12,13}
 3    | 14   | {3,4,5,6,7,8,9,10,11,12,13,14}
 3    | 15   | {3,4,5,6,7,8,9,10,11,12,13,14,15}
 3    | 16   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 3    | 17   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 3    | 18   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 3    | 19   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {4,5,6,7,8,9,10,11,12}
 4    | 13   | {4,5,6,7,8,9,10,11,12,13}
 4    | 14   | {4,5,6,7,8,9,10,11,12,13,14}
 4    | 15   | {4,5,6,7,8,9,10,11,12,13,14,15}
 4    | 16   | {4,5,6,7,8,9,10,11,12,13,14,15,16}
 4    | 17   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 4    | 18   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 4    | 19   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {5,6,7,8,9,10,11,12,13}
 5    | 14   | {5,6,7,8,9,10,11,12,13,14}
 5    | 15   | {5,6,7,8,9,10,11,12,13,14,15}
 5    | 16   | {5,6,7,8,9,10,11,12,13,14,15,16}
 5    | 17   | {5,6,7,8,9,10,11,12,13,14,15,16,17}
 5    | 18   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 5    | 19   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {6,7,8,9,10,11,12,13,14}
 6    | 15   | {6,7,8,9,10,11,12,13,14,15}
 6    | 16   | {6,7,8,9,10,11,12,13,14,15,16}
 6    | 17   | {6,7,8,9,10,11,12,13,14,15,16,17}
 6    | 18   | {6,7,8,9,10,11,12,13,14,15,16,17,18}
 6    | 19   | {6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {7,8,9,10,11,12,13,14,15}
 7    | 16   | {7,8,9,10,11,12,13,14,15,16}
 7    | 17   | {7,8,9,10,11,12,13,14,15,16,17}
 7    | 18   | {7,8,9,10,11,12,13,14,15,16,17,18}
 7    | 19   | {7,8,9,10,11,12,13,14,15,16,17,18,19}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {8,9,10,11,12,13,14,15,16}
 8    | 17   | {8,9,10,11,12,13,14,15,16,17}
 8    | 18   | {8,9,10,11,12,13,14,15,16,17,18}
 8    | 19   | {8,9,10,11,12,13,14,15,16,17,18,19}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {9,10,11,12,13,14,15,16,17}
 9    | 18   | {9,10,11,12,13,14,15,16,17,18}
 9    | 19   | {9,10,11,12,13,14,15,16,17,18,19}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {10,11,12,13,14,15,16,17,18}
 10   | 19   | {10,11,12,13,14,15,16,17,18,19}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {11,12,13,14,15,16,17,18,19}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e*..20]->(s2)))) order by s1id, s2id;
 s1id | s2id |                        ids                        
------+------+---------------------------------------------------
 1    | 1    | {}
 1    | 2    | {1,2}
 1    | 3    | {1,2,3}
 1    | 4    | {1,2,3,4}
 1    | 5    | {1,2,3,4,5}
 1    | 6    | {1,2,3,4,5,6}
 1    | 7    | {1,2,3,4,5,6,7}
 1    | 8    | {1,2,3,4,5,6,7,8}
 1    | 9    | {1,2,3,4,5,6,7,8,9}
 1    | 10   | {1,2,3,4,5,6,7,8,9,10}
 1    | 11   | {1,2,3,4,5,6,7,8,9,10,11}
 1    | 12   | {1,2,3,4,5,6,7,8,9,10,11,12}
 1    | 13   | {1,2,3,4,5,6,7,8,9,10,11,12,13}
 1    | 14   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14}
 1    | 15   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 1    | 16   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 1    | 17   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 1    | 18   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 1    | 19   | {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 2    | 1    | {}
 2    | 2    | {}
 2    | 3    | {2,3}
 2    | 4    | {2,3,4}
 2    | 5    | {2,3,4,5}
 2    | 6    | {2,3,4,5,6}
 2    | 7    | {2,3,4,5,6,7}
 2    | 8    | {2,3,4,5,6,7,8}
 2    | 9    | {2,3,4,5,6,7,8,9}
 2    | 10   | {2,3,4,5,6,7,8,9,10}
 2    | 11   | {2,3,4,5,6,7,8,9,10,11}
 2    | 12   | {2,3,4,5,6,7,8,9,10,11,12}
 2    | 13   | {2,3,4,5,6,7,8,9,10,11,12,13}
 2    | 14   | {2,3,4,5,6,7,8,9,10,11,12,13,14}
 2    | 15   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 2    | 16   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 2    | 17   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 2    | 18   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 2    | 19   | {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 3    | 1    | {}
 3    | 2    | {}
 3    | 3    | {}
 3    | 4    | {3,4}
 3    | 5    | {3,4,5}
 3    | 6    | {3,4,5,6}
 3    | 7    | {3,4,5,6,7}
 3    | 8    | {3,4,5,6,7,8}
 3    | 9    | {3,4,5,6,7,8,9}
 3    | 10   | {3,4,5,6,7,8,9,10}
 3    | 11   | {3,4,5,6,7,8,9,10,11}
 3    | 12   | {3,4,5,6,7,8,9,10,11,12}
 3    | 13   | {3,4,5,6,7,8,9,10,11,12,13}
 3    | 14   | {3,4,5,6,7,8,9,10,11,12,13,14}
 3    | 15   | {3,4,5,6,7,8,9,10,11,12,13,14,15}
 3    | 16   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16}
 3    | 17   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 3    | 18   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 3    | 19   | {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 4    | 1    | {}
 4    | 2    | {}
 4    | 3    | {}
 4    | 4    | {}
 4    | 5    | {4,5}
 4    | 6    | {4,5,6}
 4    | 7    | {4,5,6,7}
 4    | 8    | {4,5,6,7,8}
 4    | 9    | {4,5,6,7,8,9}
 4    | 10   | {4,5,6,7,8,9,10}
 4    | 11   | {4,5,6,7,8,9,10,11}
 4    | 12   | {4,5,6,7,8,9,10,11,12}
 4    | 13   | {4,5,6,7,8,9,10,11,12,13}
 4    | 14   | {4,5,6,7,8,9,10,11,12,13,14}
 4    | 15   | {4,5,6,7,8,9,10,11,12,13,14,15}
 4    | 16   | {4,5,6,7,8,9,10,11,12,13,14,15,16}
 4    | 17   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17}
 4    | 18   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 4    | 19   | {4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 5    | 1    | {}
 5    | 2    | {}
 5    | 3    | {}
 5    | 4    | {}
 5    | 5    | {}
 5    | 6    | {5,6}
 5    | 7    | {5,6,7}
 5    | 8    | {5,6,7,8}
 5    | 9    | {5,6,7,8,9}
 5    | 10   | {5,6,7,8,9,10}
 5    | 11   | {5,6,7,8,9,10,11}
 5    | 12   | {5,6,7,8,9,10,11,12}
 5    | 13   | {5,6,7,8,9,10,11,12,13}
 5    | 14   | {5,6,7,8,9,10,11,12,13,14}
 5    | 15   | {5,6,7,8,9,10,11,12,13,14,15}
 5    | 16   | {5,6,7,8,9,10,11,12,13,14,15,16}
 5    | 17   | {5,6,7,8,9,10,11,12,13,14,15,16,17}
 5    | 18   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18}
 5    | 19   | {5,6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 6    | 1    | {}
 6    | 2    | {}
 6    | 3    | {}
 6    | 4    | {}
 6    | 5    | {}
 6    | 6    | {}
 6    | 7    | {6,7}
 6    | 8    | {6,7,8}
 6    | 9    | {6,7,8,9}
 6    | 10   | {6,7,8,9,10}
 6    | 11   | {6,7,8,9,10,11}
 6    | 12   | {6,7,8,9,10,11,12}
 6    | 13   | {6,7,8,9,10,11,12,13}
 6    | 14   | {6,7,8,9,10,11,12,13,14}
 6    | 15   | {6,7,8,9,10,11,12,13,14,15}
 6    | 16   | {6,7,8,9,10,11,12,13,14,15,16}
 6    | 17   | {6,7,8,9,10,11,12,13,14,15,16,17}
 6    | 18   | {6,7,8,9,10,11,12,13,14,15,16,17,18}
 6    | 19   | {6,7,8,9,10,11,12,13,14,15,16,17,18,19}
 7    | 1    | {}
 7    | 2    | {}
 7    | 3    | {}
 7    | 4    | {}
 7    | 5    | {}
 7    | 6    | {}
 7    | 7    | {}
 7    | 8    | {7,8}
 7    | 9    | {7,8,9}
 7    | 10   | {7,8,9,10}
 7    | 11   | {7,8,9,10,11}
 7    | 12   | {7,8,9,10,11,12}
 7    | 13   | {7,8,9,10,11,12,13}
 7    | 14   | {7,8,9,10,11,12,13,14}
 7    | 15   | {7,8,9,10,11,12,13,14,15}
 7    | 16   | {7,8,9,10,11,12,13,14,15,16}
 7    | 17   | {7,8,9,10,11,12,13,14,15,16,17}
 7    | 18   | {7,8,9,10,11,12,13,14,15,16,17,18}
 7    | 19   | {7,8,9,10,11,12,13,14,15,16,17,18,19}
 8    | 1    | {}
 8    | 2    | {}
 8    | 3    | {}
 8    | 4    | {}
 8    | 5    | {}
 8    | 6    | {}
 8    | 7    | {}
 8    | 8    | {}
 8    | 9    | {8,9}
 8    | 10   | {8,9,10}
 8    | 11   | {8,9,10,11}
 8    | 12   | {8,9,10,11,12}
 8    | 13   | {8,9,10,11,12,13}
 8    | 14   | {8,9,10,11,12,13,14}
 8    | 15   | {8,9,10,11,12,13,14,15}
 8    | 16   | {8,9,10,11,12,13,14,15,16}
 8    | 17   | {8,9,10,11,12,13,14,15,16,17}
 8    | 18   | {8,9,10,11,12,13,14,15,16,17,18}
 8    | 19   | {8,9,10,11,12,13,14,15,16,17,18,19}
 9    | 1    | {}
 9    | 2    | {}
 9    | 3    | {}
 9    | 4    | {}
 9    | 5    | {}
 9    | 6    | {}
 9    | 7    | {}
 9    | 8    | {}
 9    | 9    | {}
 9    | 10   | {9,10}
 9    | 11   | {9,10,11}
 9    | 12   | {9,10,11,12}
 9    | 13   | {9,10,11,12,13}
 9    | 14   | {9,10,11,12,13,14}
 9    | 15   | {9,10,11,12,13,14,15}
 9    | 16   | {9,10,11,12,13,14,15,16}
 9    | 17   | {9,10,11,12,13,14,15,16,17}
 9    | 18   | {9,10,11,12,13,14,15,16,17,18}
 9    | 19   | {9,10,11,12,13,14,15,16,17,18,19}
 10   | 1    | {}
 10   | 2    | {}
 10   | 3    | {}
 10   | 4    | {}
 10   | 5    | {}
 10   | 6    | {}
 10   | 7    | {}
 10   | 8    | {}
 10   | 9    | {}
 10   | 10   | {}
 10   | 11   | {10,11}
 10   | 12   | {10,11,12}
 10   | 13   | {10,11,12,13}
 10   | 14   | {10,11,12,13,14}
 10   | 15   | {10,11,12,13,14,15}
 10   | 16   | {10,11,12,13,14,15,16}
 10   | 17   | {10,11,12,13,14,15,16,17}
 10   | 18   | {10,11,12,13,14,15,16,17,18}
 10   | 19   | {10,11,12,13,14,15,16,17,18,19}
 11   | 1    | {}
 11   | 2    | {}
 11   | 3    | {}
 11   | 4    | {}
 11   | 5    | {}
 11   | 6    | {}
 11   | 7    | {}
 11   | 8    | {}
 11   | 9    | {}
 11   | 10   | {}
 11   | 11   | {}
 11   | 12   | {11,12}
 11   | 13   | {11,12,13}
 11   | 14   | {11,12,13,14}
 11   | 15   | {11,12,13,14,15}
 11   | 16   | {11,12,13,14,15,16}
 11   | 17   | {11,12,13,14,15,16,17}
 11   | 18   | {11,12,13,14,15,16,17,18}
 11   | 19   | {11,12,13,14,15,16,17,18,19}
 12   | 1    | {}
 12   | 2    | {}
 12   | 3    | {}
 12   | 4    | {}
 12   | 5    | {}
 12   | 6    | {}
 12   | 7    | {}
 12   | 8    | {}
 12   | 9    | {}
 12   | 10   | {}
 12   | 11   | {}
 12   | 12   | {}
 12   | 13   | {12,13}
 12   | 14   | {12,13,14}
 12   | 15   | {12,13,14,15}
 12   | 16   | {12,13,14,15,16}
 12   | 17   | {12,13,14,15,16,17}
 12   | 18   | {12,13,14,15,16,17,18}
 12   | 19   | {12,13,14,15,16,17,18,19}
 13   | 1    | {}
 13   | 2    | {}
 13   | 3    | {}
 13   | 4    | {}
 13   | 5    | {}
 13   | 6    | {}
 13   | 7    | {}
 13   | 8    | {}
 13   | 9    | {}
 13   | 10   | {}
 13   | 11   | {}
 13   | 12   | {}
 13   | 13   | {}
 13   | 14   | {13,14}
 13   | 15   | {13,14,15}
 13   | 16   | {13,14,15,16}
 13   | 17   | {13,14,15,16,17}
 13   | 18   | {13,14,15,16,17,18}
 13   | 19   | {13,14,15,16,17,18,19}
 14   | 1    | {}
 14   | 2    | {}
 14   | 3    | {}
 14   | 4    | {}
 14   | 5    | {}
 14   | 6    | {}
 14   | 7    | {}
 14   | 8    | {}
 14   | 9    | {}
 14   | 10   | {}
 14   | 11   | {}
 14   | 12   | {}
 14   | 13   | {}
 14   | 14   | {}
 14   | 15   | {14,15}
 14   | 16   | {14,15,16}
 14   | 17   | {14,15,16,17}
 14   | 18   | {14,15,16,17,18}
 14   | 19   | {14,15,16,17,18,19}
 15   | 1    | {}
 15   | 2    | {}
 15   | 3    | {}
 15   | 4    | {}
 15   | 5    | {}
 15   | 6    | {}
 15   | 7    | {}
 15   | 8    | {}
 15   | 9    | {}
 15   | 10   | {}
 15   | 11   | {}
 15   | 12   | {}
 15   | 13   | {}
 15   | 14   | {}
 15   | 15   | {}
 15   | 16   | {15,16}
 15   | 17   | {15,16,17}
 15   | 18   | {15,16,17,18}
 15   | 19   | {15,16,17,18,19}
 16   | 1    | {}
 16   | 2    | {}
 16   | 3    | {}
 16   | 4    | {}
 16   | 5    | {}
 16   | 6    | {}
 16   | 7    | {}
 16   | 8    | {}
 16   | 9    | {}
 16   | 10   | {}
 16   | 11   | {}
 16   | 12   | {}
 16   | 13   | {}
 16   | 14   | {}
 16   | 15   | {}
 16   | 16   | {}
 16   | 17   | {16,17}
 16   | 18   | {16,17,18}
 16   | 19   | {16,17,18,19}
 17   | 1    | {}
 17   | 2    | {}
 17   | 3    | {}
 17   | 4    | {}
 17   | 5    | {}
 17   | 6    | {}
 17   | 7    | {}
 17   | 8    | {}
 17   | 9    | {}
 17   | 10   | {}
 17   | 11   | {}
 17   | 12   | {}
 17   | 13   | {}
 17   | 14   | {}
 17   | 15   | {}
 17   | 16   | {}
 17   | 17   | {}
 17   | 18   | {17,18}
 17   | 19   | {17,18,19}
 18   | 1    | {}
 18   | 2    | {}
 18   | 3    | {}
 18   | 4    | {}
 18   | 5    | {}
 18   | 6    | {}
 18   | 7    | {}
 18   | 8    | {}
 18   | 9    | {}
 18   | 10   | {}
 18   | 11   | {}
 18   | 12   | {}
 18   | 13   | {}
 18   | 14   | {}
 18   | 15   | {}
 18   | 16   | {}
 18   | 17   | {}
 18   | 18   | {}
 18   | 19   | {18,19}
 19   | 1    | {}
 19   | 2    | {}
 19   | 3    | {}
 19   | 4    | {}
 19   | 5    | {}
 19   | 6    | {}
 19   | 7    | {}
 19   | 8    | {}
 19   | 9    | {}
 19   | 10   | {}
 19   | 11   | {}
 19   | 12   | {}
 19   | 13   | {}
 19   | 14   | {}
 19   | 15   | {}
 19   | 16   | {}
 19   | 17   | {}
 19   | 18   | {}
 19   | 19   | {}
(361 rows)

-- Cycle
match (c1:c), (c2:c) where c1.id >= 11 and c1.id <= 19 and c2.id >= 11 and c2.id <= 19 return c1.id as c1id, c2.id as c2id, allshortestpaths((c1)-[:e*]->(c2)) order by c1id, c2id;
 c1id | c2id |                                         ?column?                                          
------+------+-------------------------------------------------------------------------------------------
 11   | 11   | {"[c[7.1]{\"id\": 11},e[12.19][7.1,7.1]{\"id\": \"c:11->c:11\"},c[7.1]{\"id\": 11}]"}
 11   | 12   | {"[c[7.1]{\"id\": 11},e[12.20][7.1,7.10]{\"id\": \"c:11->c:12\"},c[7.10]{\"id\": 12}]"}
 11   | 13   | {"[c[7.1]{\"id\": 11},e[12.21][7.1,7.19]{\"id\": \"c:11->c:13\"},c[7.19]{\"id\": 13}]"}
 11   | 14   | {"[c[7.1]{\"id\": 11},e[12.22][7.1,7.28]{\"id\": \"c:11->c:14\"},c[7.28]{\"id\": 14}]"}
 11   | 15   | {"[c[7.1]{\"id\": 11},e[12.23][7.1,7.37]{\"id\": \"c:11->c:15\"},c[7.37]{\"id\": 15}]"}
 11   | 16   | {"[c[7.1]{\"id\": 11},e[12.24][7.1,7.46]{\"id\": \"c:11->c:16\"},c[7.46]{\"id\": 16}]"}
 11   | 17   | {"[c[7.1]{\"id\": 11},e[12.25][7.1,7.55]{\"id\": \"c:11->c:17\"},c[7.55]{\"id\": 17}]"}
 11   | 18   | {"[c[7.1]{\"id\": 11},e[12.26][7.1,7.64]{\"id\": \"c:11->c:18\"},c[7.64]{\"id\": 18}]"}
 11   | 19   | {"[c[7.1]{\"id\": 11},e[12.27][7.1,7.73]{\"id\": \"c:11->c:19\"},c[7.73]{\"id\": 19}]"}
 12   | 11   | {"[c[7.10]{\"id\": 12},e[12.28][7.10,7.1]{\"id\": \"c:12->c:11\"},c[7.1]{\"id\": 11}]"}
 12   | 12   | {"[c[7.10]{\"id\": 12},e[12.29][7.10,7.10]{\"id\": \"c:12->c:12\"},c[7.10]{\"id\": 12}]"}
 12   | 13   | {"[c[7.10]{\"id\": 12},e[12.30][7.10,7.19]{\"id\": \"c:12->c:13\"},c[7.19]{\"id\": 13}]"}
 12   | 14   | {"[c[7.10]{\"id\": 12},e[12.31][7.10,7.28]{\"id\": \"c:12->c:14\"},c[7.28]{\"id\": 14}]"}
 12   | 15   | {"[c[7.10]{\"id\": 12},e[12.32][7.10,7.37]{\"id\": \"c:12->c:15\"},c[7.37]{\"id\": 15}]"}
 12   | 16   | {"[c[7.10]{\"id\": 12},e[12.33][7.10,7.46]{\"id\": \"c:12->c:16\"},c[7.46]{\"id\": 16}]"}
 12   | 17   | {"[c[7.10]{\"id\": 12},e[12.34][7.10,7.55]{\"id\": \"c:12->c:17\"},c[7.55]{\"id\": 17}]"}
 12   | 18   | {"[c[7.10]{\"id\": 12},e[12.35][7.10,7.64]{\"id\": \"c:12->c:18\"},c[7.64]{\"id\": 18}]"}
 12   | 19   | {"[c[7.10]{\"id\": 12},e[12.36][7.10,7.73]{\"id\": \"c:12->c:19\"},c[7.73]{\"id\": 19}]"}
 13   | 11   | {"[c[7.19]{\"id\": 13},e[12.37][7.19,7.1]{\"id\": \"c:13->c:11\"},c[7.1]{\"id\": 11}]"}
 13   | 12   | {"[c[7.19]{\"id\": 13},e[12.38][7.19,7.10]{\"id\": \"c:13->c:12\"},c[7.10]{\"id\": 12}]"}
 13   | 13   | {"[c[7.19]{\"id\": 13},e[12.39][7.19,7.19]{\"id\": \"c:13->c:13\"},c[7.19]{\"id\": 13}]"}
 13   | 14   | {"[c[7.19]{\"id\": 13},e[12.40][7.19,7.28]{\"id\": \"c:13->c:14\"},c[7.28]{\"id\": 14}]"}
 13   | 15   | {"[c[7.19]{\"id\": 13},e[12.41][7.19,7.37]{\"id\": \"c:13->c:15\"},c[7.37]{\"id\": 15}]"}
 13   | 16   | {"[c[7.19]{\"id\": 13},e[12.42][7.19,7.46]{\"id\": \"c:13->c:16\"},c[7.46]{\"id\": 16}]"}
 13   | 17   | {"[c[7.19]{\"id\": 13},e[12.43][7.19,7.55]{\"id\": \"c:13->c:17\"},c[7.55]{\"id\": 17}]"}
 13   | 18   | {"[c[7.19]{\"id\": 13},e[12.44][7.19,7.64]{\"id\": \"c:13->c:18\"},c[7.64]{\"id\": 18}]"}
 13   | 19   | {"[c[7.19]{\"id\": 13},e[12.45][7.19,7.73]{\"id\": \"c:13->c:19\"},c[7.73]{\"id\": 19}]"}
 14   | 11   | {"[c[7.28]{\"id\": 14},e[12.46][7.28,7.1]{\"id\": \"c:14->c:11\"},c[7.1]{\"id\": 11}]"}
 14   | 12   | {"[c[7.28]{\"id\": 14},e[12.47][7.28,7.10]{\"id\": \"c:14->c:12\"},c[7.10]{\"id\": 12}]"}
 14   | 13   | {"[c[7.28]{\"id\": 14},e[12.48][7.28,7.19]{\"id\": \"c:14->c:13\"},c[7.19]{\"id\": 13}]"}
 14   | 14   | {"[c[7.28]{\"id\": 14},e[12.49][7.28,7.28]{\"id\": \"c:14->c:14\"},c[7.28]{\"id\": 14}]"}
 14   | 15   | {"[c[7.28]{\"id\": 14},e[12.50][7.28,7.37]{\"id\": \"c:14->c:15\"},c[7.37]{\"id\": 15}]"}
 14   | 16   | {"[c[7.28]{\"id\": 14},e[12.51][7.28,7.46]{\"id\": \"c:14->c:16\"},c[7.46]{\"id\": 16}]"}
 14   | 17   | {"[c[7.28]{\"id\": 14},e[12.52][7.28,7.55]{\"id\": \"c:14->c:17\"},c[7.55]{\"id\": 17}]"}
 14   | 18   | {"[c[7.28]{\"id\": 14},e[12.53][7.28,7.64]{\"id\": \"c:14->c:18\"},c[7.64]{\"id\": 18}]"}
 14   | 19   | {"[c[7.28]{\"id\": 14},e[12.54][7.28,7.73]{\"id\": \"c:14->c:19\"},c[7.73]{\"id\": 19}]"}
 15   | 11   | {"[c[7.37]{\"id\": 15},e[12.55][7.37,7.1]{\"id\": \"c:15->c:11\"},c[7.1]{\"id\": 11}]"}
 15   | 12   | {"[c[7.37]{\"id\": 15},e[12.56][7.37,7.10]{\"id\": \"c:15->c:12\"},c[7.10]{\"id\": 12}]"}
 15   | 13   | {"[c[7.37]{\"id\": 15},e[12.57][7.37,7.19]{\"id\": \"c:15->c:13\"},c[7.19]{\"id\": 13}]"}
 15   | 14   | {"[c[7.37]{\"id\": 15},e[12.58][7.37,7.28]{\"id\": \"c:15->c:14\"},c[7.28]{\"id\": 14}]"}
 15   | 15   | {"[c[7.37]{\"id\": 15},e[12.59][7.37,7.37]{\"id\": \"c:15->c:15\"},c[7.37]{\"id\": 15}]"}
 15   | 16   | {"[c[7.37]{\"id\": 15},e[12.60][7.37,7.46]{\"id\": \"c:15->c:16\"},c[7.46]{\"id\": 16}]"}
 15   | 17   | {"[c[7.37]{\"id\": 15},e[12.61][7.37,7.55]{\"id\": \"c:15->c:17\"},c[7.55]{\"id\": 17}]"}
 15   | 18   | {"[c[7.37]{\"id\": 15},e[12.62][7.37,7.64]{\"id\": \"c:15->c:18\"},c[7.64]{\"id\": 18}]"}
 15   | 19   | {"[c[7.37]{\"id\": 15},e[12.63][7.37,7.73]{\"id\": \"c:15->c:19\"},c[7.73]{\"id\": 19}]"}
 16   | 11   | {"[c[7.46]{\"id\": 16},e[12.64][7.46,7.1]{\"id\": \"c:16->c:11\"},c[7.1]{\"id\": 11}]"}
 16   | 12   | {"[c[7.46]{\"id\": 16},e[12.65][7.46,7.10]{\"id\": \"c:16->c:12\"},c[7.10]{\"id\": 12}]"}
 16   | 13   | {"[c[7.46]{\"id\": 16},e[12.66][7.46,7.19]{\"id\": \"c:16->c:13\"},c[7.19]{\"id\": 13}]"}
 16   | 14   | {"[c[7.46]{\"id\": 16},e[12.67][7.46,7.28]{\"id\": \"c:16->c:14\"},c[7.28]{\"id\": 14}]"}
 16   | 15   | {"[c[7.46]{\"id\": 16},e[12.68][7.46,7.37]{\"id\": \"c:16->c:15\"},c[7.37]{\"id\": 15}]"}
 16   | 16   | {"[c[7.46]{\"id\": 16},e[12.69][7.46,7.46]{\"id\": \"c:16->c:16\"},c[7.46]{\"id\": 16}]"}
 16   | 17   | {"[c[7.46]{\"id\": 16},e[12.70][7.46,7.55]{\"id\": \"c:16->c:17\"},c[7.55]{\"id\": 17}]"}
 16   | 18   | {"[c[7.46]{\"id\": 16},e[12.71][7.46,7.64]{\"id\": \"c:16->c:18\"},c[7.64]{\"id\": 18}]"}
 16   | 19   | {"[c[7.46]{\"id\": 16},e[12.72][7.46,7.73]{\"id\": \"c:16->c:19\"},c[7.73]{\"id\": 19}]"}
 17   | 11   | {"[c[7.55]{\"id\": 17},e[12.73][7.55,7.1]{\"id\": \"c:17->c:11\"},c[7.1]{\"id\": 11}]"}
 17   | 12   | {"[c[7.55]{\"id\": 17},e[12.74][7.55,7.10]{\"id\": \"c:17->c:12\"},c[7.10]{\"id\": 12}]"}
 17   | 13   | {"[c[7.55]{\"id\": 17},e[12.75][7.55,7.19]{\"id\": \"c:17->c:13\"},c[7.19]{\"id\": 13}]"}
 17   | 14   | {"[c[7.55]{\"id\": 17},e[12.76][7.55,7.28]{\"id\": \"c:17->c:14\"},c[7.28]{\"id\": 14}]"}
 17   | 15   | {"[c[7.55]{\"id\": 17},e[12.77][7.55,7.37]{\"id\": \"c:17->c:15\"},c[7.37]{\"id\": 15}]"}
 17   | 16   | {"[c[7.55]{\"id\": 17},e[12.78][7.55,7.46]{\"id\": \"c:17->c:16\"},c[7.46]{\"id\": 16}]"}
 17   | 17   | {"[c[7.55]{\"id\": 17},e[12.79][7.55,7.55]{\"id\": \"c:17->c:17\"},c[7.55]{\"id\": 17}]"}
 17   | 18   | {"[c[7.55]{\"id\": 17},e[12.80][7.55,7.64]{\"id\": \"c:17->c:18\"},c[7.64]{\"id\": 18}]"}
 17   | 19   | {"[c[7.55]{\"id\": 17},e[12.81][7.55,7.73]{\"id\": \"c:17->c:19\"},c[7.73]{\"id\": 19}]"}
 18   | 11   | {"[c[7.64]{\"id\": 18},e[12.82][7.64,7.1]{\"id\": \"c:18->c:11\"},c[7.1]{\"id\": 11}]"}
 18   | 12   | {"[c[7.64]{\"id\": 18},e[12.83][7.64,7.10]{\"id\": \"c:18->c:12\"},c[7.10]{\"id\": 12}]"}
 18   | 13   | {"[c[7.64]{\"id\": 18},e[12.84][7.64,7.19]{\"id\": \"c:18->c:13\"},c[7.19]{\"id\": 13}]"}
 18   | 14   | {"[c[7.64]{\"id\": 18},e[12.85][7.64,7.28]{\"id\": \"c:18->c:14\"},c[7.28]{\"id\": 14}]"}
 18   | 15   | {"[c[7.64]{\"id\": 18},e[12.86][7.64,7.37]{\"id\": \"c:18->c:15\"},c[7.37]{\"id\": 15}]"}
 18   | 16   | {"[c[7.64]{\"id\": 18},e[12.87][7.64,7.46]{\"id\": \"c:18->c:16\"},c[7.46]{\"id\": 16}]"}
 18   | 17   | {"[c[7.64]{\"id\": 18},e[12.88][7.64,7.55]{\"id\": \"c:18->c:17\"},c[7.55]{\"id\": 17}]"}
 18   | 18   | {"[c[7.64]{\"id\": 18},e[12.89][7.64,7.64]{\"id\": \"c:18->c:18\"},c[7.64]{\"id\": 18}]"}
 18   | 19   | {"[c[7.64]{\"id\": 18},e[12.90][7.64,7.73]{\"id\": \"c:18->c:19\"},c[7.73]{\"id\": 19}]"}
 19   | 11   | {"[c[7.73]{\"id\": 19},e[12.91][7.73,7.1]{\"id\": \"c:19->c:11\"},c[7.1]{\"id\": 11}]"}
 19   | 12   | {"[c[7.73]{\"id\": 19},e[12.92][7.73,7.10]{\"id\": \"c:19->c:12\"},c[7.10]{\"id\": 12}]"}
 19   | 13   | {"[c[7.73]{\"id\": 19},e[12.93][7.73,7.19]{\"id\": \"c:19->c:13\"},c[7.19]{\"id\": 13}]"}
 19   | 14   | {"[c[7.73]{\"id\": 19},e[12.94][7.73,7.28]{\"id\": \"c:19->c:14\"},c[7.28]{\"id\": 14}]"}
 19   | 15   | {"[c[7.73]{\"id\": 19},e[12.95][7.73,7.37]{\"id\": \"c:19->c:15\"},c[7.37]{\"id\": 15}]"}
 19   | 16   | {"[c[7.73]{\"id\": 19},e[12.96][7.73,7.46]{\"id\": \"c:19->c:16\"},c[7.46]{\"id\": 16}]"}
 19   | 17   | {"[c[7.73]{\"id\": 19},e[12.97][7.73,7.55]{\"id\": \"c:19->c:17\"},c[7.55]{\"id\": 17}]"}
 19   | 18   | {"[c[7.73]{\"id\": 19},e[12.98][7.73,7.64]{\"id\": \"c:19->c:18\"},c[7.64]{\"id\": 18}]"}
 19   | 19   | {"[c[7.73]{\"id\": 19},e[12.99][7.73,7.73]{\"id\": \"c:19->c:19\"},c[7.73]{\"id\": 19}]"}
(81 rows)

match (c1:c), (c2:c) where c1.id >= 11 and c1.id <= 19 and c2.id >= 21 and c2.id <= 29 return c1.id as c1id, c2.id as c2id, allshortestpaths((c1)-[:e*]->(c2)) order by c1id, c2id;
 c1id | c2id | ?column? 
------+------+----------
 11   | 21   | 
 11   | 22   | 
 11   | 23   | 
 11   | 24   | 
 11   | 25   | 
 11   | 26   | 
 11   | 27   | 
 11   | 28   | 
 11   | 29   | 
 12   | 21   | 
 12   | 22   | 
 12   | 23   | 
 12   | 24   | 
 12   | 25   | 
 12   | 26   | 
 12   | 27   | 
 12   | 28   | 
 12   | 29   | 
 13   | 21   | 
 13   | 22   | 
 13   | 23   | 
 13   | 24   | 
 13   | 25   | 
 13   | 26   | 
 13   | 27   | 
 13   | 28   | 
 13   | 29   | 
 14   | 21   | 
 14   | 22   | 
 14   | 23   | 
 14   | 24   | 
 14   | 25   | 
 14   | 26   | 
 14   | 27   | 
 14   | 28   | 
 14   | 29   | 
 15   | 21   | 
 15   | 22   | 
 15   | 23   | 
 15   | 24   | 
 15   | 25   | 
 15   | 26   | 
 15   | 27   | 
 15   | 28   | 
 15   | 29   | 
 16   | 21   | 
 16   | 22   | 
 16   | 23   | 
 16   | 24   | 
 16   | 25   | 
 16   | 26   | 
 16   | 27   | 
 16   | 28   | 
 16   | 29   | 
 17   | 21   | 
 17   | 22   | 
 17   | 23   | 
 17   | 24   | 
 17   | 25   | 
 17   | 26   | 
 17   | 27   | 
 17   | 28   | 
 17   | 29   | 
 18   | 21   | 
 18   | 22   | 
 18   | 23   | 
 18   | 24   | 
 18   | 25   | 
 18   | 26   | 
 18   | 27   | 
 18   | 28   | 
 18   | 29   | 
 19   | 21   | 
 19   | 22   | 
 19   | 23   | 
 19   | 24   | 
 19   | 25   | 
 19   | 26   | 
 19   | 27   | 
 19   | 28   | 
 19   | 29   | 
(81 rows)

match (c1:c), (c2:c) where c1.id >= 31 and c1.id <= 39 and c2.id >= 31 and c2.id <= 39 return c1.id as c1id, c2.id as c2id, allshortestpaths((c1)-[:e*]->(c2)) order by c1id, c2id;
 c1id | c2id |column

 31   | 31   | {"[c[7.3]{\"id\": 31},e[12.181][7.3,7.12]{\"id\": \"c:31->c:32\"},c[7.12]{\"id\": 32},e[12.189][7.12,7.3]{\"id\": \"c:32->c:31\"},c[7.3]{\"id\": 31}]","[c[7.3]{\"id\": 31},e[12.182][7.3,7.21]{\"id\": \"c:31->c:33\"},c[7.21]{\"id\": 33},e[12.197][7.21,7.3]{\"id\": \"c:33->c:31\"},c[7.3]{\"id\": 31}]","[c[7.3]{\"id\": 31},e[12.183][7.3,7.30]{\"id\": \"c:31->c:34\"},c[7.30]{\"id\": 34},e[12.205][7.30,7.3]{\"id\": \"c:34->c:31\"},c[7.3]{\"id\": 31}]","[c[7.3]{\"id\": 31},e[12.184][7.3,7.39]{\"id\": \"c:31->c:35\"},c[7.39]{\"id\": 35},e[12.213][7.39,7.3]{\"id\": \"c:35->c:31\"},c[7.3]{\"id\": 31}]","[c[7.3]{\"id\": 31},e[12.185][7.3,7.48]{\"id\": \"c:31->c:36\"},c[7.48]{\"id\": 36},e[12.221][7.48,7.3]{\"id\": \"c:36->c:31\"},c[7.3]{\"id\": 31}]","[c[7.3]{\"id\": 31},e[12.186][7.3,7.57]{\"id\": \"c:31->c:37\"},c[7.57]{\"id\": 37},e[12.229][7.57,7.3]{\"id\": \"c:37->c:31\"},c[7.3]{\"id\": 31}]","[c[7.3]{\"id\": 31},e[12.187][7.3,7.66]{\"id\": \"c:31->c:38\"},c[7.66]{\"id\": 38},e[12.237][7.66,7.3]{\"id\": \"c:38->c:31\"},c[7.3]{\"id\": 31}]","[c[7.3]{\"id\": 31},e[12.188][7.3,7.75]{\"id\": \"c:31->c:39\"},c[7.75]{\"id\": 39},e[12.245][7.75,7.3]{\"id\": \"c:39->c:31\"},c[7.3]{\"id\": 31}]"}
 31   | 32   | {"[c[7.3]{\"id\": 31},e[12.181][7.3,7.12]{\"id\": \"c:31->c:32\"},c[7.12]{\"id\": 32}]"}
 31   | 33   | {"[c[7.3]{\"id\": 31},e[12.182][7.3,7.21]{\"id\": \"c:31->c:33\"},c[7.21]{\"id\": 33}]"}
 31   | 34   | {"[c[7.3]{\"id\": 31},e[12.183][7.3,7.30]{\"id\": \"c:31->c:34\"},c[7.30]{\"id\": 34}]"}
 31   | 35   | {"[c[7.3]{\"id\": 31},e[12.184][7.3,7.39]{\"id\": \"c:31->c:35\"},c[7.39]{\"id\": 35}]"}
 31   | 36   | {"[c[7.3]{\"id\": 31},e[12.185][7.3,7.48]{\"id\": \"c:31->c:36\"},c[7.48]{\"id\": 36}]"}
 31   | 37   | {"[c[7.3]{\"id\": 31},e[12.186][7.3,7.57]{\"id\": \"c:31->c:37\"},c[7.57]{\"id\": 37}]"}
 31   | 38   | {"[c[7.3]{\"id\": 31},e[12.187][7.3,7.66]{\"id\": \"c:31->c:38\"},c[7.66]{\"id\": 38}]"}
 31   | 39   | {"[c[7.3]{\"id\": 31},e[12.188][7.3,7.75]{\"id\": \"c:31->c:39\"},c[7.75]{\"id\": 39}]"}
 32   | 31   | {"[c[7.12]{\"id\": 32},e[12.189][7.12,7.3]{\"id\": \"c:32->c:31\"},c[7.3]{\"id\": 31}]"}
 32   | 32   | {"[c[7.12]{\"id\": 32},e[12.189][7.12,7.3]{\"id\": \"c:32->c:31\"},c[7.3]{\"id\": 31},e[12.181][7.3,7.12]{\"id\": \"c:31->c:32\"},c[7.12]{\"id\": 32}]","[c[7.12]{\"id\": 32},e[12.190][7.12,7.21]{\"id\": \"c:32->c:33\"},c[7.21]{\"id\": 33},e[12.198][7.21,7.12]{\"id\": \"c:33->c:32\"},c[7.12]{\"id\": 32}]","[c[7.12]{\"id\": 32},e[12.191][7.12,7.30]{\"id\": \"c:32->c:34\"},c[7.30]{\"id\": 34},e[12.206][7.30,7.12]{\"id\": \"c:34->c:32\"},c[7.12]{\"id\": 32}]","[c[7.12]{\"id\": 32},e[12.192][7.12,7.39]{\"id\": \"c:32->c:35\"},c[7.39]{\"id\": 35},e[12.214][7.39,7.12]{\"id\": \"c:35->c:32\"},c[7.12]{\"id\": 32}]","[c[7.12]{\"id\": 32},e[12.193][7.12,7.48]{\"id\": \"c:32->c:36\"},c[7.48]{\"id\": 36},e[12.222][7.48,7.12]{\"id\": \"c:36->c:32\"},c[7.12]{\"id\": 32}]","[c[7.12]{\"id\": 32},e[12.194][7.12,7.57]{\"id\": \"c:32->c:37\"},c[7.57]{\"id\": 37},e[12.230][7.57,7.12]{\"id\": \"c:37->c:32\"},c[7.12]{\"id\": 32}]","[c[7.12]{\"id\": 32},e[12.195][7.12,7.66]{\"id\": \"c:32->c:38\"},c[7.66]{\"id\": 38},e[12.238][7.66,7.12]{\"id\": \"c:38->c:32\"},c[7.12]{\"id\": 32}]","[c[7.12]{\"id\": 32},e[12.196][7.12,7.75]{\"id\": \"c:32->c:39\"},c[7.75]{\"id\": 39},e[12.246][7.75,7.12]{\"id\": \"c:39->c:32\"},c[7.12]{\"id\": 32}]"}
 32   | 33   | {"[c[7.12]{\"id\": 32},e[12.190][7.12,7.21]{\"id\": \"c:32->c:33\"},c[7.21]{\"id\": 33}]"}
 32   | 34   | {"[c[7.12]{\"id\": 32},e[12.191][7.12,7.30]{\"id\": \"c:32->c:34\"},c[7.30]{\"id\": 34}]"}
 32   | 35   | {"[c[7.12]{\"id\": 32},e[12.192][7.12,7.39]{\"id\": \"c:32->c:35\"},c[7.39]{\"id\": 35}]"}
 32   | 36   | {"[c[7.12]{\"id\": 32},e[12.193][7.12,7.48]{\"id\": \"c:32->c:36\"},c[7.48]{\"id\": 36}]"}
 32   | 37   | {"[c[7.12]{\"id\": 32},e[12.194][7.12,7.57]{\"id\": \"c:32->c:37\"},c[7.57]{\"id\": 37}]"}
 32   | 38   | {"[c[7.12]{\"id\": 32},e[12.195][7.12,7.66]{\"id\": \"c:32->c:38\"},c[7.66]{\"id\": 38}]"}
 32   | 39   | {"[c[7.12]{\"id\": 32},e[12.196][7.12,7.75]{\"id\": \"c:32->c:39\"},c[7.75]{\"id\": 39}]"}
 33   | 31   | {"[c[7.21]{\"id\": 33},e[12.197][7.21,7.3]{\"id\": \"c:33->c:31\"},c[7.3]{\"id\": 31}]"}
 33   | 32   | {"[c[7.21]{\"id\": 33},e[12.198][7.21,7.12]{\"id\": \"c:33->c:32\"},c[7.12]{\"id\": 32}]"}
 33   | 33   | {"[c[7.21]{\"id\": 33},e[12.197][7.21,7.3]{\"id\": \"c:33->c:31\"},c[7.3]{\"id\": 31},e[12.182][7.3,7.21]{\"id\": \"c:31->c:33\"},c[7.21]{\"id\": 33}]","[c[7.21]{\"id\": 33},e[12.198][7.21,7.12]{\"id\": \"c:33->c:32\"},c[7.12]{\"id\": 32},e[12.190][7.12,7.21]{\"id\": \"c:32->c:33\"},c[7.21]{\"id\": 33}]","[c[7.21]{\"id\": 33},e[12.199][7.21,7.30]{\"id\": \"c:33->c:34\"},c[7.30]{\"id\": 34},e[12.207][7.30,7.21]{\"id\": \"c:34->c:33\"},c[7.21]{\"id\": 33}]","[c[7.21]{\"id\": 33},e[12.200][7.21,7.39]{\"id\": \"c:33->c:35\"},c[7.39]{\"id\": 35},e[12.215][7.39,7.21]{\"id\": \"c:35->c:33\"},c[7.21]{\"id\": 33}]","[c[7.21]{\"id\": 33},e[12.201][7.21,7.48]{\"id\": \"c:33->c:36\"},c[7.48]{\"id\": 36},e[12.223][7.48,7.21]{\"id\": \"c:36->c:33\"},c[7.21]{\"id\": 33}]","[c[7.21]{\"id\": 33},e[12.202][7.21,7.57]{\"id\": \"c:33->c:37\"},c[7.57]{\"id\": 37},e[12.231][7.57,7.21]{\"id\": \"c:37->c:33\"},c[7.21]{\"id\": 33}]","[c[7.21]{\"id\": 33},e[12.203][7.21,7.66]{\"id\": \"c:33->c:38\"},c[7.66]{\"id\": 38},e[12.239][7.66,7.21]{\"id\": \"c:38->c:33\"},c[7.21]{\"id\": 33}]","[c[7.21]{\"id\": 33},e[12.204][7.21,7.75]{\"id\": \"c:33->c:39\"},c[7.75]{\"id\": 39},e[12.247][7.75,7.21]{\"id\": \"c:39->c:33\"},c[7.21]{\"id\": 33}]"}
 33   | 34   | {"[c[7.21]{\"id\": 33},e[12.199][7.21,7.30]{\"id\": \"c:33->c:34\"},c[7.30]{\"id\": 34}]"}
 33   | 35   | {"[c[7.21]{\"id\": 33},e[12.200][7.21,7.39]{\"id\": \"c:33->c:35\"},c[7.39]{\"id\": 35}]"}
 33   | 36   | {"[c[7.21]{\"id\": 33},e[12.201][7.21,7.48]{\"id\": \"c:33->c:36\"},c[7.48]{\"id\": 36}]"}
 33   | 37   | {"[c[7.21]{\"id\": 33},e[12.202][7.21,7.57]{\"id\": \"c:33->c:37\"},c[7.57]{\"id\": 37}]"}
 33   | 38   | {"[c[7.21]{\"id\": 33},e[12.203][7.21,7.66]{\"id\": \"c:33->c:38\"},c[7.66]{\"id\": 38}]"}
 33   | 39   | {"[c[7.21]{\"id\": 33},e[12.204][7.21,7.75]{\"id\": \"c:33->c:39\"},c[7.75]{\"id\": 39}]"}
 34   | 31   | {"[c[7.30]{\"id\": 34},e[12.205][7.30,7.3]{\"id\": \"c:34->c:31\"},c[7.3]{\"id\": 31}]"}
 34   | 32   | {"[c[7.30]{\"id\": 34},e[12.206][7.30,7.12]{\"id\": \"c:34->c:32\"},c[7.12]{\"id\": 32}]"}
 34   | 33   | {"[c[7.30]{\"id\": 34},e[12.207][7.30,7.21]{\"id\": \"c:34->c:33\"},c[7.21]{\"id\": 33}]"}
 34   | 34   | {"[c[7.30]{\"id\": 34},e[12.205][7.30,7.3]{\"id\": \"c:34->c:31\"},c[7.3]{\"id\": 31},e[12.183][7.3,7.30]{\"id\": \"c:31->c:34\"},c[7.30]{\"id\": 34}]","[c[7.30]{\"id\": 34},e[12.206][7.30,7.12]{\"id\": \"c:34->c:32\"},c[7.12]{\"id\": 32},e[12.191][7.12,7.30]{\"id\": \"c:32->c:34\"},c[7.30]{\"id\": 34}]","[c[7.30]{\"id\": 34},e[12.207][7.30,7.21]{\"id\": \"c:34->c:33\"},c[7.21]{\"id\": 33},e[12.199][7.21,7.30]{\"id\": \"c:33->c:34\"},c[7.30]{\"id\": 34}]","[c[7.30]{\"id\": 34},e[12.208][7.30,7.39]{\"id\": \"c:34->c:35\"},c[7.39]{\"id\": 35},e[12.216][7.39,7.30]{\"id\": \"c:35->c:34\"},c[7.30]{\"id\": 34}]","[c[7.30]{\"id\": 34},e[12.209][7.30,7.48]{\"id\": \"c:34->c:36\"},c[7.48]{\"id\": 36},e[12.224][7.48,7.30]{\"id\": \"c:36->c:34\"},c[7.30]{\"id\": 34}]","[c[7.30]{\"id\": 34},e[12.210][7.30,7.57]{\"id\": \"c:34->c:37\"},c[7.57]{\"id\": 37},e[12.232][7.57,7.30]{\"id\": \"c:37->c:34\"},c[7.30]{\"id\": 34}]","[c[7.30]{\"id\": 34},e[12.211][7.30,7.66]{\"id\": \"c:34->c:38\"},c[7.66]{\"id\": 38},e[12.240][7.66,7.30]{\"id\": \"c:38->c:34\"},c[7.30]{\"id\": 34}]","[c[7.30]{\"id\": 34},e[12.212][7.30,7.75]{\"id\": \"c:34->c:39\"},c[7.75]{\"id\": 39},e[12.248][7.75,7.30]{\"id\": \"c:39->c:34\"},c[7.30]{\"id\": 34}]"}
 34   | 35   | {"[c[7.30]{\"id\": 34},e[12.208][7.30,7.39]{\"id\": \"c:34->c:35\"},c[7.39]{\"id\": 35}]"}
 34   | 36   | {"[c[7.30]{\"id\": 34},e[12.209][7.30,7.48]{\"id\": \"c:34->c:36\"},c[7.48]{\"id\": 36}]"}
 34   | 37   | {"[c[7.30]{\"id\": 34},e[12.210][7.30,7.57]{\"id\": \"c:34->c:37\"},c[7.57]{\"id\": 37}]"}
 34   | 38   | {"[c[7.30]{\"id\": 34},e[12.211][7.30,7.66]{\"id\": \"c:34->c:38\"},c[7.66]{\"id\": 38}]"}
 34   | 39   | {"[c[7.30]{\"id\": 34},e[12.212][7.30,7.75]{\"id\": \"c:34->c:39\"},c[7.75]{\"id\": 39}]"}
 35   | 31   | {"[c[7.39]{\"id\": 35},e[12.213][7.39,7.3]{\"id\": \"c:35->c:31\"},c[7.3]{\"id\": 31}]"}
 35   | 32   | {"[c[7.39]{\"id\": 35},e[12.214][7.39,7.12]{\"id\": \"c:35->c:32\"},c[7.12]{\"id\": 32}]"}
 35   | 33   | {"[c[7.39]{\"id\": 35},e[12.215][7.39,7.21]{\"id\": \"c:35->c:33\"},c[7.21]{\"id\": 33}]"}
 35   | 34   | {"[c[7.39]{\"id\": 35},e[12.216][7.39,7.30]{\"id\": \"c:35->c:34\"},c[7.30]{\"id\": 34}]"}
 35   | 35   | {"[c[7.39]{\"id\": 35},e[12.213][7.39,7.3]{\"id\": \"c:35->c:31\"},c[7.3]{\"id\": 31},e[12.184][7.3,7.39]{\"id\": \"c:31->c:35\"},c[7.39]{\"id\": 35}]","[c[7.39]{\"id\": 35},e[12.214][7.39,7.12]{\"id\": \"c:35->c:32\"},c[7.12]{\"id\": 32},e[12.192][7.12,7.39]{\"id\": \"c:32->c:35\"},c[7.39]{\"id\": 35}]","[c[7.39]{\"id\": 35},e[12.215][7.39,7.21]{\"id\": \"c:35->c:33\"},c[7.21]{\"id\": 33},e[12.200][7.21,7.39]{\"id\": \"c:33->c:35\"},c[7.39]{\"id\": 35}]","[c[7.39]{\"id\": 35},e[12.216][7.39,7.30]{\"id\": \"c:35->c:34\"},c[7.30]{\"id\": 34},e[12.208][7.30,7.39]{\"id\": \"c:34->c:35\"},c[7.39]{\"id\": 35}]","[c[7.39]{\"id\": 35},e[12.217][7.39,7.48]{\"id\": \"c:35->c:36\"},c[7.48]{\"id\": 36},e[12.225][7.48,7.39]{\"id\": \"c:36->c:35\"},c[7.39]{\"id\": 35}]","[c[7.39]{\"id\": 35},e[12.218][7.39,7.57]{\"id\": \"c:35->c:37\"},c[7.57]{\"id\": 37},e[12.233][7.57,7.39]{\"id\": \"c:37->c:35\"},c[7.39]{\"id\": 35}]","[c[7.39]{\"id\": 35},e[12.219][7.39,7.66]{\"id\": \"c:35->c:38\"},c[7.66]{\"id\": 38},e[12.241][7.66,7.39]{\"id\": \"c:38->c:35\"},c[7.39]{\"id\": 35}]","[c[7.39]{\"id\": 35},e[12.220][7.39,7.75]{\"id\": \"c:35->c:39\"},c[7.75]{\"id\": 39},e[12.249][7.75,7.39]{\"id\": \"c:39->c:35\"},c[7.39]{\"id\": 35}]"}
 35   | 36   | {"[c[7.39]{\"id\": 35},e[12.217][7.39,7.48]{\"id\": \"c:35->c:36\"},c[7.48]{\"id\": 36}]"}
 35   | 37   | {"[c[7.39]{\"id\": 35},e[12.218][7.39,7.57]{\"id\": \"c:35->c:37\"},c[7.57]{\"id\": 37}]"}
 35   | 38   | {"[c[7.39]{\"id\": 35},e[12.219][7.39,7.66]{\"id\": \"c:35->c:38\"},c[7.66]{\"id\": 38}]"}
 35   | 39   | {"[c[7.39]{\"id\": 35},e[12.220][7.39,7.75]{\"id\": \"c:35->c:39\"},c[7.75]{\"id\": 39}]"}
 36   | 31   | {"[c[7.48]{\"id\": 36},e[12.221][7.48,7.3]{\"id\": \"c:36->c:31\"},c[7.3]{\"id\": 31}]"}
 36   | 32   | {"[c[7.48]{\"id\": 36},e[12.222][7.48,7.12]{\"id\": \"c:36->c:32\"},c[7.12]{\"id\": 32}]"}
 36   | 33   | {"[c[7.48]{\"id\": 36},e[12.223][7.48,7.21]{\"id\": \"c:36->c:33\"},c[7.21]{\"id\": 33}]"}
 36   | 34   | {"[c[7.48]{\"id\": 36},e[12.224][7.48,7.30]{\"id\": \"c:36->c:34\"},c[7.30]{\"id\": 34}]"}
 36   | 35   | {"[c[7.48]{\"id\": 36},e[12.225][7.48,7.39]{\"id\": \"c:36->c:35\"},c[7.39]{\"id\": 35}]"}
 36   | 36   | {"[c[7.48]{\"id\": 36},e[12.221][7.48,7.3]{\"id\": \"c:36->c:31\"},c[7.3]{\"id\": 31},e[12.185][7.3,7.48]{\"id\": \"c:31->c:36\"},c[7.48]{\"id\": 36}]","[c[7.48]{\"id\": 36},e[12.222][7.48,7.12]{\"id\": \"c:36->c:32\"},c[7.12]{\"id\": 32},e[12.193][7.12,7.48]{\"id\": \"c:32->c:36\"},c[7.48]{\"id\": 36}]","[c[7.48]{\"id\": 36},e[12.223][7.48,7.21]{\"id\": \"c:36->c:33\"},c[7.21]{\"id\": 33},e[12.201][7.21,7.48]{\"id\": \"c:33->c:36\"},c[7.48]{\"id\": 36}]","[c[7.48]{\"id\": 36},e[12.224][7.48,7.30]{\"id\": \"c:36->c:34\"},c[7.30]{\"id\": 34},e[12.209][7.30,7.48]{\"id\": \"c:34->c:36\"},c[7.48]{\"id\": 36}]","[c[7.48]{\"id\": 36},e[12.225][7.48,7.39]{\"id\": \"c:36->c:35\"},c[7.39]{\"id\": 35},e[12.217][7.39,7.48]{\"id\": \"c:35->c:36\"},c[7.48]{\"id\": 36}]","[c[7.48]{\"id\": 36},e[12.226][7.48,7.57]{\"id\": \"c:36->c:37\"},c[7.57]{\"id\": 37},e[12.234][7.57,7.48]{\"id\": \"c:37->c:36\"},c[7.48]{\"id\": 36}]","[c[7.48]{\"id\": 36},e[12.227][7.48,7.66]{\"id\": \"c:36->c:38\"},c[7.66]{\"id\": 38},e[12.242][7.66,7.48]{\"id\": \"c:38->c:36\"},c[7.48]{\"id\": 36}]","[c[7.48]{\"id\": 36},e[12.228][7.48,7.75]{\"id\": \"c:36->c:39\"},c[7.75]{\"id\": 39},e[12.250][7.75,7.48]{\"id\": \"c:39->c:36\"},c[7.48]{\"id\": 36}]"}
 36   | 37   | {"[c[7.48]{\"id\": 36},e[12.226][7.48,7.57]{\"id\": \"c:36->c:37\"},c[7.57]{\"id\": 37}]"}
 36   | 38   | {"[c[7.48]{\"id\": 36},e[12.227][7.48,7.66]{\"id\": \"c:36->c:38\"},c[7.66]{\"id\": 38}]"}
 36   | 39   | {"[c[7.48]{\"id\": 36},e[12.228][7.48,7.75]{\"id\": \"c:36->c:39\"},c[7.75]{\"id\": 39}]"}
 37   | 31   | {"[c[7.57]{\"id\": 37},e[12.229][7.57,7.3]{\"id\": \"c:37->c:31\"},c[7.3]{\"id\": 31}]"}
 37   | 32   | {"[c[7.57]{\"id\": 37},e[12.230][7.57,7.12]{\"id\": \"c:37->c:32\"},c[7.12]{\"id\": 32}]"}
 37   | 33   | {"[c[7.57]{\"id\": 37},e[12.231][7.57,7.21]{\"id\": \"c:37->c:33\"},c[7.21]{\"id\": 33}]"}
 37   | 34   | {"[c[7.57]{\"id\": 37},e[12.232][7.57,7.30]{\"id\": \"c:37->c:34\"},c[7.30]{\"id\": 34}]"}
 37   | 35   | {"[c[7.57]{\"id\": 37},e[12.233][7.57,7.39]{\"id\": \"c:37->c:35\"},c[7.39]{\"id\": 35}]"}
 37   | 36   | {"[c[7.57]{\"id\": 37},e[12.234][7.57,7.48]{\"id\": \"c:37->c:36\"},c[7.48]{\"id\": 36}]"}
 37   | 37   | {"[c[7.57]{\"id\": 37},e[12.229][7.57,7.3]{\"id\": \"c:37->c:31\"},c[7.3]{\"id\": 31},e[12.186][7.3,7.57]{\"id\": \"c:31->c:37\"},c[7.57]{\"id\": 37}]","[c[7.57]{\"id\": 37},e[12.230][7.57,7.12]{\"id\": \"c:37->c:32\"},c[7.12]{\"id\": 32},e[12.194][7.12,7.57]{\"id\": \"c:32->c:37\"},c[7.57]{\"id\": 37}]","[c[7.57]{\"id\": 37},e[12.231][7.57,7.21]{\"id\": \"c:37->c:33\"},c[7.21]{\"id\": 33},e[12.202][7.21,7.57]{\"id\": \"c:33->c:37\"},c[7.57]{\"id\": 37}]","[c[7.57]{\"id\": 37},e[12.232][7.57,7.30]{\"id\": \"c:37->c:34\"},c[7.30]{\"id\": 34},e[12.210][7.30,7.57]{\"id\": \"c:34->c:37\"},c[7.57]{\"id\": 37}]","[c[7.57]{\"id\": 37},e[12.233][7.57,7.39]{\"id\": \"c:37->c:35\"},c[7.39]{\"id\": 35},e[12.218][7.39,7.57]{\"id\": \"c:35->c:37\"},c[7.57]{\"id\": 37}]","[c[7.57]{\"id\": 37},e[12.234][7.57,7.48]{\"id\": \"c:37->c:36\"},c[7.48]{\"id\": 36},e[12.226][7.48,7.57]{\"id\": \"c:36->c:37\"},c[7.57]{\"id\": 37}]","[c[7.57]{\"id\": 37},e[12.235][7.57,7.66]{\"id\": \"c:37->c:38\"},c[7.66]{\"id\": 38},e[12.243][7.66,7.57]{\"id\": \"c:38->c:37\"},c[7.57]{\"id\": 37}]","[c[7.57]{\"id\": 37},e[12.236][7.57,7.75]{\"id\": \"c:37->c:39\"},c[7.75]{\"id\": 39},e[12.251][7.75,7.57]{\"id\": \"c:39->c:37\"},c[7.57]{\"id\": 37}]"}
 37   | 38   | {"[c[7.57]{\"id\": 37},e[12.235][7.57,7.66]{\"id\": \"c:37->c:38\"},c[7.66]{\"id\": 38}]"}
 37   | 39   | {"[c[7.57]{\"id\": 37},e[12.236][7.57,7.75]{\"id\": \"c:37->c:39\"},c[7.75]{\"id\": 39}]"}
 38   | 31   | {"[c[7.66]{\"id\": 38},e[12.237][7.66,7.3]{\"id\": \"c:38->c:31\"},c[7.3]{\"id\": 31}]"}
 38   | 32   | {"[c[7.66]{\"id\": 38},e[12.238][7.66,7.12]{\"id\": \"c:38->c:32\"},c[7.12]{\"id\": 32}]"}
 38   | 33   | {"[c[7.66]{\"id\": 38},e[12.239][7.66,7.21]{\"id\": \"c:38->c:33\"},c[7.21]{\"id\": 33}]"}
 38   | 34   | {"[c[7.66]{\"id\": 38},e[12.240][7.66,7.30]{\"id\": \"c:38->c:34\"},c[7.30]{\"id\": 34}]"}
 38   | 35   | {"[c[7.66]{\"id\": 38},e[12.241][7.66,7.39]{\"id\": \"c:38->c:35\"},c[7.39]{\"id\": 35}]"}
 38   | 36   | {"[c[7.66]{\"id\": 38},e[12.242][7.66,7.48]{\"id\": \"c:38->c:36\"},c[7.48]{\"id\": 36}]"}
 38   | 37   | {"[c[7.66]{\"id\": 38},e[12.243][7.66,7.57]{\"id\": \"c:38->c:37\"},c[7.57]{\"id\": 37}]"}
 38   | 38   | {"[c[7.66]{\"id\": 38},e[12.237][7.66,7.3]{\"id\": \"c:38->c:31\"},c[7.3]{\"id\": 31},e[12.187][7.3,7.66]{\"id\": \"c:31->c:38\"},c[7.66]{\"id\": 38}]","[c[7.66]{\"id\": 38},e[12.238][7.66,7.12]{\"id\": \"c:38->c:32\"},c[7.12]{\"id\": 32},e[12.195][7.12,7.66]{\"id\": \"c:32->c:38\"},c[7.66]{\"id\": 38}]","[c[7.66]{\"id\": 38},e[12.239][7.66,7.21]{\"id\": \"c:38->c:33\"},c[7.21]{\"id\": 33},e[12.203][7.21,7.66]{\"id\": \"c:33->c:38\"},c[7.66]{\"id\": 38}]","[c[7.66]{\"id\": 38},e[12.240][7.66,7.30]{\"id\": \"c:38->c:34\"},c[7.30]{\"id\": 34},e[12.211][7.30,7.66]{\"id\": \"c:34->c:38\"},c[7.66]{\"id\": 38}]","[c[7.66]{\"id\": 38},e[12.241][7.66,7.39]{\"id\": \"c:38->c:35\"},c[7.39]{\"id\": 35},e[12.219][7.39,7.66]{\"id\": \"c:35->c:38\"},c[7.66]{\"id\": 38}]","[c[7.66]{\"id\": 38},e[12.242][7.66,7.48]{\"id\": \"c:38->c:36\"},c[7.48]{\"id\": 36},e[12.227][7.48,7.66]{\"id\": \"c:36->c:38\"},c[7.66]{\"id\": 38}]","[c[7.66]{\"id\": 38},e[12.243][7.66,7.57]{\"id\": \"c:38->c:37\"},c[7.57]{\"id\": 37},e[12.235][7.57,7.66]{\"id\": \"c:37->c:38\"},c[7.66]{\"id\": 38}]","[c[7.66]{\"id\": 38},e[12.244][7.66,7.75]{\"id\": \"c:38->c:39\"},c[7.75]{\"id\": 39},e[12.252][7.75,7.66]{\"id\": \"c:39->c:38\"},c[7.66]{\"id\": 38}]"}
 38   | 39   | {"[c[7.66]{\"id\": 38},e[12.244][7.66,7.75]{\"id\": \"c:38->c:39\"},c[7.75]{\"id\": 39}]"}
 39   | 31   | {"[c[7.75]{\"id\": 39},e[12.245][7.75,7.3]{\"id\": \"c:39->c:31\"},c[7.3]{\"id\": 31}]"}
 39   | 32   | {"[c[7.75]{\"id\": 39},e[12.246][7.75,7.12]{\"id\": \"c:39->c:32\"},c[7.12]{\"id\": 32}]"}
 39   | 33   | {"[c[7.75]{\"id\": 39},e[12.247][7.75,7.21]{\"id\": \"c:39->c:33\"},c[7.21]{\"id\": 33}]"}
 39   | 34   | {"[c[7.75]{\"id\": 39},e[12.248][7.75,7.30]{\"id\": \"c:39->c:34\"},c[7.30]{\"id\": 34}]"}
 39   | 35   | {"[c[7.75]{\"id\": 39},e[12.249][7.75,7.39]{\"id\": \"c:39->c:35\"},c[7.39]{\"id\": 35}]"}
 39   | 36   | {"[c[7.75]{\"id\": 39},e[12.250][7.75,7.48]{\"id\": \"c:39->c:36\"},c[7.48]{\"id\": 36}]"}
 39   | 37   | {"[c[7.75]{\"id\": 39},e[12.251][7.75,7.57]{\"id\": \"c:39->c:37\"},c[7.57]{\"id\": 37}]"}
 39   | 38   | {"[c[7.75]{\"id\": 39},e[12.252][7.75,7.66]{\"id\": \"c:39->c:38\"},c[7.66]{\"id\": 38}]"}
 39   | 39   | {"[c[7.75]{\"id\": 39},e[12.245][7.75,7.3]{\"id\": \"c:39->c:31\"},c[7.3]{\"id\": 31},e[12.188][7.3,7.75]{\"id\": \"c:31->c:39\"},c[7.75]{\"id\": 39}]","[c[7.75]{\"id\": 39},e[12.246][7.75,7.12]{\"id\": \"c:39->c:32\"},c[7.12]{\"id\": 32},e[12.196][7.12,7.75]{\"id\": \"c:32->c:39\"},c[7.75]{\"id\": 39}]","[c[7.75]{\"id\": 39},e[12.247][7.75,7.21]{\"id\": \"c:39->c:33\"},c[7.21]{\"id\": 33},e[12.204][7.21,7.75]{\"id\": \"c:33->c:39\"},c[7.75]{\"id\": 39}]","[c[7.75]{\"id\": 39},e[12.248][7.75,7.30]{\"id\": \"c:39->c:34\"},c[7.30]{\"id\": 34},e[12.212][7.30,7.75]{\"id\": \"c:34->c:39\"},c[7.75]{\"id\": 39}]","[c[7.75]{\"id\": 39},e[12.249][7.75,7.39]{\"id\": \"c:39->c:35\"},c[7.39]{\"id\": 35},e[12.220][7.39,7.75]{\"id\": \"c:35->c:39\"},c[7.75]{\"id\": 39}]","[c[7.75]{\"id\": 39},e[12.250][7.75,7.48]{\"id\": \"c:39->c:36\"},c[7.48]{\"id\": 36},e[12.228][7.48,7.75]{\"id\": \"c:36->c:39\"},c[7.75]{\"id\": 39}]","[c[7.75]{\"id\": 39},e[12.251][7.75,7.57]{\"id\": \"c:39->c:37\"},c[7.57]{\"id\": 37},e[12.236][7.57,7.75]{\"id\": \"c:37->c:39\"},c[7.75]{\"id\": 39}]","[c[7.75]{\"id\": 39},e[12.252][7.75,7.66]{\"id\": \"c:39->c:38\"},c[7.66]{\"id\": 38},e[12.244][7.66,7.75]{\"id\": \"c:38->c:39\"},c[7.75]{\"id\": 39}]"}
(81 rows)

match (c1:c), (c2:c) where c1.id >= 31 and c1.id <= 39 and c2.id >= 41 and c2.id <= 49 return c1.id as c1id, c2.id as c2id, allshortestpaths((c1)-[:e*]->(c2)) order by c1id, c2id;
 c1id | c2id | ?column? 
------+------+----------
 31   | 41   | 
 31   | 42   | 
 31   | 43   | 
 31   | 44   | 
 31   | 45   | 
 31   | 46   | 
 31   | 47   | 
 31   | 48   | 
 31   | 49   | 
 32   | 41   | 
 32   | 42   | 
 32   | 43   | 
 32   | 44   | 
 32   | 45   | 
 32   | 46   | 
 32   | 47   | 
 32   | 48   | 
 32   | 49   | 
 33   | 41   | 
 33   | 42   | 
 33   | 43   | 
 33   | 44   | 
 33   | 45   | 
 33   | 46   | 
 33   | 47   | 
 33   | 48   | 
 33   | 49   | 
 34   | 41   | 
 34   | 42   | 
 34   | 43   | 
 34   | 44   | 
 34   | 45   | 
 34   | 46   | 
 34   | 47   | 
 34   | 48   | 
 34   | 49   | 
 35   | 41   | 
 35   | 42   | 
 35   | 43   | 
 35   | 44   | 
 35   | 45   | 
 35   | 46   | 
 35   | 47   | 
 35   | 48   | 
 35   | 49   | 
 36   | 41   | 
 36   | 42   | 
 36   | 43   | 
 36   | 44   | 
 36   | 45   | 
 36   | 46   | 
 36   | 47   | 
 36   | 48   | 
 36   | 49   | 
 37   | 41   | 
 37   | 42   | 
 37   | 43   | 
 37   | 44   | 
 37   | 45   | 
 37   | 46   | 
 37   | 47   | 
 37   | 48   | 
 37   | 49   | 
 38   | 41   | 
 38   | 42   | 
 38   | 43   | 
 38   | 44   | 
 38   | 45   | 
 38   | 46   | 
 38   | 47   | 
 38   | 48   | 
 38   | 49   | 
 39   | 41   | 
 39   | 42   | 
 39   | 43   | 
 39   | 44   | 
 39   | 45   | 
 39   | 46   | 
 39   | 47   | 
 39   | 48   | 
 39   | 49   | 
(81 rows)

match (c1:c), (c2:c) where c1.id >= 11 and c1.id <= 19 and c2.id >= 11 and c2.id <= 19 return c1.id as c1id, c2.id as c2id, allshortestpaths((c1)<-[:e*]-(c2)) order by c1id, c2id;
 c1id | c2id |                                         ?column?                                          
------+------+-------------------------------------------------------------------------------------------
 11   | 11   | {"[c[7.1]{\"id\": 11},e[12.19][7.1,7.1]{\"id\": \"c:11->c:11\"},c[7.1]{\"id\": 11}]"}
 11   | 12   | {"[c[7.1]{\"id\": 11},e[12.28][7.10,7.1]{\"id\": \"c:12->c:11\"},c[7.10]{\"id\": 12}]"}
 11   | 13   | {"[c[7.1]{\"id\": 11},e[12.37][7.19,7.1]{\"id\": \"c:13->c:11\"},c[7.19]{\"id\": 13}]"}
 11   | 14   | {"[c[7.1]{\"id\": 11},e[12.46][7.28,7.1]{\"id\": \"c:14->c:11\"},c[7.28]{\"id\": 14}]"}
 11   | 15   | {"[c[7.1]{\"id\": 11},e[12.55][7.37,7.1]{\"id\": \"c:15->c:11\"},c[7.37]{\"id\": 15}]"}
 11   | 16   | {"[c[7.1]{\"id\": 11},e[12.64][7.46,7.1]{\"id\": \"c:16->c:11\"},c[7.46]{\"id\": 16}]"}
 11   | 17   | {"[c[7.1]{\"id\": 11},e[12.73][7.55,7.1]{\"id\": \"c:17->c:11\"},c[7.55]{\"id\": 17}]"}
 11   | 18   | {"[c[7.1]{\"id\": 11},e[12.82][7.64,7.1]{\"id\": \"c:18->c:11\"},c[7.64]{\"id\": 18}]"}
 11   | 19   | {"[c[7.1]{\"id\": 11},e[12.91][7.73,7.1]{\"id\": \"c:19->c:11\"},c[7.73]{\"id\": 19}]"}
 12   | 11   | {"[c[7.10]{\"id\": 12},e[12.20][7.1,7.10]{\"id\": \"c:11->c:12\"},c[7.1]{\"id\": 11}]"}
 12   | 12   | {"[c[7.10]{\"id\": 12},e[12.29][7.10,7.10]{\"id\": \"c:12->c:12\"},c[7.10]{\"id\": 12}]"}
 12   | 13   | {"[c[7.10]{\"id\": 12},e[12.38][7.19,7.10]{\"id\": \"c:13->c:12\"},c[7.19]{\"id\": 13}]"}
 12   | 14   | {"[c[7.10]{\"id\": 12},e[12.47][7.28,7.10]{\"id\": \"c:14->c:12\"},c[7.28]{\"id\": 14}]"}
 12   | 15   | {"[c[7.10]{\"id\": 12},e[12.56][7.37,7.10]{\"id\": \"c:15->c:12\"},c[7.37]{\"id\": 15}]"}
 12   | 16   | {"[c[7.10]{\"id\": 12},e[12.65][7.46,7.10]{\"id\": \"c:16->c:12\"},c[7.46]{\"id\": 16}]"}
 12   | 17   | {"[c[7.10]{\"id\": 12},e[12.74][7.55,7.10]{\"id\": \"c:17->c:12\"},c[7.55]{\"id\": 17}]"}
 12   | 18   | {"[c[7.10]{\"id\": 12},e[12.83][7.64,7.10]{\"id\": \"c:18->c:12\"},c[7.64]{\"id\": 18}]"}
 12   | 19   | {"[c[7.10]{\"id\": 12},e[12.92][7.73,7.10]{\"id\": \"c:19->c:12\"},c[7.73]{\"id\": 19}]"}
 13   | 11   | {"[c[7.19]{\"id\": 13},e[12.21][7.1,7.19]{\"id\": \"c:11->c:13\"},c[7.1]{\"id\": 11}]"}
 13   | 12   | {"[c[7.19]{\"id\": 13},e[12.30][7.10,7.19]{\"id\": \"c:12->c:13\"},c[7.10]{\"id\": 12}]"}
 13   | 13   | {"[c[7.19]{\"id\": 13},e[12.39][7.19,7.19]{\"id\": \"c:13->c:13\"},c[7.19]{\"id\": 13}]"}
 13   | 14   | {"[c[7.19]{\"id\": 13},e[12.48][7.28,7.19]{\"id\": \"c:14->c:13\"},c[7.28]{\"id\": 14}]"}
 13   | 15   | {"[c[7.19]{\"id\": 13},e[12.57][7.37,7.19]{\"id\": \"c:15->c:13\"},c[7.37]{\"id\": 15}]"}
 13   | 16   | {"[c[7.19]{\"id\": 13},e[12.66][7.46,7.19]{\"id\": \"c:16->c:13\"},c[7.46]{\"id\": 16}]"}
 13   | 17   | {"[c[7.19]{\"id\": 13},e[12.75][7.55,7.19]{\"id\": \"c:17->c:13\"},c[7.55]{\"id\": 17}]"}
 13   | 18   | {"[c[7.19]{\"id\": 13},e[12.84][7.64,7.19]{\"id\": \"c:18->c:13\"},c[7.64]{\"id\": 18}]"}
 13   | 19   | {"[c[7.19]{\"id\": 13},e[12.93][7.73,7.19]{\"id\": \"c:19->c:13\"},c[7.73]{\"id\": 19}]"}
 14   | 11   | {"[c[7.28]{\"id\": 14},e[12.22][7.1,7.28]{\"id\": \"c:11->c:14\"},c[7.1]{\"id\": 11}]"}
 14   | 12   | {"[c[7.28]{\"id\": 14},e[12.31][7.10,7.28]{\"id\": \"c:12->c:14\"},c[7.10]{\"id\": 12}]"}
 14   | 13   | {"[c[7.28]{\"id\": 14},e[12.40][7.19,7.28]{\"id\": \"c:13->c:14\"},c[7.19]{\"id\": 13}]"}
 14   | 14   | {"[c[7.28]{\"id\": 14},e[12.49][7.28,7.28]{\"id\": \"c:14->c:14\"},c[7.28]{\"id\": 14}]"}
 14   | 15   | {"[c[7.28]{\"id\": 14},e[12.58][7.37,7.28]{\"id\": \"c:15->c:14\"},c[7.37]{\"id\": 15}]"}
 14   | 16   | {"[c[7.28]{\"id\": 14},e[12.67][7.46,7.28]{\"id\": \"c:16->c:14\"},c[7.46]{\"id\": 16}]"}
 14   | 17   | {"[c[7.28]{\"id\": 14},e[12.76][7.55,7.28]{\"id\": \"c:17->c:14\"},c[7.55]{\"id\": 17}]"}
 14   | 18   | {"[c[7.28]{\"id\": 14},e[12.85][7.64,7.28]{\"id\": \"c:18->c:14\"},c[7.64]{\"id\": 18}]"}
 14   | 19   | {"[c[7.28]{\"id\": 14},e[12.94][7.73,7.28]{\"id\": \"c:19->c:14\"},c[7.73]{\"id\": 19}]"}
 15   | 11   | {"[c[7.37]{\"id\": 15},e[12.23][7.1,7.37]{\"id\": \"c:11->c:15\"},c[7.1]{\"id\": 11}]"}
 15   | 12   | {"[c[7.37]{\"id\": 15},e[12.32][7.10,7.37]{\"id\": \"c:12->c:15\"},c[7.10]{\"id\": 12}]"}
 15   | 13   | {"[c[7.37]{\"id\": 15},e[12.41][7.19,7.37]{\"id\": \"c:13->c:15\"},c[7.19]{\"id\": 13}]"}
 15   | 14   | {"[c[7.37]{\"id\": 15},e[12.50][7.28,7.37]{\"id\": \"c:14->c:15\"},c[7.28]{\"id\": 14}]"}
 15   | 15   | {"[c[7.37]{\"id\": 15},e[12.59][7.37,7.37]{\"id\": \"c:15->c:15\"},c[7.37]{\"id\": 15}]"}
 15   | 16   | {"[c[7.37]{\"id\": 15},e[12.68][7.46,7.37]{\"id\": \"c:16->c:15\"},c[7.46]{\"id\": 16}]"}
 15   | 17   | {"[c[7.37]{\"id\": 15},e[12.77][7.55,7.37]{\"id\": \"c:17->c:15\"},c[7.55]{\"id\": 17}]"}
 15   | 18   | {"[c[7.37]{\"id\": 15},e[12.86][7.64,7.37]{\"id\": \"c:18->c:15\"},c[7.64]{\"id\": 18}]"}
 15   | 19   | {"[c[7.37]{\"id\": 15},e[12.95][7.73,7.37]{\"id\": \"c:19->c:15\"},c[7.73]{\"id\": 19}]"}
 16   | 11   | {"[c[7.46]{\"id\": 16},e[12.24][7.1,7.46]{\"id\": \"c:11->c:16\"},c[7.1]{\"id\": 11}]"}
 16   | 12   | {"[c[7.46]{\"id\": 16},e[12.33][7.10,7.46]{\"id\": \"c:12->c:16\"},c[7.10]{\"id\": 12}]"}
 16   | 13   | {"[c[7.46]{\"id\": 16},e[12.42][7.19,7.46]{\"id\": \"c:13->c:16\"},c[7.19]{\"id\": 13}]"}
 16   | 14   | {"[c[7.46]{\"id\": 16},e[12.51][7.28,7.46]{\"id\": \"c:14->c:16\"},c[7.28]{\"id\": 14}]"}
 16   | 15   | {"[c[7.46]{\"id\": 16},e[12.60][7.37,7.46]{\"id\": \"c:15->c:16\"},c[7.37]{\"id\": 15}]"}
 16   | 16   | {"[c[7.46]{\"id\": 16},e[12.69][7.46,7.46]{\"id\": \"c:16->c:16\"},c[7.46]{\"id\": 16}]"}
 16   | 17   | {"[c[7.46]{\"id\": 16},e[12.78][7.55,7.46]{\"id\": \"c:17->c:16\"},c[7.55]{\"id\": 17}]"}
 16   | 18   | {"[c[7.46]{\"id\": 16},e[12.87][7.64,7.46]{\"id\": \"c:18->c:16\"},c[7.64]{\"id\": 18}]"}
 16   | 19   | {"[c[7.46]{\"id\": 16},e[12.96][7.73,7.46]{\"id\": \"c:19->c:16\"},c[7.73]{\"id\": 19}]"}
 17   | 11   | {"[c[7.55]{\"id\": 17},e[12.25][7.1,7.55]{\"id\": \"c:11->c:17\"},c[7.1]{\"id\": 11}]"}
 17   | 12   | {"[c[7.55]{\"id\": 17},e[12.34][7.10,7.55]{\"id\": \"c:12->c:17\"},c[7.10]{\"id\": 12}]"}
 17   | 13   | {"[c[7.55]{\"id\": 17},e[12.43][7.19,7.55]{\"id\": \"c:13->c:17\"},c[7.19]{\"id\": 13}]"}
 17   | 14   | {"[c[7.55]{\"id\": 17},e[12.52][7.28,7.55]{\"id\": \"c:14->c:17\"},c[7.28]{\"id\": 14}]"}
 17   | 15   | {"[c[7.55]{\"id\": 17},e[12.61][7.37,7.55]{\"id\": \"c:15->c:17\"},c[7.37]{\"id\": 15}]"}
 17   | 16   | {"[c[7.55]{\"id\": 17},e[12.70][7.46,7.55]{\"id\": \"c:16->c:17\"},c[7.46]{\"id\": 16}]"}
 17   | 17   | {"[c[7.55]{\"id\": 17},e[12.79][7.55,7.55]{\"id\": \"c:17->c:17\"},c[7.55]{\"id\": 17}]"}
 17   | 18   | {"[c[7.55]{\"id\": 17},e[12.88][7.64,7.55]{\"id\": \"c:18->c:17\"},c[7.64]{\"id\": 18}]"}
 17   | 19   | {"[c[7.55]{\"id\": 17},e[12.97][7.73,7.55]{\"id\": \"c:19->c:17\"},c[7.73]{\"id\": 19}]"}
 18   | 11   | {"[c[7.64]{\"id\": 18},e[12.26][7.1,7.64]{\"id\": \"c:11->c:18\"},c[7.1]{\"id\": 11}]"}
 18   | 12   | {"[c[7.64]{\"id\": 18},e[12.35][7.10,7.64]{\"id\": \"c:12->c:18\"},c[7.10]{\"id\": 12}]"}
 18   | 13   | {"[c[7.64]{\"id\": 18},e[12.44][7.19,7.64]{\"id\": \"c:13->c:18\"},c[7.19]{\"id\": 13}]"}
 18   | 14   | {"[c[7.64]{\"id\": 18},e[12.53][7.28,7.64]{\"id\": \"c:14->c:18\"},c[7.28]{\"id\": 14}]"}
 18   | 15   | {"[c[7.64]{\"id\": 18},e[12.62][7.37,7.64]{\"id\": \"c:15->c:18\"},c[7.37]{\"id\": 15}]"}
 18   | 16   | {"[c[7.64]{\"id\": 18},e[12.71][7.46,7.64]{\"id\": \"c:16->c:18\"},c[7.46]{\"id\": 16}]"}
 18   | 17   | {"[c[7.64]{\"id\": 18},e[12.80][7.55,7.64]{\"id\": \"c:17->c:18\"},c[7.55]{\"id\": 17}]"}
 18   | 18   | {"[c[7.64]{\"id\": 18},e[12.89][7.64,7.64]{\"id\": \"c:18->c:18\"},c[7.64]{\"id\": 18}]"}
 18   | 19   | {"[c[7.64]{\"id\": 18},e[12.98][7.73,7.64]{\"id\": \"c:19->c:18\"},c[7.73]{\"id\": 19}]"}
 19   | 11   | {"[c[7.73]{\"id\": 19},e[12.27][7.1,7.73]{\"id\": \"c:11->c:19\"},c[7.1]{\"id\": 11}]"}
 19   | 12   | {"[c[7.73]{\"id\": 19},e[12.36][7.10,7.73]{\"id\": \"c:12->c:19\"},c[7.10]{\"id\": 12}]"}
 19   | 13   | {"[c[7.73]{\"id\": 19},e[12.45][7.19,7.73]{\"id\": \"c:13->c:19\"},c[7.19]{\"id\": 13}]"}
 19   | 14   | {"[c[7.73]{\"id\": 19},e[12.54][7.28,7.73]{\"id\": \"c:14->c:19\"},c[7.28]{\"id\": 14}]"}
 19   | 15   | {"[c[7.73]{\"id\": 19},e[12.63][7.37,7.73]{\"id\": \"c:15->c:19\"},c[7.37]{\"id\": 15}]"}
 19   | 16   | {"[c[7.73]{\"id\": 19},e[12.72][7.46,7.73]{\"id\": \"c:16->c:19\"},c[7.46]{\"id\": 16}]"}
 19   | 17   | {"[c[7.73]{\"id\": 19},e[12.81][7.55,7.73]{\"id\": \"c:17->c:19\"},c[7.55]{\"id\": 17}]"}
 19   | 18   | {"[c[7.73]{\"id\": 19},e[12.90][7.64,7.73]{\"id\": \"c:18->c:19\"},c[7.64]{\"id\": 18}]"}
 19   | 19   | {"[c[7.73]{\"id\": 19},e[12.99][7.73,7.73]{\"id\": \"c:19->c:19\"},c[7.73]{\"id\": 19}]"}
(81 rows)

match (c1:c), (c2:c) where c1.id >= 11 and c1.id <= 19 and c2.id >= 21 and c2.id <= 29 return c1.id as c1id, c2.id as c2id, allshortestpaths((c1)<-[:e*]-(c2)) order by c1id, c2id;
 c1id | c2id | ?column? 
------+------+----------
 11   | 21   | 
 11   | 22   | 
 11   | 23   | 
 11   | 24   | 
 11   | 25   | 
 11   | 26   | 
 11   | 27   | 
 11   | 28   | 
 11   | 29   | 
 12   | 21   | 
 12   | 22   | 
 12   | 23   | 
 12   | 24   | 
 12   | 25   | 
 12   | 26   | 
 12   | 27   | 
 12   | 28   | 
 12   | 29   | 
 13   | 21   | 
 13   | 22   | 
 13   | 23   | 
 13   | 24   | 
 13   | 25   | 
 13   | 26   | 
 13   | 27   | 
 13   | 28   | 
 13   | 29   | 
 14   | 21   | 
 14   | 22   | 
 14   | 23   | 
 14   | 24   | 
 14   | 25   | 
 14   | 26   | 
 14   | 27   | 
 14   | 28   | 
 14   | 29   | 
 15   | 21   | 
 15   | 22   | 
 15   | 23   | 
 15   | 24   | 
 15   | 25   | 
 15   | 26   | 
 15   | 27   | 
 15   | 28   | 
 15   | 29   | 
 16   | 21   | 
 16   | 22   | 
 16   | 23   | 
 16   | 24   | 
 16   | 25   | 
 16   | 26   | 
 16   | 27   | 
 16   | 28   | 
 16   | 29   | 
 17   | 21   | 
 17   | 22   | 
 17   | 23   | 
 17   | 24   | 
 17   | 25   | 
 17   | 26   | 
 17   | 27   | 
 17   | 28   | 
 17   | 29   | 
 18   | 21   | 
 18   | 22   | 
 18   | 23   | 
 18   | 24   | 
 18   | 25   | 
 18   | 26   | 
 18   | 27   | 
 18   | 28   | 
 18   | 29   | 
 19   | 21   | 
 19   | 22   | 
 19   | 23   | 
 19   | 24   | 
 19   | 25   | 
 19   | 26   | 
 19   | 27   | 
 19   | 28   | 
 19   | 29   | 
(81 rows)

match (c1:c), (c2:c) where c1.id >= 31 and c1.id <= 39 and c2.id >= 31 and c2.id <= 39 return c1.id as c1id, c2.id as c2id, allshortestpaths((c1)<-[:e*]-(c2)) order by c1id, c2id;
 c1id | c2id |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ?column

 31   | 31   | {"[c[7.3]{\"id\": 31},e[12.189][7.12,7.3]{\"id\": \"c:32->c:31\"},c[7.12]{\"id\": 32},e[12.181][7.3,7.12]{\"id\": \"c:31->c:32\"},c[7.3]{\"id\": 31}]","[c[7.3]{\"id\": 31},e[12.197][7.21,7.3]{\"id\": \"c:33->c:31\"},c[7.21]{\"id\": 33},e[12.182][7.3,7.21]{\"id\": \"c:31->c:33\"},c[7.3]{\"id\": 31}]","[c[7.3]{\"id\": 31},e[12.205][7.30,7.3]{\"id\": \"c:34->c:31\"},c[7.30]{\"id\": 34},e[12.183][7.3,7.30]{\"id\": \"c:31->c:34\"},c[7.3]{\"id\": 31}]","[c[7.3]{\"id\": 31},e[12.213][7.39,7.3]{\"id\": \"c:35->c:31\"},c[7.39]{\"id\": 35},e[12.184][7.3,7.39]{\"id\": \"c:31->c:35\"},c[7.3]{\"id\": 31}]","[c[7.3]{\"id\": 31},e[12.221][7.48,7.3]{\"id\": \"c:36->c:31\"},c[7.48]{\"id\": 36},e[12.185][7.3,7.48]{\"id\": \"c:31->c:36\"},c[7.3]{\"id\": 31}]","[c[7.3]{\"id\": 31},e[12.229][7.57,7.3]{\"id\": \"c:37->c:31\"},c[7.57]{\"id\": 37},e[12.186][7.3,7.57]{\"id\": \"c:31->c:37\"},c[7.3]{\"id\": 31}]","[c[7.3]{\"id\": 31},e[12.237][7.66,7.3]{\"id\": \"c:38->c:31\"},c[7.66]{\"id\": 38},e[12.187][7.3,7.66]{\"id\": \"c:31->c:38\"},c[7.3]{\"id\": 31}]","[c[7.3]{\"id\": 31},e[12.245][7.75,7.3]{\"id\": \"c:39->c:31\"},c[7.75]{\"id\": 39},e[12.188][7.3,7.75]{\"id\": \"c:31->c:39\"},c[7.3]{\"id\": 31}]"}
 31   | 32   | {"[c[7.3]{\"id\": 31},e[12.189][7.12,7.3]{\"id\": \"c:32->c:31\"},c[7.12]{\"id\": 32}]"}
 31   | 33   | {"[c[7.3]{\"id\": 31},e[12.197][7.21,7.3]{\"id\": \"c:33->c:31\"},c[7.21]{\"id\": 33}]"}
 31   | 34   | {"[c[7.3]{\"id\": 31},e[12.205][7.30,7.3]{\"id\": \"c:34->c:31\"},c[7.30]{\"id\": 34}]"}
 31   | 35   | {"[c[7.3]{\"id\": 31},e[12.213][7.39,7.3]{\"id\": \"c:35->c:31\"},c[7.39]{\"id\": 35}]"}
 31   | 36   | {"[c[7.3]{\"id\": 31},e[12.221][7.48,7.3]{\"id\": \"c:36->c:31\"},c[7.48]{\"id\": 36}]"}
 31   | 37   | {"[c[7.3]{\"id\": 31},e[12.229][7.57,7.3]{\"id\": \"c:37->c:31\"},c[7.57]{\"id\": 37}]"}
 31   | 38   | {"[c[7.3]{\"id\": 31},e[12.237][7.66,7.3]{\"id\": \"c:38->c:31\"},c[7.66]{\"id\": 38}]"}
 31   | 39   | {"[c[7.3]{\"id\": 31},e[12.245][7.75,7.3]{\"id\": \"c:39->c:31\"},c[7.75]{\"id\": 39}]"}
 32   | 31   | {"[c[7.12]{\"id\": 32},e[12.181][7.3,7.12]{\"id\": \"c:31->c:32\"},c[7.3]{\"id\": 31}]"}
 32   | 32   | {"[c[7.12]{\"id\": 32},e[12.181][7.3,7.12]{\"id\": \"c:31->c:32\"},c[7.3]{\"id\": 31},e[12.189][7.12,7.3]{\"id\": \"c:32->c:31\"},c[7.12]{\"id\": 32}]","[c[7.12]{\"id\": 32},e[12.198][7.21,7.12]{\"id\": \"c:33->c:32\"},c[7.21]{\"id\": 33},e[12.190][7.12,7.21]{\"id\": \"c:32->c:33\"},c[7.12]{\"id\": 32}]","[c[7.12]{\"id\": 32},e[12.206][7.30,7.12]{\"id\": \"c:34->c:32\"},c[7.30]{\"id\": 34},e[12.191][7.12,7.30]{\"id\": \"c:32->c:34\"},c[7.12]{\"id\": 32}]","[c[7.12]{\"id\": 32},e[12.214][7.39,7.12]{\"id\": \"c:35->c:32\"},c[7.39]{\"id\": 35},e[12.192][7.12,7.39]{\"id\": \"c:32->c:35\"},c[7.12]{\"id\": 32}]","[c[7.12]{\"id\": 32},e[12.222][7.48,7.12]{\"id\": \"c:36->c:32\"},c[7.48]{\"id\": 36},e[12.193][7.12,7.48]{\"id\": \"c:32->c:36\"},c[7.12]{\"id\": 32}]","[c[7.12]{\"id\": 32},e[12.230][7.57,7.12]{\"id\": \"c:37->c:32\"},c[7.57]{\"id\": 37},e[12.194][7.12,7.57]{\"id\": \"c:32->c:37\"},c[7.12]{\"id\": 32}]","[c[7.12]{\"id\": 32},e[12.238][7.66,7.12]{\"id\": \"c:38->c:32\"},c[7.66]{\"id\": 38},e[12.195][7.12,7.66]{\"id\": \"c:32->c:38\"},c[7.12]{\"id\": 32}]","[c[7.12]{\"id\": 32},e[12.246][7.75,7.12]{\"id\": \"c:39->c:32\"},c[7.75]{\"id\": 39},e[12.196][7.12,7.75]{\"id\": \"c:32->c:39\"},c[7.12]{\"id\": 32}]"}
 32   | 33   | {"[c[7.12]{\"id\": 32},e[12.198][7.21,7.12]{\"id\": \"c:33->c:32\"},c[7.21]{\"id\": 33}]"}
 32   | 34   | {"[c[7.12]{\"id\": 32},e[12.206][7.30,7.12]{\"id\": \"c:34->c:32\"},c[7.30]{\"id\": 34}]"}
 32   | 35   | {"[c[7.12]{\"id\": 32},e[12.214][7.39,7.12]{\"id\": \"c:35->c:32\"},c[7.39]{\"id\": 35}]"}
 32   | 36   | {"[c[7.12]{\"id\": 32},e[12.222][7.48,7.12]{\"id\": \"c:36->c:32\"},c[7.48]{\"id\": 36}]"}
 32   | 37   | {"[c[7.12]{\"id\": 32},e[12.230][7.57,7.12]{\"id\": \"c:37->c:32\"},c[7.57]{\"id\": 37}]"}
 32   | 38   | {"[c[7.12]{\"id\": 32},e[12.238][7.66,7.12]{\"id\": \"c:38->c:32\"},c[7.66]{\"id\": 38}]"}
 32   | 39   | {"[c[7.12]{\"id\": 32},e[12.246][7.75,7.12]{\"id\": \"c:39->c:32\"},c[7.75]{\"id\": 39}]"}
 33   | 31   | {"[c[7.21]{\"id\": 33},e[12.182][7.3,7.21]{\"id\": \"c:31->c:33\"},c[7.3]{\"id\": 31}]"}
 33   | 32   | {"[c[7.21]{\"id\": 33},e[12.190][7.12,7.21]{\"id\": \"c:32->c:33\"},c[7.12]{\"id\": 32}]"}
 33   | 33   | {"[c[7.21]{\"id\": 33},e[12.182][7.3,7.21]{\"id\": \"c:31->c:33\"},c[7.3]{\"id\": 31},e[12.197][7.21,7.3]{\"id\": \"c:33->c:31\"},c[7.21]{\"id\": 33}]","[c[7.21]{\"id\": 33},e[12.190][7.12,7.21]{\"id\": \"c:32->c:33\"},c[7.12]{\"id\": 32},e[12.198][7.21,7.12]{\"id\": \"c:33->c:32\"},c[7.21]{\"id\": 33}]","[c[7.21]{\"id\": 33},e[12.207][7.30,7.21]{\"id\": \"c:34->c:33\"},c[7.30]{\"id\": 34},e[12.199][7.21,7.30]{\"id\": \"c:33->c:34\"},c[7.21]{\"id\": 33}]","[c[7.21]{\"id\": 33},e[12.215][7.39,7.21]{\"id\": \"c:35->c:33\"},c[7.39]{\"id\": 35},e[12.200][7.21,7.39]{\"id\": \"c:33->c:35\"},c[7.21]{\"id\": 33}]","[c[7.21]{\"id\": 33},e[12.223][7.48,7.21]{\"id\": \"c:36->c:33\"},c[7.48]{\"id\": 36},e[12.201][7.21,7.48]{\"id\": \"c:33->c:36\"},c[7.21]{\"id\": 33}]","[c[7.21]{\"id\": 33},e[12.231][7.57,7.21]{\"id\": \"c:37->c:33\"},c[7.57]{\"id\": 37},e[12.202][7.21,7.57]{\"id\": \"c:33->c:37\"},c[7.21]{\"id\": 33}]","[c[7.21]{\"id\": 33},e[12.239][7.66,7.21]{\"id\": \"c:38->c:33\"},c[7.66]{\"id\": 38},e[12.203][7.21,7.66]{\"id\": \"c:33->c:38\"},c[7.21]{\"id\": 33}]","[c[7.21]{\"id\": 33},e[12.247][7.75,7.21]{\"id\": \"c:39->c:33\"},c[7.75]{\"id\": 39},e[12.204][7.21,7.75]{\"id\": \"c:33->c:39\"},c[7.21]{\"id\": 33}]"}
 33   | 34   | {"[c[7.21]{\"id\": 33},e[12.207][7.30,7.21]{\"id\": \"c:34->c:33\"},c[7.30]{\"id\": 34}]"}
 33   | 35   | {"[c[7.21]{\"id\": 33},e[12.215][7.39,7.21]{\"id\": \"c:35->c:33\"},c[7.39]{\"id\": 35}]"}
 33   | 36   | {"[c[7.21]{\"id\": 33},e[12.223][7.48,7.21]{\"id\": \"c:36->c:33\"},c[7.48]{\"id\": 36}]"}
 33   | 37   | {"[c[7.21]{\"id\": 33},e[12.231][7.57,7.21]{\"id\": \"c:37->c:33\"},c[7.57]{\"id\": 37}]"}
 33   | 38   | {"[c[7.21]{\"id\": 33},e[12.239][7.66,7.21]{\"id\": \"c:38->c:33\"},c[7.66]{\"id\": 38}]"}
 33   | 39   | {"[c[7.21]{\"id\": 33},e[12.247][7.75,7.21]{\"id\": \"c:39->c:33\"},c[7.75]{\"id\": 39}]"}
 34   | 31   | {"[c[7.30]{\"id\": 34},e[12.183][7.3,7.30]{\"id\": \"c:31->c:34\"},c[7.3]{\"id\": 31}]"}
 34   | 32   | {"[c[7.30]{\"id\": 34},e[12.191][7.12,7.30]{\"id\": \"c:32->c:34\"},c[7.12]{\"id\": 32}]"}
 34   | 33   | {"[c[7.30]{\"id\": 34},e[12.199][7.21,7.30]{\"id\": \"c:33->c:34\"},c[7.21]{\"id\": 33}]"}
 34   | 34   | {"[c[7.30]{\"id\": 34},e[12.183][7.3,7.30]{\"id\": \"c:31->c:34\"},c[7.3]{\"id\": 31},e[12.205][7.30,7.3]{\"id\": \"c:34->c:31\"},c[7.30]{\"id\": 34}]","[c[7.30]{\"id\": 34},e[12.191][7.12,7.30]{\"id\": \"c:32->c:34\"},c[7.12]{\"id\": 32},e[12.206][7.30,7.12]{\"id\": \"c:34->c:32\"},c[7.30]{\"id\": 34}]","[c[7.30]{\"id\": 34},e[12.199][7.21,7.30]{\"id\": \"c:33->c:34\"},c[7.21]{\"id\": 33},e[12.207][7.30,7.21]{\"id\": \"c:34->c:33\"},c[7.30]{\"id\": 34}]","[c[7.30]{\"id\": 34},e[12.216][7.39,7.30]{\"id\": \"c:35->c:34\"},c[7.39]{\"id\": 35},e[12.208][7.30,7.39]{\"id\": \"c:34->c:35\"},c[7.30]{\"id\": 34}]","[c[7.30]{\"id\": 34},e[12.224][7.48,7.30]{\"id\": \"c:36->c:34\"},c[7.48]{\"id\": 36},e[12.209][7.30,7.48]{\"id\": \"c:34->c:36\"},c[7.30]{\"id\": 34}]","[c[7.30]{\"id\": 34},e[12.232][7.57,7.30]{\"id\": \"c:37->c:34\"},c[7.57]{\"id\": 37},e[12.210][7.30,7.57]{\"id\": \"c:34->c:37\"},c[7.30]{\"id\": 34}]","[c[7.30]{\"id\": 34},e[12.240][7.66,7.30]{\"id\": \"c:38->c:34\"},c[7.66]{\"id\": 38},e[12.211][7.30,7.66]{\"id\": \"c:34->c:38\"},c[7.30]{\"id\": 34}]","[c[7.30]{\"id\": 34},e[12.248][7.75,7.30]{\"id\": \"c:39->c:34\"},c[7.75]{\"id\": 39},e[12.212][7.30,7.75]{\"id\": \"c:34->c:39\"},c[7.30]{\"id\": 34}]"}
 34   | 35   | {"[c[7.30]{\"id\": 34},e[12.216][7.39,7.30]{\"id\": \"c:35->c:34\"},c[7.39]{\"id\": 35}]"}
 34   | 36   | {"[c[7.30]{\"id\": 34},e[12.224][7.48,7.30]{\"id\": \"c:36->c:34\"},c[7.48]{\"id\": 36}]"}
 34   | 37   | {"[c[7.30]{\"id\": 34},e[12.232][7.57,7.30]{\"id\": \"c:37->c:34\"},c[7.57]{\"id\": 37}]"}
 34   | 38   | {"[c[7.30]{\"id\": 34},e[12.240][7.66,7.30]{\"id\": \"c:38->c:34\"},c[7.66]{\"id\": 38}]"}
 34   | 39   | {"[c[7.30]{\"id\": 34},e[12.248][7.75,7.30]{\"id\": \"c:39->c:34\"},c[7.75]{\"id\": 39}]"}
 35   | 31   | {"[c[7.39]{\"id\": 35},e[12.184][7.3,7.39]{\"id\": \"c:31->c:35\"},c[7.3]{\"id\": 31}]"}
 35   | 32   | {"[c[7.39]{\"id\": 35},e[12.192][7.12,7.39]{\"id\": \"c:32->c:35\"},c[7.12]{\"id\": 32}]"}
 35   | 33   | {"[c[7.39]{\"id\": 35},e[12.200][7.21,7.39]{\"id\": \"c:33->c:35\"},c[7.21]{\"id\": 33}]"}
 35   | 34   | {"[c[7.39]{\"id\": 35},e[12.208][7.30,7.39]{\"id\": \"c:34->c:35\"},c[7.30]{\"id\": 34}]"}
 35   | 35   | {"[c[7.39]{\"id\": 35},e[12.184][7.3,7.39]{\"id\": \"c:31->c:35\"},c[7.3]{\"id\": 31},e[12.213][7.39,7.3]{\"id\": \"c:35->c:31\"},c[7.39]{\"id\": 35}]","[c[7.39]{\"id\": 35},e[12.192][7.12,7.39]{\"id\": \"c:32->c:35\"},c[7.12]{\"id\": 32},e[12.214][7.39,7.12]{\"id\": \"c:35->c:32\"},c[7.39]{\"id\": 35}]","[c[7.39]{\"id\": 35},e[12.200][7.21,7.39]{\"id\": \"c:33->c:35\"},c[7.21]{\"id\": 33},e[12.215][7.39,7.21]{\"id\": \"c:35->c:33\"},c[7.39]{\"id\": 35}]","[c[7.39]{\"id\": 35},e[12.208][7.30,7.39]{\"id\": \"c:34->c:35\"},c[7.30]{\"id\": 34},e[12.216][7.39,7.30]{\"id\": \"c:35->c:34\"},c[7.39]{\"id\": 35}]","[c[7.39]{\"id\": 35},e[12.225][7.48,7.39]{\"id\": \"c:36->c:35\"},c[7.48]{\"id\": 36},e[12.217][7.39,7.48]{\"id\": \"c:35->c:36\"},c[7.39]{\"id\": 35}]","[c[7.39]{\"id\": 35},e[12.233][7.57,7.39]{\"id\": \"c:37->c:35\"},c[7.57]{\"id\": 37},e[12.218][7.39,7.57]{\"id\": \"c:35->c:37\"},c[7.39]{\"id\": 35}]","[c[7.39]{\"id\": 35},e[12.241][7.66,7.39]{\"id\": \"c:38->c:35\"},c[7.66]{\"id\": 38},e[12.219][7.39,7.66]{\"id\": \"c:35->c:38\"},c[7.39]{\"id\": 35}]","[c[7.39]{\"id\": 35},e[12.249][7.75,7.39]{\"id\": \"c:39->c:35\"},c[7.75]{\"id\": 39},e[12.220][7.39,7.75]{\"id\": \"c:35->c:39\"},c[7.39]{\"id\": 35}]"}
 35   | 36   | {"[c[7.39]{\"id\": 35},e[12.225][7.48,7.39]{\"id\": \"c:36->c:35\"},c[7.48]{\"id\": 36}]"}
 35   | 37   | {"[c[7.39]{\"id\": 35},e[12.233][7.57,7.39]{\"id\": \"c:37->c:35\"},c[7.57]{\"id\": 37}]"}
 35   | 38   | {"[c[7.39]{\"id\": 35},e[12.241][7.66,7.39]{\"id\": \"c:38->c:35\"},c[7.66]{\"id\": 38}]"}
 35   | 39   | {"[c[7.39]{\"id\": 35},e[12.249][7.75,7.39]{\"id\": \"c:39->c:35\"},c[7.75]{\"id\": 39}]"}
 36   | 31   | {"[c[7.48]{\"id\": 36},e[12.185][7.3,7.48]{\"id\": \"c:31->c:36\"},c[7.3]{\"id\": 31}]"}
 36   | 32   | {"[c[7.48]{\"id\": 36},e[12.193][7.12,7.48]{\"id\": \"c:32->c:36\"},c[7.12]{\"id\": 32}]"}
 36   | 33   | {"[c[7.48]{\"id\": 36},e[12.201][7.21,7.48]{\"id\": \"c:33->c:36\"},c[7.21]{\"id\": 33}]"}
 36   | 34   | {"[c[7.48]{\"id\": 36},e[12.209][7.30,7.48]{\"id\": \"c:34->c:36\"},c[7.30]{\"id\": 34}]"}
 36   | 35   | {"[c[7.48]{\"id\": 36},e[12.217][7.39,7.48]{\"id\": \"c:35->c:36\"},c[7.39]{\"id\": 35}]"}
 36   | 36   | {"[c[7.48]{\"id\": 36},e[12.185][7.3,7.48]{\"id\": \"c:31->c:36\"},c[7.3]{\"id\": 31},e[12.221][7.48,7.3]{\"id\": \"c:36->c:31\"},c[7.48]{\"id\": 36}]","[c[7.48]{\"id\": 36},e[12.193][7.12,7.48]{\"id\": \"c:32->c:36\"},c[7.12]{\"id\": 32},e[12.222][7.48,7.12]{\"id\": \"c:36->c:32\"},c[7.48]{\"id\": 36}]","[c[7.48]{\"id\": 36},e[12.201][7.21,7.48]{\"id\": \"c:33->c:36\"},c[7.21]{\"id\": 33},e[12.223][7.48,7.21]{\"id\": \"c:36->c:33\"},c[7.48]{\"id\": 36}]","[c[7.48]{\"id\": 36},e[12.209][7.30,7.48]{\"id\": \"c:34->c:36\"},c[7.30]{\"id\": 34},e[12.224][7.48,7.30]{\"id\": \"c:36->c:34\"},c[7.48]{\"id\": 36}]","[c[7.48]{\"id\": 36},e[12.217][7.39,7.48]{\"id\": \"c:35->c:36\"},c[7.39]{\"id\": 35},e[12.225][7.48,7.39]{\"id\": \"c:36->c:35\"},c[7.48]{\"id\": 36}]","[c[7.48]{\"id\": 36},e[12.234][7.57,7.48]{\"id\": \"c:37->c:36\"},c[7.57]{\"id\": 37},e[12.226][7.48,7.57]{\"id\": \"c:36->c:37\"},c[7.48]{\"id\": 36}]","[c[7.48]{\"id\": 36},e[12.242][7.66,7.48]{\"id\": \"c:38->c:36\"},c[7.66]{\"id\": 38},e[12.227][7.48,7.66]{\"id\": \"c:36->c:38\"},c[7.48]{\"id\": 36}]","[c[7.48]{\"id\": 36},e[12.250][7.75,7.48]{\"id\": \"c:39->c:36\"},c[7.75]{\"id\": 39},e[12.228][7.48,7.75]{\"id\": \"c:36->c:39\"},c[7.48]{\"id\": 36}]"}
 36   | 37   | {"[c[7.48]{\"id\": 36},e[12.234][7.57,7.48]{\"id\": \"c:37->c:36\"},c[7.57]{\"id\": 37}]"}
 36   | 38   | {"[c[7.48]{\"id\": 36},e[12.242][7.66,7.48]{\"id\": \"c:38->c:36\"},c[7.66]{\"id\": 38}]"}
 36   | 39   | {"[c[7.48]{\"id\": 36},e[12.250][7.75,7.48]{\"id\": \"c:39->c:36\"},c[7.75]{\"id\": 39}]"}
 37   | 31   | {"[c[7.57]{\"id\": 37},e[12.186][7.3,7.57]{\"id\": \"c:31->c:37\"},c[7.3]{\"id\": 31}]"}
 37   | 32   | {"[c[7.57]{\"id\": 37},e[12.194][7.12,7.57]{\"id\": \"c:32->c:37\"},c[7.12]{\"id\": 32}]"}
 37   | 33   | {"[c[7.57]{\"id\": 37},e[12.202][7.21,7.57]{\"id\": \"c:33->c:37\"},c[7.21]{\"id\": 33}]"}
 37   | 34   | {"[c[7.57]{\"id\": 37},e[12.210][7.30,7.57]{\"id\": \"c:34->c:37\"},c[7.30]{\"id\": 34}]"}
 37   | 35   | {"[c[7.57]{\"id\": 37},e[12.218][7.39,7.57]{\"id\": \"c:35->c:37\"},c[7.39]{\"id\": 35}]"}
 37   | 36   | {"[c[7.57]{\"id\": 37},e[12.226][7.48,7.57]{\"id\": \"c:36->c:37\"},c[7.48]{\"id\": 36}]"}
 37   | 37   | {"[c[7.57]{\"id\": 37},e[12.186][7.3,7.57]{\"id\": \"c:31->c:37\"},c[7.3]{\"id\": 31},e[12.229][7.57,7.3]{\"id\": \"c:37->c:31\"},c[7.57]{\"id\": 37}]","[c[7.57]{\"id\": 37},e[12.194][7.12,7.57]{\"id\": \"c:32->c:37\"},c[7.12]{\"id\": 32},e[12.230][7.57,7.12]{\"id\": \"c:37->c:32\"},c[7.57]{\"id\": 37}]","[c[7.57]{\"id\": 37},e[12.202][7.21,7.57]{\"id\": \"c:33->c:37\"},c[7.21]{\"id\": 33},e[12.231][7.57,7.21]{\"id\": \"c:37->c:33\"},c[7.57]{\"id\": 37}]","[c[7.57]{\"id\": 37},e[12.210][7.30,7.57]{\"id\": \"c:34->c:37\"},c[7.30]{\"id\": 34},e[12.232][7.57,7.30]{\"id\": \"c:37->c:34\"},c[7.57]{\"id\": 37}]","[c[7.57]{\"id\": 37},e[12.218][7.39,7.57]{\"id\": \"c:35->c:37\"},c[7.39]{\"id\": 35},e[12.233][7.57,7.39]{\"id\": \"c:37->c:35\"},c[7.57]{\"id\": 37}]","[c[7.57]{\"id\": 37},e[12.226][7.48,7.57]{\"id\": \"c:36->c:37\"},c[7.48]{\"id\": 36},e[12.234][7.57,7.48]{\"id\": \"c:37->c:36\"},c[7.57]{\"id\": 37}]","[c[7.57]{\"id\": 37},e[12.243][7.66,7.57]{\"id\": \"c:38->c:37\"},c[7.66]{\"id\": 38},e[12.235][7.57,7.66]{\"id\": \"c:37->c:38\"},c[7.57]{\"id\": 37}]","[c[7.57]{\"id\": 37},e[12.251][7.75,7.57]{\"id\": \"c:39->c:37\"},c[7.75]{\"id\": 39},e[12.236][7.57,7.75]{\"id\": \"c:37->c:39\"},c[7.57]{\"id\": 37}]"}
 37   | 38   | {"[c[7.57]{\"id\": 37},e[12.243][7.66,7.57]{\"id\": \"c:38->c:37\"},c[7.66]{\"id\": 38}]"}
 37   | 39   | {"[c[7.57]{\"id\": 37},e[12.251][7.75,7.57]{\"id\": \"c:39->c:37\"},c[7.75]{\"id\": 39}]"}
 38   | 31   | {"[c[7.66]{\"id\": 38},e[12.187][7.3,7.66]{\"id\": \"c:31->c:38\"},c[7.3]{\"id\": 31}]"}
 38   | 32   | {"[c[7.66]{\"id\": 38},e[12.195][7.12,7.66]{\"id\": \"c:32->c:38\"},c[7.12]{\"id\": 32}]"}
 38   | 33   | {"[c[7.66]{\"id\": 38},e[12.203][7.21,7.66]{\"id\": \"c:33->c:38\"},c[7.21]{\"id\": 33}]"}
 38   | 34   | {"[c[7.66]{\"id\": 38},e[12.211][7.30,7.66]{\"id\": \"c:34->c:38\"},c[7.30]{\"id\": 34}]"}
 38   | 35   | {"[c[7.66]{\"id\": 38},e[12.219][7.39,7.66]{\"id\": \"c:35->c:38\"},c[7.39]{\"id\": 35}]"}
 38   | 36   | {"[c[7.66]{\"id\": 38},e[12.227][7.48,7.66]{\"id\": \"c:36->c:38\"},c[7.48]{\"id\": 36}]"}
 38   | 37   | {"[c[7.66]{\"id\": 38},e[12.235][7.57,7.66]{\"id\": \"c:37->c:38\"},c[7.57]{\"id\": 37}]"}
 38   | 38   | {"[c[7.66]{\"id\": 38},e[12.187][7.3,7.66]{\"id\": \"c:31->c:38\"},c[7.3]{\"id\": 31},e[12.237][7.66,7.3]{\"id\": \"c:38->c:31\"},c[7.66]{\"id\": 38}]","[c[7.66]{\"id\": 38},e[12.195][7.12,7.66]{\"id\": \"c:32->c:38\"},c[7.12]{\"id\": 32},e[12.238][7.66,7.12]{\"id\": \"c:38->c:32\"},c[7.66]{\"id\": 38}]","[c[7.66]{\"id\": 38},e[12.203][7.21,7.66]{\"id\": \"c:33->c:38\"},c[7.21]{\"id\": 33},e[12.239][7.66,7.21]{\"id\": \"c:38->c:33\"},c[7.66]{\"id\": 38}]","[c[7.66]{\"id\": 38},e[12.211][7.30,7.66]{\"id\": \"c:34->c:38\"},c[7.30]{\"id\": 34},e[12.240][7.66,7.30]{\"id\": \"c:38->c:34\"},c[7.66]{\"id\": 38}]","[c[7.66]{\"id\": 38},e[12.219][7.39,7.66]{\"id\": \"c:35->c:38\"},c[7.39]{\"id\": 35},e[12.241][7.66,7.39]{\"id\": \"c:38->c:35\"},c[7.66]{\"id\": 38}]","[c[7.66]{\"id\": 38},e[12.227][7.48,7.66]{\"id\": \"c:36->c:38\"},c[7.48]{\"id\": 36},e[12.242][7.66,7.48]{\"id\": \"c:38->c:36\"},c[7.66]{\"id\": 38}]","[c[7.66]{\"id\": 38},e[12.235][7.57,7.66]{\"id\": \"c:37->c:38\"},c[7.57]{\"id\": 37},e[12.243][7.66,7.57]{\"id\": \"c:38->c:37\"},c[7.66]{\"id\": 38}]","[c[7.66]{\"id\": 38},e[12.252][7.75,7.66]{\"id\": \"c:39->c:38\"},c[7.75]{\"id\": 39},e[12.244][7.66,7.75]{\"id\": \"c:38->c:39\"},c[7.66]{\"id\": 38}]"}
 38   | 39   | {"[c[7.66]{\"id\": 38},e[12.252][7.75,7.66]{\"id\": \"c:39->c:38\"},c[7.75]{\"id\": 39}]"}
 39   | 31   | {"[c[7.75]{\"id\": 39},e[12.188][7.3,7.75]{\"id\": \"c:31->c:39\"},c[7.3]{\"id\": 31}]"}
 39   | 32   | {"[c[7.75]{\"id\": 39},e[12.196][7.12,7.75]{\"id\": \"c:32->c:39\"},c[7.12]{\"id\": 32}]"}
 39   | 33   | {"[c[7.75]{\"id\": 39},e[12.204][7.21,7.75]{\"id\": \"c:33->c:39\"},c[7.21]{\"id\": 33}]"}
 39   | 34   | {"[c[7.75]{\"id\": 39},e[12.212][7.30,7.75]{\"id\": \"c:34->c:39\"},c[7.30]{\"id\": 34}]"}
 39   | 35   | {"[c[7.75]{\"id\": 39},e[12.220][7.39,7.75]{\"id\": \"c:35->c:39\"},c[7.39]{\"id\": 35}]"}
 39   | 36   | {"[c[7.75]{\"id\": 39},e[12.228][7.48,7.75]{\"id\": \"c:36->c:39\"},c[7.48]{\"id\": 36}]"}
 39   | 37   | {"[c[7.75]{\"id\": 39},e[12.236][7.57,7.75]{\"id\": \"c:37->c:39\"},c[7.57]{\"id\": 37}]"}
 39   | 38   | {"[c[7.75]{\"id\": 39},e[12.244][7.66,7.75]{\"id\": \"c:38->c:39\"},c[7.66]{\"id\": 38}]"}
 39   | 39   | {"[c[7.75]{\"id\": 39},e[12.188][7.3,7.75]{\"id\": \"c:31->c:39\"},c[7.3]{\"id\": 31},e[12.245][7.75,7.3]{\"id\": \"c:39->c:31\"},c[7.75]{\"id\": 39}]","[c[7.75]{\"id\": 39},e[12.196][7.12,7.75]{\"id\": \"c:32->c:39\"},c[7.12]{\"id\": 32},e[12.246][7.75,7.12]{\"id\": \"c:39->c:32\"},c[7.75]{\"id\": 39}]","[c[7.75]{\"id\": 39},e[12.204][7.21,7.75]{\"id\": \"c:33->c:39\"},c[7.21]{\"id\": 33},e[12.247][7.75,7.21]{\"id\": \"c:39->c:33\"},c[7.75]{\"id\": 39}]","[c[7.75]{\"id\": 39},e[12.212][7.30,7.75]{\"id\": \"c:34->c:39\"},c[7.30]{\"id\": 34},e[12.248][7.75,7.30]{\"id\": \"c:39->c:34\"},c[7.75]{\"id\": 39}]","[c[7.75]{\"id\": 39},e[12.220][7.39,7.75]{\"id\": \"c:35->c:39\"},c[7.39]{\"id\": 35},e[12.249][7.75,7.39]{\"id\": \"c:39->c:35\"},c[7.75]{\"id\": 39}]","[c[7.75]{\"id\": 39},e[12.228][7.48,7.75]{\"id\": \"c:36->c:39\"},c[7.48]{\"id\": 36},e[12.250][7.75,7.48]{\"id\": \"c:39->c:36\"},c[7.75]{\"id\": 39}]","[c[7.75]{\"id\": 39},e[12.236][7.57,7.75]{\"id\": \"c:37->c:39\"},c[7.57]{\"id\": 37},e[12.251][7.75,7.57]{\"id\": \"c:39->c:37\"},c[7.75]{\"id\": 39}]","[c[7.75]{\"id\": 39},e[12.244][7.66,7.75]{\"id\": \"c:38->c:39\"},c[7.66]{\"id\": 38},e[12.252][7.75,7.66]{\"id\": \"c:39->c:38\"},c[7.75]{\"id\": 39}]"}
(81 rows)

match (c1:c), (c2:c) where c1.id >= 31 and c1.id <= 39 and c2.id >= 41 and c2.id <= 49 return c1.id as c1id, c2.id as c2id, allshortestpaths((c1)<-[:e*]-(c2)) order by c1id, c2id;
 c1id | c2id | ?column? 
------+------+----------
 31   | 41   | 
 31   | 42   | 
 31   | 43   | 
 31   | 44   | 
 31   | 45   | 
 31   | 46   | 
 31   | 47   | 
 31   | 48   | 
 31   | 49   | 
 32   | 41   | 
 32   | 42   | 
 32   | 43   | 
 32   | 44   | 
 32   | 45   | 
 32   | 46   | 
 32   | 47   | 
 32   | 48   | 
 32   | 49   | 
 33   | 41   | 
 33   | 42   | 
 33   | 43   | 
 33   | 44   | 
 33   | 45   | 
 33   | 46   | 
 33   | 47   | 
 33   | 48   | 
 33   | 49   | 
 34   | 41   | 
 34   | 42   | 
 34   | 43   | 
 34   | 44   | 
 34   | 45   | 
 34   | 46   | 
 34   | 47   | 
 34   | 48   | 
 34   | 49   | 
 35   | 41   | 
 35   | 42   | 
 35   | 43   | 
 35   | 44   | 
 35   | 45   | 
 35   | 46   | 
 35   | 47   | 
 35   | 48   | 
 35   | 49   | 
 36   | 41   | 
 36   | 42   | 
 36   | 43   | 
 36   | 44   | 
 36   | 45   | 
 36   | 46   | 
 36   | 47   | 
 36   | 48   | 
 36   | 49   | 
 37   | 41   | 
 37   | 42   | 
 37   | 43   | 
 37   | 44   | 
 37   | 45   | 
 37   | 46   | 
 37   | 47   | 
 37   | 48   | 
 37   | 49   | 
 38   | 41   | 
 38   | 42   | 
 38   | 43   | 
 38   | 44   | 
 38   | 45   | 
 38   | 46   | 
 38   | 47   | 
 38   | 48   | 
 38   | 49   | 
 39   | 41   | 
 39   | 42   | 
 39   | 43   | 
 39   | 44   | 
 39   | 45   | 
 39   | 46   | 
 39   | 47   | 
 39   | 48   | 
 39   | 49   | 
(81 rows)

match (c1:c), (c2:c) where c1.id >= 11 and c1.id <= 19 and c2.id >= 11 and c2.id <= 19 return c1.id as c1id, c2.id as c2id, size(allshortestpaths((c1)-[:e*]-(c2))) order by c1id, c2id;
 c1id | c2id | count 
------+------+-------
 11   | 11   | 1
 11   | 12   | 2
 11   | 13   | 2
 11   | 14   | 2
 11   | 15   | 2
 11   | 16   | 2
 11   | 17   | 2
 11   | 18   | 2
 11   | 19   | 2
 12   | 11   | 2
 12   | 12   | 1
 12   | 13   | 2
 12   | 14   | 2
 12   | 15   | 2
 12   | 16   | 2
 12   | 17   | 2
 12   | 18   | 2
 12   | 19   | 2
 13   | 11   | 2
 13   | 12   | 2
 13   | 13   | 1
 13   | 14   | 2
 13   | 15   | 2
 13   | 16   | 2
 13   | 17   | 2
 13   | 18   | 2
 13   | 19   | 2
 14   | 11   | 2
 14   | 12   | 2
 14   | 13   | 2
 14   | 14   | 1
 14   | 15   | 2
 14   | 16   | 2
 14   | 17   | 2
 14   | 18   | 2
 14   | 19   | 2
 15   | 11   | 2
 15   | 12   | 2
 15   | 13   | 2
 15   | 14   | 2
 15   | 15   | 1
 15   | 16   | 2
 15   | 17   | 2
 15   | 18   | 2
 15   | 19   | 2
 16   | 11   | 2
 16   | 12   | 2
 16   | 13   | 2
 16   | 14   | 2
 16   | 15   | 2
 16   | 16   | 1
 16   | 17   | 2
 16   | 18   | 2
 16   | 19   | 2
 17   | 11   | 2
 17   | 12   | 2
 17   | 13   | 2
 17   | 14   | 2
 17   | 15   | 2
 17   | 16   | 2
 17   | 17   | 1
 17   | 18   | 2
 17   | 19   | 2
 18   | 11   | 2
 18   | 12   | 2
 18   | 13   | 2
 18   | 14   | 2
 18   | 15   | 2
 18   | 16   | 2
 18   | 17   | 2
 18   | 18   | 1
 18   | 19   | 2
 19   | 11   | 2
 19   | 12   | 2
 19   | 13   | 2
 19   | 14   | 2
 19   | 15   | 2
 19   | 16   | 2
 19   | 17   | 2
 19   | 18   | 2
 19   | 19   | 1
(81 rows)

match (c1:c), (c2:c) where c1.id >= 11 and c1.id <= 19 and c2.id >= 21 and c2.id <= 29 return c1.id as c1id, c2.id as c2id, size(allshortestpaths((c1)-[:e*]-(c2))) order by c1id, c2id;
 c1id | c2id | count 
------+------+-------
 11   | 21   | 0
 11   | 22   | 0
 11   | 23   | 0
 11   | 24   | 0
 11   | 25   | 0
 11   | 26   | 0
 11   | 27   | 0
 11   | 28   | 0
 11   | 29   | 0
 12   | 21   | 0
 12   | 22   | 0
 12   | 23   | 0
 12   | 24   | 0
 12   | 25   | 0
 12   | 26   | 0
 12   | 27   | 0
 12   | 28   | 0
 12   | 29   | 0
 13   | 21   | 0
 13   | 22   | 0
 13   | 23   | 0
 13   | 24   | 0
 13   | 25   | 0
 13   | 26   | 0
 13   | 27   | 0
 13   | 28   | 0
 13   | 29   | 0
 14   | 21   | 0
 14   | 22   | 0
 14   | 23   | 0
 14   | 24   | 0
 14   | 25   | 0
 14   | 26   | 0
 14   | 27   | 0
 14   | 28   | 0
 14   | 29   | 0
 15   | 21   | 0
 15   | 22   | 0
 15   | 23   | 0
 15   | 24   | 0
 15   | 25   | 0
 15   | 26   | 0
 15   | 27   | 0
 15   | 28   | 0
 15   | 29   | 0
 16   | 21   | 0
 16   | 22   | 0
 16   | 23   | 0
 16   | 24   | 0
 16   | 25   | 0
 16   | 26   | 0
 16   | 27   | 0
 16   | 28   | 0
 16   | 29   | 0
 17   | 21   | 0
 17   | 22   | 0
 17   | 23   | 0
 17   | 24   | 0
 17   | 25   | 0
 17   | 26   | 0
 17   | 27   | 0
 17   | 28   | 0
 17   | 29   | 0
 18   | 21   | 0
 18   | 22   | 0
 18   | 23   | 0
 18   | 24   | 0
 18   | 25   | 0
 18   | 26   | 0
 18   | 27   | 0
 18   | 28   | 0
 18   | 29   | 0
 19   | 21   | 0
 19   | 22   | 0
 19   | 23   | 0
 19   | 24   | 0
 19   | 25   | 0
 19   | 26   | 0
 19   | 27   | 0
 19   | 28   | 0
 19   | 29   | 0
(81 rows)

match (c1:c), (c2:c) where c1.id >= 31 and c1.id <= 39 and c2.id >= 31 and c2.id <= 39 return c1.id as c1id, c2.id as c2id, size(allshortestpaths((c1)-[:e*]-(c2))) order by c1id, c2id;
 c1id | c2id | count 
------+------+-------
 31   | 31   | 32
 31   | 32   | 2
 31   | 33   | 2
 31   | 34   | 2
 31   | 35   | 2
 31   | 36   | 2
 31   | 37   | 2
 31   | 38   | 2
 31   | 39   | 2
 32   | 31   | 2
 32   | 32   | 32
 32   | 33   | 2
 32   | 34   | 2
 32   | 35   | 2
 32   | 36   | 2
 32   | 37   | 2
 32   | 38   | 2
 32   | 39   | 2
 33   | 31   | 2
 33   | 32   | 2
 33   | 33   | 32
 33   | 34   | 2
 33   | 35   | 2
 33   | 36   | 2
 33   | 37   | 2
 33   | 38   | 2
 33   | 39   | 2
 34   | 31   | 2
 34   | 32   | 2
 34   | 33   | 2
 34   | 34   | 32
 34   | 35   | 2
 34   | 36   | 2
 34   | 37   | 2
 34   | 38   | 2
 34   | 39   | 2
 35   | 31   | 2
 35   | 32   | 2
 35   | 33   | 2
 35   | 34   | 2
 35   | 35   | 32
 35   | 36   | 2
 35   | 37   | 2
 35   | 38   | 2
 35   | 39   | 2
 36   | 31   | 2
 36   | 32   | 2
 36   | 33   | 2
 36   | 34   | 2
 36   | 35   | 2
 36   | 36   | 32
 36   | 37   | 2
 36   | 38   | 2
 36   | 39   | 2
 37   | 31   | 2
 37   | 32   | 2
 37   | 33   | 2
 37   | 34   | 2
 37   | 35   | 2
 37   | 36   | 2
 37   | 37   | 32
 37   | 38   | 2
 37   | 39   | 2
 38   | 31   | 2
 38   | 32   | 2
 38   | 33   | 2
 38   | 34   | 2
 38   | 35   | 2
 38   | 36   | 2
 38   | 37   | 2
 38   | 38   | 32
 38   | 39   | 2
 39   | 31   | 2
 39   | 32   | 2
 39   | 33   | 2
 39   | 34   | 2
 39   | 35   | 2
 39   | 36   | 2
 39   | 37   | 2
 39   | 38   | 2
 39   | 39   | 32
(81 rows)

match (c1:c), (c2:c) where c1.id >= 31 and c1.id <= 39 and c2.id >= 41 and c2.id <= 49 return c1.id as c1id, c2.id as c2id, size(allshortestpaths((c1)-[:e*]-(c2))) order by c1id, c2id;
 c1id | c2id | count 
------+------+-------
 31   | 41   | 0
 31   | 42   | 0
 31   | 43   | 0
 31   | 44   | 0
 31   | 45   | 0
 31   | 46   | 0
 31   | 47   | 0
 31   | 48   | 0
 31   | 49   | 0
 32   | 41   | 0
 32   | 42   | 0
 32   | 43   | 0
 32   | 44   | 0
 32   | 45   | 0
 32   | 46   | 0
 32   | 47   | 0
 32   | 48   | 0
 32   | 49   | 0
 33   | 41   | 0
 33   | 42   | 0
 33   | 43   | 0
 33   | 44   | 0
 33   | 45   | 0
 33   | 46   | 0
 33   | 47   | 0
 33   | 48   | 0
 33   | 49   | 0
 34   | 41   | 0
 34   | 42   | 0
 34   | 43   | 0
 34   | 44   | 0
 34   | 45   | 0
 34   | 46   | 0
 34   | 47   | 0
 34   | 48   | 0
 34   | 49   | 0
 35   | 41   | 0
 35   | 42   | 0
 35   | 43   | 0
 35   | 44   | 0
 35   | 45   | 0
 35   | 46   | 0
 35   | 47   | 0
 35   | 48   | 0
 35   | 49   | 0
 36   | 41   | 0
 36   | 42   | 0
 36   | 43   | 0
 36   | 44   | 0
 36   | 45   | 0
 36   | 46   | 0
 36   | 47   | 0
 36   | 48   | 0
 36   | 49   | 0
 37   | 41   | 0
 37   | 42   | 0
 37   | 43   | 0
 37   | 44   | 0
 37   | 45   | 0
 37   | 46   | 0
 37   | 47   | 0
 37   | 48   | 0
 37   | 49   | 0
 38   | 41   | 0
 38   | 42   | 0
 38   | 43   | 0
 38   | 44   | 0
 38   | 45   | 0
 38   | 46   | 0
 38   | 47   | 0
 38   | 48   | 0
 38   | 49   | 0
 39   | 41   | 0
 39   | 42   | 0
 39   | 43   | 0
 39   | 44   | 0
 39   | 45   | 0
 39   | 46   | 0
 39   | 47   | 0
 39   | 48   | 0
 39   | 49   | 0
(81 rows)

match (c1:c), (c2:c) where c1.id >= 51 and c1.id <= 59 and c2.id >= 61 and c2.id <= 69 return c1.id as c1id, c2.id as c2id, allshortestpaths((c1)-[:e*]->(c2)) order by c1id, c2id;
 c1id | c2id |                                                                                                          ?column?                                                                                                           
------+------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 51   | 61   | {"[c[7.5]{\"id\": 51},e[12.332][7.5,7.77]{\"id\": \"c:51->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.461][7.78,7.6]{\"id\": \"c:69->c:61\"},c[7.6]{\"id\": 61}]"}
 51   | 62   | {"[c[7.5]{\"id\": 51},e[12.332][7.5,7.77]{\"id\": \"c:51->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.462][7.78,7.15]{\"id\": \"c:69->c:62\"},c[7.15]{\"id\": 62}]"}
 51   | 63   | {"[c[7.5]{\"id\": 51},e[12.332][7.5,7.77]{\"id\": \"c:51->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.463][7.78,7.24]{\"id\": \"c:69->c:63\"},c[7.24]{\"id\": 63}]"}
 51   | 64   | {"[c[7.5]{\"id\": 51},e[12.332][7.5,7.77]{\"id\": \"c:51->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.464][7.78,7.33]{\"id\": \"c:69->c:64\"},c[7.33]{\"id\": 64}]"}
 51   | 65   | {"[c[7.5]{\"id\": 51},e[12.332][7.5,7.77]{\"id\": \"c:51->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.465][7.78,7.42]{\"id\": \"c:69->c:65\"},c[7.42]{\"id\": 65}]"}
 51   | 66   | {"[c[7.5]{\"id\": 51},e[12.332][7.5,7.77]{\"id\": \"c:51->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.466][7.78,7.51]{\"id\": \"c:69->c:66\"},c[7.51]{\"id\": 66}]"}
 51   | 67   | {"[c[7.5]{\"id\": 51},e[12.332][7.5,7.77]{\"id\": \"c:51->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.467][7.78,7.60]{\"id\": \"c:69->c:67\"},c[7.60]{\"id\": 67}]"}
 51   | 68   | {"[c[7.5]{\"id\": 51},e[12.332][7.5,7.77]{\"id\": \"c:51->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.468][7.78,7.69]{\"id\": \"c:69->c:68\"},c[7.69]{\"id\": 68}]"}
 51   | 69   | {"[c[7.5]{\"id\": 51},e[12.332][7.5,7.77]{\"id\": \"c:51->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69}]"}
 52   | 61   | {"[c[7.14]{\"id\": 52},e[12.340][7.14,7.77]{\"id\": \"c:52->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.461][7.78,7.6]{\"id\": \"c:69->c:61\"},c[7.6]{\"id\": 61}]"}
 52   | 62   | {"[c[7.14]{\"id\": 52},e[12.340][7.14,7.77]{\"id\": \"c:52->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.462][7.78,7.15]{\"id\": \"c:69->c:62\"},c[7.15]{\"id\": 62}]"}
 52   | 63   | {"[c[7.14]{\"id\": 52},e[12.340][7.14,7.77]{\"id\": \"c:52->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.463][7.78,7.24]{\"id\": \"c:69->c:63\"},c[7.24]{\"id\": 63}]"}
 52   | 64   | {"[c[7.14]{\"id\": 52},e[12.340][7.14,7.77]{\"id\": \"c:52->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.464][7.78,7.33]{\"id\": \"c:69->c:64\"},c[7.33]{\"id\": 64}]"}
 52   | 65   | {"[c[7.14]{\"id\": 52},e[12.340][7.14,7.77]{\"id\": \"c:52->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.465][7.78,7.42]{\"id\": \"c:69->c:65\"},c[7.42]{\"id\": 65}]"}
 52   | 66   | {"[c[7.14]{\"id\": 52},e[12.340][7.14,7.77]{\"id\": \"c:52->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.466][7.78,7.51]{\"id\": \"c:69->c:66\"},c[7.51]{\"id\": 66}]"}
 52   | 67   | {"[c[7.14]{\"id\": 52},e[12.340][7.14,7.77]{\"id\": \"c:52->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.467][7.78,7.60]{\"id\": \"c:69->c:67\"},c[7.60]{\"id\": 67}]"}
 52   | 68   | {"[c[7.14]{\"id\": 52},e[12.340][7.14,7.77]{\"id\": \"c:52->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.468][7.78,7.69]{\"id\": \"c:69->c:68\"},c[7.69]{\"id\": 68}]"}
 52   | 69   | {"[c[7.14]{\"id\": 52},e[12.340][7.14,7.77]{\"id\": \"c:52->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69}]"}
 53   | 61   | {"[c[7.23]{\"id\": 53},e[12.348][7.23,7.77]{\"id\": \"c:53->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.461][7.78,7.6]{\"id\": \"c:69->c:61\"},c[7.6]{\"id\": 61}]"}
 53   | 62   | {"[c[7.23]{\"id\": 53},e[12.348][7.23,7.77]{\"id\": \"c:53->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.462][7.78,7.15]{\"id\": \"c:69->c:62\"},c[7.15]{\"id\": 62}]"}
 53   | 63   | {"[c[7.23]{\"id\": 53},e[12.348][7.23,7.77]{\"id\": \"c:53->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.463][7.78,7.24]{\"id\": \"c:69->c:63\"},c[7.24]{\"id\": 63}]"}
 53   | 64   | {"[c[7.23]{\"id\": 53},e[12.348][7.23,7.77]{\"id\": \"c:53->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.464][7.78,7.33]{\"id\": \"c:69->c:64\"},c[7.33]{\"id\": 64}]"}
 53   | 65   | {"[c[7.23]{\"id\": 53},e[12.348][7.23,7.77]{\"id\": \"c:53->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.465][7.78,7.42]{\"id\": \"c:69->c:65\"},c[7.42]{\"id\": 65}]"}
 53   | 66   | {"[c[7.23]{\"id\": 53},e[12.348][7.23,7.77]{\"id\": \"c:53->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.466][7.78,7.51]{\"id\": \"c:69->c:66\"},c[7.51]{\"id\": 66}]"}
 53   | 67   | {"[c[7.23]{\"id\": 53},e[12.348][7.23,7.77]{\"id\": \"c:53->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.467][7.78,7.60]{\"id\": \"c:69->c:67\"},c[7.60]{\"id\": 67}]"}
 53   | 68   | {"[c[7.23]{\"id\": 53},e[12.348][7.23,7.77]{\"id\": \"c:53->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.468][7.78,7.69]{\"id\": \"c:69->c:68\"},c[7.69]{\"id\": 68}]"}
 53   | 69   | {"[c[7.23]{\"id\": 53},e[12.348][7.23,7.77]{\"id\": \"c:53->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69}]"}
 54   | 61   | {"[c[7.32]{\"id\": 54},e[12.356][7.32,7.77]{\"id\": \"c:54->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.461][7.78,7.6]{\"id\": \"c:69->c:61\"},c[7.6]{\"id\": 61}]"}
 54   | 62   | {"[c[7.32]{\"id\": 54},e[12.356][7.32,7.77]{\"id\": \"c:54->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.462][7.78,7.15]{\"id\": \"c:69->c:62\"},c[7.15]{\"id\": 62}]"}
 54   | 63   | {"[c[7.32]{\"id\": 54},e[12.356][7.32,7.77]{\"id\": \"c:54->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.463][7.78,7.24]{\"id\": \"c:69->c:63\"},c[7.24]{\"id\": 63}]"}
 54   | 64   | {"[c[7.32]{\"id\": 54},e[12.356][7.32,7.77]{\"id\": \"c:54->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.464][7.78,7.33]{\"id\": \"c:69->c:64\"},c[7.33]{\"id\": 64}]"}
 54   | 65   | {"[c[7.32]{\"id\": 54},e[12.356][7.32,7.77]{\"id\": \"c:54->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.465][7.78,7.42]{\"id\": \"c:69->c:65\"},c[7.42]{\"id\": 65}]"}
 54   | 66   | {"[c[7.32]{\"id\": 54},e[12.356][7.32,7.77]{\"id\": \"c:54->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.466][7.78,7.51]{\"id\": \"c:69->c:66\"},c[7.51]{\"id\": 66}]"}
 54   | 67   | {"[c[7.32]{\"id\": 54},e[12.356][7.32,7.77]{\"id\": \"c:54->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.467][7.78,7.60]{\"id\": \"c:69->c:67\"},c[7.60]{\"id\": 67}]"}
 54   | 68   | {"[c[7.32]{\"id\": 54},e[12.356][7.32,7.77]{\"id\": \"c:54->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.468][7.78,7.69]{\"id\": \"c:69->c:68\"},c[7.69]{\"id\": 68}]"}
 54   | 69   | {"[c[7.32]{\"id\": 54},e[12.356][7.32,7.77]{\"id\": \"c:54->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69}]"}
 55   | 61   | {"[c[7.41]{\"id\": 55},e[12.364][7.41,7.77]{\"id\": \"c:55->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.461][7.78,7.6]{\"id\": \"c:69->c:61\"},c[7.6]{\"id\": 61}]"}
 55   | 62   | {"[c[7.41]{\"id\": 55},e[12.364][7.41,7.77]{\"id\": \"c:55->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.462][7.78,7.15]{\"id\": \"c:69->c:62\"},c[7.15]{\"id\": 62}]"}
 55   | 63   | {"[c[7.41]{\"id\": 55},e[12.364][7.41,7.77]{\"id\": \"c:55->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.463][7.78,7.24]{\"id\": \"c:69->c:63\"},c[7.24]{\"id\": 63}]"}
 55   | 64   | {"[c[7.41]{\"id\": 55},e[12.364][7.41,7.77]{\"id\": \"c:55->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.464][7.78,7.33]{\"id\": \"c:69->c:64\"},c[7.33]{\"id\": 64}]"}
 55   | 65   | {"[c[7.41]{\"id\": 55},e[12.364][7.41,7.77]{\"id\": \"c:55->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.465][7.78,7.42]{\"id\": \"c:69->c:65\"},c[7.42]{\"id\": 65}]"}
 55   | 66   | {"[c[7.41]{\"id\": 55},e[12.364][7.41,7.77]{\"id\": \"c:55->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.466][7.78,7.51]{\"id\": \"c:69->c:66\"},c[7.51]{\"id\": 66}]"}
 55   | 67   | {"[c[7.41]{\"id\": 55},e[12.364][7.41,7.77]{\"id\": \"c:55->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.467][7.78,7.60]{\"id\": \"c:69->c:67\"},c[7.60]{\"id\": 67}]"}
 55   | 68   | {"[c[7.41]{\"id\": 55},e[12.364][7.41,7.77]{\"id\": \"c:55->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.468][7.78,7.69]{\"id\": \"c:69->c:68\"},c[7.69]{\"id\": 68}]"}
 55   | 69   | {"[c[7.41]{\"id\": 55},e[12.364][7.41,7.77]{\"id\": \"c:55->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69}]"}
 56   | 61   | {"[c[7.50]{\"id\": 56},e[12.372][7.50,7.77]{\"id\": \"c:56->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.461][7.78,7.6]{\"id\": \"c:69->c:61\"},c[7.6]{\"id\": 61}]"}
 56   | 62   | {"[c[7.50]{\"id\": 56},e[12.372][7.50,7.77]{\"id\": \"c:56->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.462][7.78,7.15]{\"id\": \"c:69->c:62\"},c[7.15]{\"id\": 62}]"}
 56   | 63   | {"[c[7.50]{\"id\": 56},e[12.372][7.50,7.77]{\"id\": \"c:56->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.463][7.78,7.24]{\"id\": \"c:69->c:63\"},c[7.24]{\"id\": 63}]"}
 56   | 64   | {"[c[7.50]{\"id\": 56},e[12.372][7.50,7.77]{\"id\": \"c:56->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.464][7.78,7.33]{\"id\": \"c:69->c:64\"},c[7.33]{\"id\": 64}]"}
 56   | 65   | {"[c[7.50]{\"id\": 56},e[12.372][7.50,7.77]{\"id\": \"c:56->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.465][7.78,7.42]{\"id\": \"c:69->c:65\"},c[7.42]{\"id\": 65}]"}
 56   | 66   | {"[c[7.50]{\"id\": 56},e[12.372][7.50,7.77]{\"id\": \"c:56->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.466][7.78,7.51]{\"id\": \"c:69->c:66\"},c[7.51]{\"id\": 66}]"}
 56   | 67   | {"[c[7.50]{\"id\": 56},e[12.372][7.50,7.77]{\"id\": \"c:56->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.467][7.78,7.60]{\"id\": \"c:69->c:67\"},c[7.60]{\"id\": 67}]"}
 56   | 68   | {"[c[7.50]{\"id\": 56},e[12.372][7.50,7.77]{\"id\": \"c:56->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.468][7.78,7.69]{\"id\": \"c:69->c:68\"},c[7.69]{\"id\": 68}]"}
 56   | 69   | {"[c[7.50]{\"id\": 56},e[12.372][7.50,7.77]{\"id\": \"c:56->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69}]"}
 57   | 61   | {"[c[7.59]{\"id\": 57},e[12.380][7.59,7.77]{\"id\": \"c:57->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.461][7.78,7.6]{\"id\": \"c:69->c:61\"},c[7.6]{\"id\": 61}]"}
 57   | 62   | {"[c[7.59]{\"id\": 57},e[12.380][7.59,7.77]{\"id\": \"c:57->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.462][7.78,7.15]{\"id\": \"c:69->c:62\"},c[7.15]{\"id\": 62}]"}
 57   | 63   | {"[c[7.59]{\"id\": 57},e[12.380][7.59,7.77]{\"id\": \"c:57->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.463][7.78,7.24]{\"id\": \"c:69->c:63\"},c[7.24]{\"id\": 63}]"}
 57   | 64   | {"[c[7.59]{\"id\": 57},e[12.380][7.59,7.77]{\"id\": \"c:57->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.464][7.78,7.33]{\"id\": \"c:69->c:64\"},c[7.33]{\"id\": 64}]"}
 57   | 65   | {"[c[7.59]{\"id\": 57},e[12.380][7.59,7.77]{\"id\": \"c:57->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.465][7.78,7.42]{\"id\": \"c:69->c:65\"},c[7.42]{\"id\": 65}]"}
 57   | 66   | {"[c[7.59]{\"id\": 57},e[12.380][7.59,7.77]{\"id\": \"c:57->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.466][7.78,7.51]{\"id\": \"c:69->c:66\"},c[7.51]{\"id\": 66}]"}
 57   | 67   | {"[c[7.59]{\"id\": 57},e[12.380][7.59,7.77]{\"id\": \"c:57->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.467][7.78,7.60]{\"id\": \"c:69->c:67\"},c[7.60]{\"id\": 67}]"}
 57   | 68   | {"[c[7.59]{\"id\": 57},e[12.380][7.59,7.77]{\"id\": \"c:57->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.468][7.78,7.69]{\"id\": \"c:69->c:68\"},c[7.69]{\"id\": 68}]"}
 57   | 69   | {"[c[7.59]{\"id\": 57},e[12.380][7.59,7.77]{\"id\": \"c:57->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69}]"}
 58   | 61   | {"[c[7.68]{\"id\": 58},e[12.388][7.68,7.77]{\"id\": \"c:58->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.461][7.78,7.6]{\"id\": \"c:69->c:61\"},c[7.6]{\"id\": 61}]"}
 58   | 62   | {"[c[7.68]{\"id\": 58},e[12.388][7.68,7.77]{\"id\": \"c:58->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.462][7.78,7.15]{\"id\": \"c:69->c:62\"},c[7.15]{\"id\": 62}]"}
 58   | 63   | {"[c[7.68]{\"id\": 58},e[12.388][7.68,7.77]{\"id\": \"c:58->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.463][7.78,7.24]{\"id\": \"c:69->c:63\"},c[7.24]{\"id\": 63}]"}
 58   | 64   | {"[c[7.68]{\"id\": 58},e[12.388][7.68,7.77]{\"id\": \"c:58->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.464][7.78,7.33]{\"id\": \"c:69->c:64\"},c[7.33]{\"id\": 64}]"}
 58   | 65   | {"[c[7.68]{\"id\": 58},e[12.388][7.68,7.77]{\"id\": \"c:58->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.465][7.78,7.42]{\"id\": \"c:69->c:65\"},c[7.42]{\"id\": 65}]"}
 58   | 66   | {"[c[7.68]{\"id\": 58},e[12.388][7.68,7.77]{\"id\": \"c:58->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.466][7.78,7.51]{\"id\": \"c:69->c:66\"},c[7.51]{\"id\": 66}]"}
 58   | 67   | {"[c[7.68]{\"id\": 58},e[12.388][7.68,7.77]{\"id\": \"c:58->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.467][7.78,7.60]{\"id\": \"c:69->c:67\"},c[7.60]{\"id\": 67}]"}
 58   | 68   | {"[c[7.68]{\"id\": 58},e[12.388][7.68,7.77]{\"id\": \"c:58->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.468][7.78,7.69]{\"id\": \"c:69->c:68\"},c[7.69]{\"id\": 68}]"}
 58   | 69   | {"[c[7.68]{\"id\": 58},e[12.388][7.68,7.77]{\"id\": \"c:58->c:59\"},c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69}]"}
 59   | 61   | {"[c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.461][7.78,7.6]{\"id\": \"c:69->c:61\"},c[7.6]{\"id\": 61}]"}
 59   | 62   | {"[c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.462][7.78,7.15]{\"id\": \"c:69->c:62\"},c[7.15]{\"id\": 62}]"}
 59   | 63   | {"[c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.463][7.78,7.24]{\"id\": \"c:69->c:63\"},c[7.24]{\"id\": 63}]"}
 59   | 64   | {"[c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.464][7.78,7.33]{\"id\": \"c:69->c:64\"},c[7.33]{\"id\": 64}]"}
 59   | 65   | {"[c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.465][7.78,7.42]{\"id\": \"c:69->c:65\"},c[7.42]{\"id\": 65}]"}
 59   | 66   | {"[c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.466][7.78,7.51]{\"id\": \"c:69->c:66\"},c[7.51]{\"id\": 66}]"}
 59   | 67   | {"[c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.467][7.78,7.60]{\"id\": \"c:69->c:67\"},c[7.60]{\"id\": 67}]"}
 59   | 68   | {"[c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69},e[12.468][7.78,7.69]{\"id\": \"c:69->c:68\"},c[7.69]{\"id\": 68}]"}
 59   | 69   | {"[c[7.77]{\"id\": 59},e[12.685][7.77,7.78]{\"id\": \"c:59->c69\"},c[7.78]{\"id\": 69}]"}
(81 rows)

match (c1:c), (c2:c) where c1.id >= 71 and c1.id <= 79 and c2.id >= 81 and c2.id <= 99 return c1.id as c1id, c2.id as c2id, allshortestpaths((c1)-[:e*]->(c2)) order by c1id, c2id;
 c1id | c2id |                                                                                                                                          ?column?                                                                                                                                           
------+------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 71   | 81   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.605][7.80,7.8]{\"id\": \"c:89->c:81\"},c[7.8]{\"id\": 81}]"}
 71   | 82   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.606][7.80,7.17]{\"id\": \"c:89->c:82\"},c[7.17]{\"id\": 82}]"}
 71   | 83   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.607][7.80,7.26]{\"id\": \"c:89->c:83\"},c[7.26]{\"id\": 83}]"}
 71   | 84   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.608][7.80,7.35]{\"id\": \"c:89->c:84\"},c[7.35]{\"id\": 84}]"}
 71   | 85   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.609][7.80,7.44]{\"id\": \"c:89->c:85\"},c[7.44]{\"id\": 85}]"}
 71   | 86   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.610][7.80,7.53]{\"id\": \"c:89->c:86\"},c[7.53]{\"id\": 86}]"}
 71   | 87   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.611][7.80,7.62]{\"id\": \"c:89->c:87\"},c[7.62]{\"id\": 87}]"}
 71   | 88   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.612][7.80,7.71]{\"id\": \"c:89->c:88\"},c[7.71]{\"id\": 88}]"}
 71   | 89   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89}]"}
 71   | 91   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.677][7.81,7.9]{\"id\": \"c:99->c:91\"},c[7.9]{\"id\": 91}]"}
 71   | 92   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.678][7.81,7.18]{\"id\": \"c:99->c:92\"},c[7.18]{\"id\": 92}]"}
 71   | 93   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.679][7.81,7.27]{\"id\": \"c:99->c:93\"},c[7.27]{\"id\": 93}]"}
 71   | 94   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.680][7.81,7.36]{\"id\": \"c:99->c:94\"},c[7.36]{\"id\": 94}]"}
 71   | 95   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.681][7.81,7.45]{\"id\": \"c:99->c:95\"},c[7.45]{\"id\": 95}]"}
 71   | 96   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.682][7.81,7.54]{\"id\": \"c:99->c:96\"},c[7.54]{\"id\": 96}]"}
 71   | 97   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.683][7.81,7.63]{\"id\": \"c:99->c:97\"},c[7.63]{\"id\": 97}]"}
 71   | 98   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.684][7.81,7.72]{\"id\": \"c:99->c:98\"},c[7.72]{\"id\": 98}]"}
 71   | 99   | {"[c[7.7]{\"id\": 71},e[12.476][7.7,7.79]{\"id\": \"c:71->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99}]"}
 72   | 81   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.605][7.80,7.8]{\"id\": \"c:89->c:81\"},c[7.8]{\"id\": 81}]"}
 72   | 82   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.606][7.80,7.17]{\"id\": \"c:89->c:82\"},c[7.17]{\"id\": 82}]"}
 72   | 83   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.607][7.80,7.26]{\"id\": \"c:89->c:83\"},c[7.26]{\"id\": 83}]"}
 72   | 84   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.608][7.80,7.35]{\"id\": \"c:89->c:84\"},c[7.35]{\"id\": 84}]"}
 72   | 85   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.609][7.80,7.44]{\"id\": \"c:89->c:85\"},c[7.44]{\"id\": 85}]"}
 72   | 86   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.610][7.80,7.53]{\"id\": \"c:89->c:86\"},c[7.53]{\"id\": 86}]"}
 72   | 87   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.611][7.80,7.62]{\"id\": \"c:89->c:87\"},c[7.62]{\"id\": 87}]"}
 72   | 88   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.612][7.80,7.71]{\"id\": \"c:89->c:88\"},c[7.71]{\"id\": 88}]"}
 72   | 89   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89}]"}
 72   | 91   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.677][7.81,7.9]{\"id\": \"c:99->c:91\"},c[7.9]{\"id\": 91}]"}
 72   | 92   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.678][7.81,7.18]{\"id\": \"c:99->c:92\"},c[7.18]{\"id\": 92}]"}
 72   | 93   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.679][7.81,7.27]{\"id\": \"c:99->c:93\"},c[7.27]{\"id\": 93}]"}
 72   | 94   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.680][7.81,7.36]{\"id\": \"c:99->c:94\"},c[7.36]{\"id\": 94}]"}
 72   | 95   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.681][7.81,7.45]{\"id\": \"c:99->c:95\"},c[7.45]{\"id\": 95}]"}
 72   | 96   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.682][7.81,7.54]{\"id\": \"c:99->c:96\"},c[7.54]{\"id\": 96}]"}
 72   | 97   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.683][7.81,7.63]{\"id\": \"c:99->c:97\"},c[7.63]{\"id\": 97}]"}
 72   | 98   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.684][7.81,7.72]{\"id\": \"c:99->c:98\"},c[7.72]{\"id\": 98}]"}
 72   | 99   | {"[c[7.16]{\"id\": 72},e[12.484][7.16,7.79]{\"id\": \"c:72->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99}]"}
 73   | 81   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.605][7.80,7.8]{\"id\": \"c:89->c:81\"},c[7.8]{\"id\": 81}]"}
 73   | 82   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.606][7.80,7.17]{\"id\": \"c:89->c:82\"},c[7.17]{\"id\": 82}]"}
 73   | 83   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.607][7.80,7.26]{\"id\": \"c:89->c:83\"},c[7.26]{\"id\": 83}]"}
 73   | 84   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.608][7.80,7.35]{\"id\": \"c:89->c:84\"},c[7.35]{\"id\": 84}]"}
 73   | 85   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.609][7.80,7.44]{\"id\": \"c:89->c:85\"},c[7.44]{\"id\": 85}]"}
 73   | 86   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.610][7.80,7.53]{\"id\": \"c:89->c:86\"},c[7.53]{\"id\": 86}]"}
 73   | 87   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.611][7.80,7.62]{\"id\": \"c:89->c:87\"},c[7.62]{\"id\": 87}]"}
 73   | 88   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.612][7.80,7.71]{\"id\": \"c:89->c:88\"},c[7.71]{\"id\": 88}]"}
 73   | 89   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89}]"}
 73   | 91   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.677][7.81,7.9]{\"id\": \"c:99->c:91\"},c[7.9]{\"id\": 91}]"}
 73   | 92   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.678][7.81,7.18]{\"id\": \"c:99->c:92\"},c[7.18]{\"id\": 92}]"}
 73   | 93   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.679][7.81,7.27]{\"id\": \"c:99->c:93\"},c[7.27]{\"id\": 93}]"}
 73   | 94   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.680][7.81,7.36]{\"id\": \"c:99->c:94\"},c[7.36]{\"id\": 94}]"}
 73   | 95   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.681][7.81,7.45]{\"id\": \"c:99->c:95\"},c[7.45]{\"id\": 95}]"}
 73   | 96   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.682][7.81,7.54]{\"id\": \"c:99->c:96\"},c[7.54]{\"id\": 96}]"}
 73   | 97   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.683][7.81,7.63]{\"id\": \"c:99->c:97\"},c[7.63]{\"id\": 97}]"}
 73   | 98   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.684][7.81,7.72]{\"id\": \"c:99->c:98\"},c[7.72]{\"id\": 98}]"}
 73   | 99   | {"[c[7.25]{\"id\": 73},e[12.492][7.25,7.79]{\"id\": \"c:73->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99}]"}
 74   | 81   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.605][7.80,7.8]{\"id\": \"c:89->c:81\"},c[7.8]{\"id\": 81}]"}
 74   | 82   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.606][7.80,7.17]{\"id\": \"c:89->c:82\"},c[7.17]{\"id\": 82}]"}
 74   | 83   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.607][7.80,7.26]{\"id\": \"c:89->c:83\"},c[7.26]{\"id\": 83}]"}
 74   | 84   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.608][7.80,7.35]{\"id\": \"c:89->c:84\"},c[7.35]{\"id\": 84}]"}
 74   | 85   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.609][7.80,7.44]{\"id\": \"c:89->c:85\"},c[7.44]{\"id\": 85}]"}
 74   | 86   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.610][7.80,7.53]{\"id\": \"c:89->c:86\"},c[7.53]{\"id\": 86}]"}
 74   | 87   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.611][7.80,7.62]{\"id\": \"c:89->c:87\"},c[7.62]{\"id\": 87}]"}
 74   | 88   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.612][7.80,7.71]{\"id\": \"c:89->c:88\"},c[7.71]{\"id\": 88}]"}
 74   | 89   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89}]"}
 74   | 91   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.677][7.81,7.9]{\"id\": \"c:99->c:91\"},c[7.9]{\"id\": 91}]"}
 74   | 92   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.678][7.81,7.18]{\"id\": \"c:99->c:92\"},c[7.18]{\"id\": 92}]"}
 74   | 93   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.679][7.81,7.27]{\"id\": \"c:99->c:93\"},c[7.27]{\"id\": 93}]"}
 74   | 94   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.680][7.81,7.36]{\"id\": \"c:99->c:94\"},c[7.36]{\"id\": 94}]"}
 74   | 95   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.681][7.81,7.45]{\"id\": \"c:99->c:95\"},c[7.45]{\"id\": 95}]"}
 74   | 96   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.682][7.81,7.54]{\"id\": \"c:99->c:96\"},c[7.54]{\"id\": 96}]"}
 74   | 97   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.683][7.81,7.63]{\"id\": \"c:99->c:97\"},c[7.63]{\"id\": 97}]"}
 74   | 98   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.684][7.81,7.72]{\"id\": \"c:99->c:98\"},c[7.72]{\"id\": 98}]"}
 74   | 99   | {"[c[7.34]{\"id\": 74},e[12.500][7.34,7.79]{\"id\": \"c:74->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99}]"}
 75   | 81   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.605][7.80,7.8]{\"id\": \"c:89->c:81\"},c[7.8]{\"id\": 81}]"}
 75   | 82   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.606][7.80,7.17]{\"id\": \"c:89->c:82\"},c[7.17]{\"id\": 82}]"}
 75   | 83   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.607][7.80,7.26]{\"id\": \"c:89->c:83\"},c[7.26]{\"id\": 83}]"}
 75   | 84   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.608][7.80,7.35]{\"id\": \"c:89->c:84\"},c[7.35]{\"id\": 84}]"}
 75   | 85   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.609][7.80,7.44]{\"id\": \"c:89->c:85\"},c[7.44]{\"id\": 85}]"}
 75   | 86   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.610][7.80,7.53]{\"id\": \"c:89->c:86\"},c[7.53]{\"id\": 86}]"}
 75   | 87   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.611][7.80,7.62]{\"id\": \"c:89->c:87\"},c[7.62]{\"id\": 87}]"}
 75   | 88   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.612][7.80,7.71]{\"id\": \"c:89->c:88\"},c[7.71]{\"id\": 88}]"}
 75   | 89   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89}]"}
 75   | 91   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.677][7.81,7.9]{\"id\": \"c:99->c:91\"},c[7.9]{\"id\": 91}]"}
 75   | 92   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.678][7.81,7.18]{\"id\": \"c:99->c:92\"},c[7.18]{\"id\": 92}]"}
 75   | 93   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.679][7.81,7.27]{\"id\": \"c:99->c:93\"},c[7.27]{\"id\": 93}]"}
 75   | 94   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.680][7.81,7.36]{\"id\": \"c:99->c:94\"},c[7.36]{\"id\": 94}]"}
 75   | 95   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.681][7.81,7.45]{\"id\": \"c:99->c:95\"},c[7.45]{\"id\": 95}]"}
 75   | 96   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.682][7.81,7.54]{\"id\": \"c:99->c:96\"},c[7.54]{\"id\": 96}]"}
 75   | 97   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.683][7.81,7.63]{\"id\": \"c:99->c:97\"},c[7.63]{\"id\": 97}]"}
 75   | 98   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.684][7.81,7.72]{\"id\": \"c:99->c:98\"},c[7.72]{\"id\": 98}]"}
 75   | 99   | {"[c[7.43]{\"id\": 75},e[12.508][7.43,7.79]{\"id\": \"c:75->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99}]"}
 76   | 81   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.605][7.80,7.8]{\"id\": \"c:89->c:81\"},c[7.8]{\"id\": 81}]"}
 76   | 82   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.606][7.80,7.17]{\"id\": \"c:89->c:82\"},c[7.17]{\"id\": 82}]"}
 76   | 83   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.607][7.80,7.26]{\"id\": \"c:89->c:83\"},c[7.26]{\"id\": 83}]"}
 76   | 84   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.608][7.80,7.35]{\"id\": \"c:89->c:84\"},c[7.35]{\"id\": 84}]"}
 76   | 85   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.609][7.80,7.44]{\"id\": \"c:89->c:85\"},c[7.44]{\"id\": 85}]"}
 76   | 86   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.610][7.80,7.53]{\"id\": \"c:89->c:86\"},c[7.53]{\"id\": 86}]"}
 76   | 87   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.611][7.80,7.62]{\"id\": \"c:89->c:87\"},c[7.62]{\"id\": 87}]"}
 76   | 88   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.612][7.80,7.71]{\"id\": \"c:89->c:88\"},c[7.71]{\"id\": 88}]"}
 76   | 89   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89}]"}
 76   | 91   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.677][7.81,7.9]{\"id\": \"c:99->c:91\"},c[7.9]{\"id\": 91}]"}
 76   | 92   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.678][7.81,7.18]{\"id\": \"c:99->c:92\"},c[7.18]{\"id\": 92}]"}
 76   | 93   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.679][7.81,7.27]{\"id\": \"c:99->c:93\"},c[7.27]{\"id\": 93}]"}
 76   | 94   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.680][7.81,7.36]{\"id\": \"c:99->c:94\"},c[7.36]{\"id\": 94}]"}
 76   | 95   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.681][7.81,7.45]{\"id\": \"c:99->c:95\"},c[7.45]{\"id\": 95}]"}
 76   | 96   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.682][7.81,7.54]{\"id\": \"c:99->c:96\"},c[7.54]{\"id\": 96}]"}
 76   | 97   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.683][7.81,7.63]{\"id\": \"c:99->c:97\"},c[7.63]{\"id\": 97}]"}
 76   | 98   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.684][7.81,7.72]{\"id\": \"c:99->c:98\"},c[7.72]{\"id\": 98}]"}
 76   | 99   | {"[c[7.52]{\"id\": 76},e[12.516][7.52,7.79]{\"id\": \"c:76->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99}]"}
 77   | 81   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.605][7.80,7.8]{\"id\": \"c:89->c:81\"},c[7.8]{\"id\": 81}]"}
 77   | 82   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.606][7.80,7.17]{\"id\": \"c:89->c:82\"},c[7.17]{\"id\": 82}]"}
 77   | 83   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.607][7.80,7.26]{\"id\": \"c:89->c:83\"},c[7.26]{\"id\": 83}]"}
 77   | 84   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.608][7.80,7.35]{\"id\": \"c:89->c:84\"},c[7.35]{\"id\": 84}]"}
 77   | 85   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.609][7.80,7.44]{\"id\": \"c:89->c:85\"},c[7.44]{\"id\": 85}]"}
 77   | 86   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.610][7.80,7.53]{\"id\": \"c:89->c:86\"},c[7.53]{\"id\": 86}]"}
 77   | 87   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.611][7.80,7.62]{\"id\": \"c:89->c:87\"},c[7.62]{\"id\": 87}]"}
 77   | 88   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.612][7.80,7.71]{\"id\": \"c:89->c:88\"},c[7.71]{\"id\": 88}]"}
 77   | 89   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89}]"}
 77   | 91   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.677][7.81,7.9]{\"id\": \"c:99->c:91\"},c[7.9]{\"id\": 91}]"}
 77   | 92   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.678][7.81,7.18]{\"id\": \"c:99->c:92\"},c[7.18]{\"id\": 92}]"}
 77   | 93   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.679][7.81,7.27]{\"id\": \"c:99->c:93\"},c[7.27]{\"id\": 93}]"}
 77   | 94   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.680][7.81,7.36]{\"id\": \"c:99->c:94\"},c[7.36]{\"id\": 94}]"}
 77   | 95   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.681][7.81,7.45]{\"id\": \"c:99->c:95\"},c[7.45]{\"id\": 95}]"}
 77   | 96   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.682][7.81,7.54]{\"id\": \"c:99->c:96\"},c[7.54]{\"id\": 96}]"}
 77   | 97   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.683][7.81,7.63]{\"id\": \"c:99->c:97\"},c[7.63]{\"id\": 97}]"}
 77   | 98   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.684][7.81,7.72]{\"id\": \"c:99->c:98\"},c[7.72]{\"id\": 98}]"}
 77   | 99   | {"[c[7.61]{\"id\": 77},e[12.524][7.61,7.79]{\"id\": \"c:77->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99}]"}
 78   | 81   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.605][7.80,7.8]{\"id\": \"c:89->c:81\"},c[7.8]{\"id\": 81}]"}
 78   | 82   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.606][7.80,7.17]{\"id\": \"c:89->c:82\"},c[7.17]{\"id\": 82}]"}
 78   | 83   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.607][7.80,7.26]{\"id\": \"c:89->c:83\"},c[7.26]{\"id\": 83}]"}
 78   | 84   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.608][7.80,7.35]{\"id\": \"c:89->c:84\"},c[7.35]{\"id\": 84}]"}
 78   | 85   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.609][7.80,7.44]{\"id\": \"c:89->c:85\"},c[7.44]{\"id\": 85}]"}
 78   | 86   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.610][7.80,7.53]{\"id\": \"c:89->c:86\"},c[7.53]{\"id\": 86}]"}
 78   | 87   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.611][7.80,7.62]{\"id\": \"c:89->c:87\"},c[7.62]{\"id\": 87}]"}
 78   | 88   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.612][7.80,7.71]{\"id\": \"c:89->c:88\"},c[7.71]{\"id\": 88}]"}
 78   | 89   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89}]"}
 78   | 91   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.677][7.81,7.9]{\"id\": \"c:99->c:91\"},c[7.9]{\"id\": 91}]"}
 78   | 92   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.678][7.81,7.18]{\"id\": \"c:99->c:92\"},c[7.18]{\"id\": 92}]"}
 78   | 93   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.679][7.81,7.27]{\"id\": \"c:99->c:93\"},c[7.27]{\"id\": 93}]"}
 78   | 94   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.680][7.81,7.36]{\"id\": \"c:99->c:94\"},c[7.36]{\"id\": 94}]"}
 78   | 95   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.681][7.81,7.45]{\"id\": \"c:99->c:95\"},c[7.45]{\"id\": 95}]"}
 78   | 96   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.682][7.81,7.54]{\"id\": \"c:99->c:96\"},c[7.54]{\"id\": 96}]"}
 78   | 97   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.683][7.81,7.63]{\"id\": \"c:99->c:97\"},c[7.63]{\"id\": 97}]"}
 78   | 98   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.684][7.81,7.72]{\"id\": \"c:99->c:98\"},c[7.72]{\"id\": 98}]"}
 78   | 99   | {"[c[7.70]{\"id\": 78},e[12.532][7.70,7.79]{\"id\": \"c:78->c:79\"},c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99}]"}
 79   | 81   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.605][7.80,7.8]{\"id\": \"c:89->c:81\"},c[7.8]{\"id\": 81}]"}
 79   | 82   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.606][7.80,7.17]{\"id\": \"c:89->c:82\"},c[7.17]{\"id\": 82}]"}
 79   | 83   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.607][7.80,7.26]{\"id\": \"c:89->c:83\"},c[7.26]{\"id\": 83}]"}
 79   | 84   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.608][7.80,7.35]{\"id\": \"c:89->c:84\"},c[7.35]{\"id\": 84}]"}
 79   | 85   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.609][7.80,7.44]{\"id\": \"c:89->c:85\"},c[7.44]{\"id\": 85}]"}
 79   | 86   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.610][7.80,7.53]{\"id\": \"c:89->c:86\"},c[7.53]{\"id\": 86}]"}
 79   | 87   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.611][7.80,7.62]{\"id\": \"c:89->c:87\"},c[7.62]{\"id\": 87}]"}
 79   | 88   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.612][7.80,7.71]{\"id\": \"c:89->c:88\"},c[7.71]{\"id\": 88}]"}
 79   | 89   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89}]"}
 79   | 91   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.677][7.81,7.9]{\"id\": \"c:99->c:91\"},c[7.9]{\"id\": 91}]"}
 79   | 92   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.678][7.81,7.18]{\"id\": \"c:99->c:92\"},c[7.18]{\"id\": 92}]"}
 79   | 93   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.679][7.81,7.27]{\"id\": \"c:99->c:93\"},c[7.27]{\"id\": 93}]"}
 79   | 94   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.680][7.81,7.36]{\"id\": \"c:99->c:94\"},c[7.36]{\"id\": 94}]"}
 79   | 95   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.681][7.81,7.45]{\"id\": \"c:99->c:95\"},c[7.45]{\"id\": 95}]"}
 79   | 96   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.682][7.81,7.54]{\"id\": \"c:99->c:96\"},c[7.54]{\"id\": 96}]"}
 79   | 97   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.683][7.81,7.63]{\"id\": \"c:99->c:97\"},c[7.63]{\"id\": 97}]"}
 79   | 98   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99},e[12.684][7.81,7.72]{\"id\": \"c:99->c:98\"},c[7.72]{\"id\": 98}]"}
 79   | 99   | {"[c[7.79]{\"id\": 79},e[12.687][7.79,7.80]{\"id\": \"c:79->c89\"},c[7.80]{\"id\": 89},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.81]{\"id\": 99}]"}
(162 rows)

match (c1:c), (c2:c) where c1.id >= 51 and c1.id <= 59 and c2.id >= 61 and c2.id <= 69 return c1.id as c1id, c2.id as c2id, allshortestpaths((c1)<-[:e*]-(c2)) order by c1id, c2id;
 c1id | c2id |                                                                                                          ?column?                                                                                                           
------+------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 51   | 61   | {"[c[7.5]{\"id\": 51},e[12.389][7.77,7.5]{\"id\": \"c:59->c:51\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.404][7.6,7.78]{\"id\": \"c:61->c:69\"},c[7.6]{\"id\": 61}]"}
 51   | 62   | {"[c[7.5]{\"id\": 51},e[12.389][7.77,7.5]{\"id\": \"c:59->c:51\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.412][7.15,7.78]{\"id\": \"c:62->c:69\"},c[7.15]{\"id\": 62}]"}
 51   | 63   | {"[c[7.5]{\"id\": 51},e[12.389][7.77,7.5]{\"id\": \"c:59->c:51\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.420][7.24,7.78]{\"id\": \"c:63->c:69\"},c[7.24]{\"id\": 63}]"}
 51   | 64   | {"[c[7.5]{\"id\": 51},e[12.389][7.77,7.5]{\"id\": \"c:59->c:51\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.428][7.33,7.78]{\"id\": \"c:64->c:69\"},c[7.33]{\"id\": 64}]"}
 51   | 65   | {"[c[7.5]{\"id\": 51},e[12.389][7.77,7.5]{\"id\": \"c:59->c:51\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.436][7.42,7.78]{\"id\": \"c:65->c:69\"},c[7.42]{\"id\": 65}]"}
 51   | 66   | {"[c[7.5]{\"id\": 51},e[12.389][7.77,7.5]{\"id\": \"c:59->c:51\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.444][7.51,7.78]{\"id\": \"c:66->c:69\"},c[7.51]{\"id\": 66}]"}
 51   | 67   | {"[c[7.5]{\"id\": 51},e[12.389][7.77,7.5]{\"id\": \"c:59->c:51\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.452][7.60,7.78]{\"id\": \"c:67->c:69\"},c[7.60]{\"id\": 67}]"}
 51   | 68   | {"[c[7.5]{\"id\": 51},e[12.389][7.77,7.5]{\"id\": \"c:59->c:51\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.460][7.69,7.78]{\"id\": \"c:68->c:69\"},c[7.69]{\"id\": 68}]"}
 51   | 69   | {"[c[7.5]{\"id\": 51},e[12.389][7.77,7.5]{\"id\": \"c:59->c:51\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69}]"}
 52   | 61   | {"[c[7.14]{\"id\": 52},e[12.390][7.77,7.14]{\"id\": \"c:59->c:52\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.404][7.6,7.78]{\"id\": \"c:61->c:69\"},c[7.6]{\"id\": 61}]"}
 52   | 62   | {"[c[7.14]{\"id\": 52},e[12.390][7.77,7.14]{\"id\": \"c:59->c:52\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.412][7.15,7.78]{\"id\": \"c:62->c:69\"},c[7.15]{\"id\": 62}]"}
 52   | 63   | {"[c[7.14]{\"id\": 52},e[12.390][7.77,7.14]{\"id\": \"c:59->c:52\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.420][7.24,7.78]{\"id\": \"c:63->c:69\"},c[7.24]{\"id\": 63}]"}
 52   | 64   | {"[c[7.14]{\"id\": 52},e[12.390][7.77,7.14]{\"id\": \"c:59->c:52\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.428][7.33,7.78]{\"id\": \"c:64->c:69\"},c[7.33]{\"id\": 64}]"}
 52   | 65   | {"[c[7.14]{\"id\": 52},e[12.390][7.77,7.14]{\"id\": \"c:59->c:52\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.436][7.42,7.78]{\"id\": \"c:65->c:69\"},c[7.42]{\"id\": 65}]"}
 52   | 66   | {"[c[7.14]{\"id\": 52},e[12.390][7.77,7.14]{\"id\": \"c:59->c:52\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.444][7.51,7.78]{\"id\": \"c:66->c:69\"},c[7.51]{\"id\": 66}]"}
 52   | 67   | {"[c[7.14]{\"id\": 52},e[12.390][7.77,7.14]{\"id\": \"c:59->c:52\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.452][7.60,7.78]{\"id\": \"c:67->c:69\"},c[7.60]{\"id\": 67}]"}
 52   | 68   | {"[c[7.14]{\"id\": 52},e[12.390][7.77,7.14]{\"id\": \"c:59->c:52\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.460][7.69,7.78]{\"id\": \"c:68->c:69\"},c[7.69]{\"id\": 68}]"}
 52   | 69   | {"[c[7.14]{\"id\": 52},e[12.390][7.77,7.14]{\"id\": \"c:59->c:52\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69}]"}
 53   | 61   | {"[c[7.23]{\"id\": 53},e[12.391][7.77,7.23]{\"id\": \"c:59->c:53\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.404][7.6,7.78]{\"id\": \"c:61->c:69\"},c[7.6]{\"id\": 61}]"}
 53   | 62   | {"[c[7.23]{\"id\": 53},e[12.391][7.77,7.23]{\"id\": \"c:59->c:53\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.412][7.15,7.78]{\"id\": \"c:62->c:69\"},c[7.15]{\"id\": 62}]"}
 53   | 63   | {"[c[7.23]{\"id\": 53},e[12.391][7.77,7.23]{\"id\": \"c:59->c:53\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.420][7.24,7.78]{\"id\": \"c:63->c:69\"},c[7.24]{\"id\": 63}]"}
 53   | 64   | {"[c[7.23]{\"id\": 53},e[12.391][7.77,7.23]{\"id\": \"c:59->c:53\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.428][7.33,7.78]{\"id\": \"c:64->c:69\"},c[7.33]{\"id\": 64}]"}
 53   | 65   | {"[c[7.23]{\"id\": 53},e[12.391][7.77,7.23]{\"id\": \"c:59->c:53\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.436][7.42,7.78]{\"id\": \"c:65->c:69\"},c[7.42]{\"id\": 65}]"}
 53   | 66   | {"[c[7.23]{\"id\": 53},e[12.391][7.77,7.23]{\"id\": \"c:59->c:53\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.444][7.51,7.78]{\"id\": \"c:66->c:69\"},c[7.51]{\"id\": 66}]"}
 53   | 67   | {"[c[7.23]{\"id\": 53},e[12.391][7.77,7.23]{\"id\": \"c:59->c:53\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.452][7.60,7.78]{\"id\": \"c:67->c:69\"},c[7.60]{\"id\": 67}]"}
 53   | 68   | {"[c[7.23]{\"id\": 53},e[12.391][7.77,7.23]{\"id\": \"c:59->c:53\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.460][7.69,7.78]{\"id\": \"c:68->c:69\"},c[7.69]{\"id\": 68}]"}
 53   | 69   | {"[c[7.23]{\"id\": 53},e[12.391][7.77,7.23]{\"id\": \"c:59->c:53\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69}]"}
 54   | 61   | {"[c[7.32]{\"id\": 54},e[12.392][7.77,7.32]{\"id\": \"c:59->c:54\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.404][7.6,7.78]{\"id\": \"c:61->c:69\"},c[7.6]{\"id\": 61}]"}
 54   | 62   | {"[c[7.32]{\"id\": 54},e[12.392][7.77,7.32]{\"id\": \"c:59->c:54\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.412][7.15,7.78]{\"id\": \"c:62->c:69\"},c[7.15]{\"id\": 62}]"}
 54   | 63   | {"[c[7.32]{\"id\": 54},e[12.392][7.77,7.32]{\"id\": \"c:59->c:54\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.420][7.24,7.78]{\"id\": \"c:63->c:69\"},c[7.24]{\"id\": 63}]"}
 54   | 64   | {"[c[7.32]{\"id\": 54},e[12.392][7.77,7.32]{\"id\": \"c:59->c:54\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.428][7.33,7.78]{\"id\": \"c:64->c:69\"},c[7.33]{\"id\": 64}]"}
 54   | 65   | {"[c[7.32]{\"id\": 54},e[12.392][7.77,7.32]{\"id\": \"c:59->c:54\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.436][7.42,7.78]{\"id\": \"c:65->c:69\"},c[7.42]{\"id\": 65}]"}
 54   | 66   | {"[c[7.32]{\"id\": 54},e[12.392][7.77,7.32]{\"id\": \"c:59->c:54\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.444][7.51,7.78]{\"id\": \"c:66->c:69\"},c[7.51]{\"id\": 66}]"}
 54   | 67   | {"[c[7.32]{\"id\": 54},e[12.392][7.77,7.32]{\"id\": \"c:59->c:54\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.452][7.60,7.78]{\"id\": \"c:67->c:69\"},c[7.60]{\"id\": 67}]"}
 54   | 68   | {"[c[7.32]{\"id\": 54},e[12.392][7.77,7.32]{\"id\": \"c:59->c:54\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.460][7.69,7.78]{\"id\": \"c:68->c:69\"},c[7.69]{\"id\": 68}]"}
 54   | 69   | {"[c[7.32]{\"id\": 54},e[12.392][7.77,7.32]{\"id\": \"c:59->c:54\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69}]"}
 55   | 61   | {"[c[7.41]{\"id\": 55},e[12.393][7.77,7.41]{\"id\": \"c:59->c:55\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.404][7.6,7.78]{\"id\": \"c:61->c:69\"},c[7.6]{\"id\": 61}]"}
 55   | 62   | {"[c[7.41]{\"id\": 55},e[12.393][7.77,7.41]{\"id\": \"c:59->c:55\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.412][7.15,7.78]{\"id\": \"c:62->c:69\"},c[7.15]{\"id\": 62}]"}
 55   | 63   | {"[c[7.41]{\"id\": 55},e[12.393][7.77,7.41]{\"id\": \"c:59->c:55\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.420][7.24,7.78]{\"id\": \"c:63->c:69\"},c[7.24]{\"id\": 63}]"}
 55   | 64   | {"[c[7.41]{\"id\": 55},e[12.393][7.77,7.41]{\"id\": \"c:59->c:55\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.428][7.33,7.78]{\"id\": \"c:64->c:69\"},c[7.33]{\"id\": 64}]"}
 55   | 65   | {"[c[7.41]{\"id\": 55},e[12.393][7.77,7.41]{\"id\": \"c:59->c:55\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.436][7.42,7.78]{\"id\": \"c:65->c:69\"},c[7.42]{\"id\": 65}]"}
 55   | 66   | {"[c[7.41]{\"id\": 55},e[12.393][7.77,7.41]{\"id\": \"c:59->c:55\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.444][7.51,7.78]{\"id\": \"c:66->c:69\"},c[7.51]{\"id\": 66}]"}
 55   | 67   | {"[c[7.41]{\"id\": 55},e[12.393][7.77,7.41]{\"id\": \"c:59->c:55\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.452][7.60,7.78]{\"id\": \"c:67->c:69\"},c[7.60]{\"id\": 67}]"}
 55   | 68   | {"[c[7.41]{\"id\": 55},e[12.393][7.77,7.41]{\"id\": \"c:59->c:55\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.460][7.69,7.78]{\"id\": \"c:68->c:69\"},c[7.69]{\"id\": 68}]"}
 55   | 69   | {"[c[7.41]{\"id\": 55},e[12.393][7.77,7.41]{\"id\": \"c:59->c:55\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69}]"}
 56   | 61   | {"[c[7.50]{\"id\": 56},e[12.394][7.77,7.50]{\"id\": \"c:59->c:56\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.404][7.6,7.78]{\"id\": \"c:61->c:69\"},c[7.6]{\"id\": 61}]"}
 56   | 62   | {"[c[7.50]{\"id\": 56},e[12.394][7.77,7.50]{\"id\": \"c:59->c:56\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.412][7.15,7.78]{\"id\": \"c:62->c:69\"},c[7.15]{\"id\": 62}]"}
 56   | 63   | {"[c[7.50]{\"id\": 56},e[12.394][7.77,7.50]{\"id\": \"c:59->c:56\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.420][7.24,7.78]{\"id\": \"c:63->c:69\"},c[7.24]{\"id\": 63}]"}
 56   | 64   | {"[c[7.50]{\"id\": 56},e[12.394][7.77,7.50]{\"id\": \"c:59->c:56\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.428][7.33,7.78]{\"id\": \"c:64->c:69\"},c[7.33]{\"id\": 64}]"}
 56   | 65   | {"[c[7.50]{\"id\": 56},e[12.394][7.77,7.50]{\"id\": \"c:59->c:56\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.436][7.42,7.78]{\"id\": \"c:65->c:69\"},c[7.42]{\"id\": 65}]"}
 56   | 66   | {"[c[7.50]{\"id\": 56},e[12.394][7.77,7.50]{\"id\": \"c:59->c:56\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.444][7.51,7.78]{\"id\": \"c:66->c:69\"},c[7.51]{\"id\": 66}]"}
 56   | 67   | {"[c[7.50]{\"id\": 56},e[12.394][7.77,7.50]{\"id\": \"c:59->c:56\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.452][7.60,7.78]{\"id\": \"c:67->c:69\"},c[7.60]{\"id\": 67}]"}
 56   | 68   | {"[c[7.50]{\"id\": 56},e[12.394][7.77,7.50]{\"id\": \"c:59->c:56\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.460][7.69,7.78]{\"id\": \"c:68->c:69\"},c[7.69]{\"id\": 68}]"}
 56   | 69   | {"[c[7.50]{\"id\": 56},e[12.394][7.77,7.50]{\"id\": \"c:59->c:56\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69}]"}
 57   | 61   | {"[c[7.59]{\"id\": 57},e[12.395][7.77,7.59]{\"id\": \"c:59->c:57\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.404][7.6,7.78]{\"id\": \"c:61->c:69\"},c[7.6]{\"id\": 61}]"}
 57   | 62   | {"[c[7.59]{\"id\": 57},e[12.395][7.77,7.59]{\"id\": \"c:59->c:57\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.412][7.15,7.78]{\"id\": \"c:62->c:69\"},c[7.15]{\"id\": 62}]"}
 57   | 63   | {"[c[7.59]{\"id\": 57},e[12.395][7.77,7.59]{\"id\": \"c:59->c:57\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.420][7.24,7.78]{\"id\": \"c:63->c:69\"},c[7.24]{\"id\": 63}]"}
 57   | 64   | {"[c[7.59]{\"id\": 57},e[12.395][7.77,7.59]{\"id\": \"c:59->c:57\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.428][7.33,7.78]{\"id\": \"c:64->c:69\"},c[7.33]{\"id\": 64}]"}
 57   | 65   | {"[c[7.59]{\"id\": 57},e[12.395][7.77,7.59]{\"id\": \"c:59->c:57\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.436][7.42,7.78]{\"id\": \"c:65->c:69\"},c[7.42]{\"id\": 65}]"}
 57   | 66   | {"[c[7.59]{\"id\": 57},e[12.395][7.77,7.59]{\"id\": \"c:59->c:57\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.444][7.51,7.78]{\"id\": \"c:66->c:69\"},c[7.51]{\"id\": 66}]"}
 57   | 67   | {"[c[7.59]{\"id\": 57},e[12.395][7.77,7.59]{\"id\": \"c:59->c:57\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.452][7.60,7.78]{\"id\": \"c:67->c:69\"},c[7.60]{\"id\": 67}]"}
 57   | 68   | {"[c[7.59]{\"id\": 57},e[12.395][7.77,7.59]{\"id\": \"c:59->c:57\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.460][7.69,7.78]{\"id\": \"c:68->c:69\"},c[7.69]{\"id\": 68}]"}
 57   | 69   | {"[c[7.59]{\"id\": 57},e[12.395][7.77,7.59]{\"id\": \"c:59->c:57\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69}]"}
 58   | 61   | {"[c[7.68]{\"id\": 58},e[12.396][7.77,7.68]{\"id\": \"c:59->c:58\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.404][7.6,7.78]{\"id\": \"c:61->c:69\"},c[7.6]{\"id\": 61}]"}
 58   | 62   | {"[c[7.68]{\"id\": 58},e[12.396][7.77,7.68]{\"id\": \"c:59->c:58\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.412][7.15,7.78]{\"id\": \"c:62->c:69\"},c[7.15]{\"id\": 62}]"}
 58   | 63   | {"[c[7.68]{\"id\": 58},e[12.396][7.77,7.68]{\"id\": \"c:59->c:58\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.420][7.24,7.78]{\"id\": \"c:63->c:69\"},c[7.24]{\"id\": 63}]"}
 58   | 64   | {"[c[7.68]{\"id\": 58},e[12.396][7.77,7.68]{\"id\": \"c:59->c:58\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.428][7.33,7.78]{\"id\": \"c:64->c:69\"},c[7.33]{\"id\": 64}]"}
 58   | 65   | {"[c[7.68]{\"id\": 58},e[12.396][7.77,7.68]{\"id\": \"c:59->c:58\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.436][7.42,7.78]{\"id\": \"c:65->c:69\"},c[7.42]{\"id\": 65}]"}
 58   | 66   | {"[c[7.68]{\"id\": 58},e[12.396][7.77,7.68]{\"id\": \"c:59->c:58\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.444][7.51,7.78]{\"id\": \"c:66->c:69\"},c[7.51]{\"id\": 66}]"}
 58   | 67   | {"[c[7.68]{\"id\": 58},e[12.396][7.77,7.68]{\"id\": \"c:59->c:58\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.452][7.60,7.78]{\"id\": \"c:67->c:69\"},c[7.60]{\"id\": 67}]"}
 58   | 68   | {"[c[7.68]{\"id\": 58},e[12.396][7.77,7.68]{\"id\": \"c:59->c:58\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.460][7.69,7.78]{\"id\": \"c:68->c:69\"},c[7.69]{\"id\": 68}]"}
 58   | 69   | {"[c[7.68]{\"id\": 58},e[12.396][7.77,7.68]{\"id\": \"c:59->c:58\"},c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69}]"}
 59   | 61   | {"[c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.404][7.6,7.78]{\"id\": \"c:61->c:69\"},c[7.6]{\"id\": 61}]"}
 59   | 62   | {"[c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.412][7.15,7.78]{\"id\": \"c:62->c:69\"},c[7.15]{\"id\": 62}]"}
 59   | 63   | {"[c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.420][7.24,7.78]{\"id\": \"c:63->c:69\"},c[7.24]{\"id\": 63}]"}
 59   | 64   | {"[c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.428][7.33,7.78]{\"id\": \"c:64->c:69\"},c[7.33]{\"id\": 64}]"}
 59   | 65   | {"[c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.436][7.42,7.78]{\"id\": \"c:65->c:69\"},c[7.42]{\"id\": 65}]"}
 59   | 66   | {"[c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.444][7.51,7.78]{\"id\": \"c:66->c:69\"},c[7.51]{\"id\": 66}]"}
 59   | 67   | {"[c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.452][7.60,7.78]{\"id\": \"c:67->c:69\"},c[7.60]{\"id\": 67}]"}
 59   | 68   | {"[c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69},e[12.460][7.69,7.78]{\"id\": \"c:68->c:69\"},c[7.69]{\"id\": 68}]"}
 59   | 69   | {"[c[7.77]{\"id\": 59},e[12.686][7.78,7.77]{\"id\": \"c:69->c59\"},c[7.78]{\"id\": 69}]"}
(81 rows)

match (c1:c), (c2:c) where c1.id >= 71 and c1.id <= 79 and c2.id >= 81 and c2.id <= 99 return c1.id as c1id, c2.id as c2id, allshortestpaths((c1)<-[:e*]-(c2)) order by c1id, c2id;
 c1id | c2id |                                                                                                                                          ?column?                                                                                                                                           
------+------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 71   | 81   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.548][7.8,7.80]{\"id\": \"c:81->c:89\"},c[7.8]{\"id\": 81}]"}
 71   | 82   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.556][7.17,7.80]{\"id\": \"c:82->c:89\"},c[7.17]{\"id\": 82}]"}
 71   | 83   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.564][7.26,7.80]{\"id\": \"c:83->c:89\"},c[7.26]{\"id\": 83}]"}
 71   | 84   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.572][7.35,7.80]{\"id\": \"c:84->c:89\"},c[7.35]{\"id\": 84}]"}
 71   | 85   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.580][7.44,7.80]{\"id\": \"c:85->c:89\"},c[7.44]{\"id\": 85}]"}
 71   | 86   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.588][7.53,7.80]{\"id\": \"c:86->c:89\"},c[7.53]{\"id\": 86}]"}
 71   | 87   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.596][7.62,7.80]{\"id\": \"c:87->c:89\"},c[7.62]{\"id\": 87}]"}
 71   | 88   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.604][7.71,7.80]{\"id\": \"c:88->c:89\"},c[7.71]{\"id\": 88}]"}
 71   | 89   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89}]"}
 71   | 91   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.620][7.9,7.81]{\"id\": \"c:91->c:99\"},c[7.9]{\"id\": 91}]"}
 71   | 92   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.628][7.18,7.81]{\"id\": \"c:92->c:99\"},c[7.18]{\"id\": 92}]"}
 71   | 93   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.636][7.27,7.81]{\"id\": \"c:93->c:99\"},c[7.27]{\"id\": 93}]"}
 71   | 94   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.644][7.36,7.81]{\"id\": \"c:94->c:99\"},c[7.36]{\"id\": 94}]"}
 71   | 95   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.652][7.45,7.81]{\"id\": \"c:95->c:99\"},c[7.45]{\"id\": 95}]"}
 71   | 96   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.660][7.54,7.81]{\"id\": \"c:96->c:99\"},c[7.54]{\"id\": 96}]"}
 71   | 97   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.668][7.63,7.81]{\"id\": \"c:97->c:99\"},c[7.63]{\"id\": 97}]"}
 71   | 98   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.676][7.72,7.81]{\"id\": \"c:98->c:99\"},c[7.72]{\"id\": 98}]"}
 71   | 99   | {"[c[7.7]{\"id\": 71},e[12.533][7.79,7.7]{\"id\": \"c:79->c:71\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99}]"}
 72   | 81   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.548][7.8,7.80]{\"id\": \"c:81->c:89\"},c[7.8]{\"id\": 81}]"}
 72   | 82   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.556][7.17,7.80]{\"id\": \"c:82->c:89\"},c[7.17]{\"id\": 82}]"}
 72   | 83   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.564][7.26,7.80]{\"id\": \"c:83->c:89\"},c[7.26]{\"id\": 83}]"}
 72   | 84   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.572][7.35,7.80]{\"id\": \"c:84->c:89\"},c[7.35]{\"id\": 84}]"}
 72   | 85   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.580][7.44,7.80]{\"id\": \"c:85->c:89\"},c[7.44]{\"id\": 85}]"}
 72   | 86   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.588][7.53,7.80]{\"id\": \"c:86->c:89\"},c[7.53]{\"id\": 86}]"}
 72   | 87   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.596][7.62,7.80]{\"id\": \"c:87->c:89\"},c[7.62]{\"id\": 87}]"}
 72   | 88   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.604][7.71,7.80]{\"id\": \"c:88->c:89\"},c[7.71]{\"id\": 88}]"}
 72   | 89   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89}]"}
 72   | 91   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.620][7.9,7.81]{\"id\": \"c:91->c:99\"},c[7.9]{\"id\": 91}]"}
 72   | 92   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.628][7.18,7.81]{\"id\": \"c:92->c:99\"},c[7.18]{\"id\": 92}]"}
 72   | 93   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.636][7.27,7.81]{\"id\": \"c:93->c:99\"},c[7.27]{\"id\": 93}]"}
 72   | 94   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.644][7.36,7.81]{\"id\": \"c:94->c:99\"},c[7.36]{\"id\": 94}]"}
 72   | 95   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.652][7.45,7.81]{\"id\": \"c:95->c:99\"},c[7.45]{\"id\": 95}]"}
 72   | 96   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.660][7.54,7.81]{\"id\": \"c:96->c:99\"},c[7.54]{\"id\": 96}]"}
 72   | 97   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.668][7.63,7.81]{\"id\": \"c:97->c:99\"},c[7.63]{\"id\": 97}]"}
 72   | 98   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.676][7.72,7.81]{\"id\": \"c:98->c:99\"},c[7.72]{\"id\": 98}]"}
 72   | 99   | {"[c[7.16]{\"id\": 72},e[12.534][7.79,7.16]{\"id\": \"c:79->c:72\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99}]"}
 73   | 81   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.548][7.8,7.80]{\"id\": \"c:81->c:89\"},c[7.8]{\"id\": 81}]"}
 73   | 82   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.556][7.17,7.80]{\"id\": \"c:82->c:89\"},c[7.17]{\"id\": 82}]"}
 73   | 83   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.564][7.26,7.80]{\"id\": \"c:83->c:89\"},c[7.26]{\"id\": 83}]"}
 73   | 84   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.572][7.35,7.80]{\"id\": \"c:84->c:89\"},c[7.35]{\"id\": 84}]"}
 73   | 85   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.580][7.44,7.80]{\"id\": \"c:85->c:89\"},c[7.44]{\"id\": 85}]"}
 73   | 86   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.588][7.53,7.80]{\"id\": \"c:86->c:89\"},c[7.53]{\"id\": 86}]"}
 73   | 87   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.596][7.62,7.80]{\"id\": \"c:87->c:89\"},c[7.62]{\"id\": 87}]"}
 73   | 88   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.604][7.71,7.80]{\"id\": \"c:88->c:89\"},c[7.71]{\"id\": 88}]"}
 73   | 89   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89}]"}
 73   | 91   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.620][7.9,7.81]{\"id\": \"c:91->c:99\"},c[7.9]{\"id\": 91}]"}
 73   | 92   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.628][7.18,7.81]{\"id\": \"c:92->c:99\"},c[7.18]{\"id\": 92}]"}
 73   | 93   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.636][7.27,7.81]{\"id\": \"c:93->c:99\"},c[7.27]{\"id\": 93}]"}
 73   | 94   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.644][7.36,7.81]{\"id\": \"c:94->c:99\"},c[7.36]{\"id\": 94}]"}
 73   | 95   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.652][7.45,7.81]{\"id\": \"c:95->c:99\"},c[7.45]{\"id\": 95}]"}
 73   | 96   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.660][7.54,7.81]{\"id\": \"c:96->c:99\"},c[7.54]{\"id\": 96}]"}
 73   | 97   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.668][7.63,7.81]{\"id\": \"c:97->c:99\"},c[7.63]{\"id\": 97}]"}
 73   | 98   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.676][7.72,7.81]{\"id\": \"c:98->c:99\"},c[7.72]{\"id\": 98}]"}
 73   | 99   | {"[c[7.25]{\"id\": 73},e[12.535][7.79,7.25]{\"id\": \"c:79->c:73\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99}]"}
 74   | 81   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.548][7.8,7.80]{\"id\": \"c:81->c:89\"},c[7.8]{\"id\": 81}]"}
 74   | 82   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.556][7.17,7.80]{\"id\": \"c:82->c:89\"},c[7.17]{\"id\": 82}]"}
 74   | 83   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.564][7.26,7.80]{\"id\": \"c:83->c:89\"},c[7.26]{\"id\": 83}]"}
 74   | 84   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.572][7.35,7.80]{\"id\": \"c:84->c:89\"},c[7.35]{\"id\": 84}]"}
 74   | 85   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.580][7.44,7.80]{\"id\": \"c:85->c:89\"},c[7.44]{\"id\": 85}]"}
 74   | 86   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.588][7.53,7.80]{\"id\": \"c:86->c:89\"},c[7.53]{\"id\": 86}]"}
 74   | 87   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.596][7.62,7.80]{\"id\": \"c:87->c:89\"},c[7.62]{\"id\": 87}]"}
 74   | 88   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.604][7.71,7.80]{\"id\": \"c:88->c:89\"},c[7.71]{\"id\": 88}]"}
 74   | 89   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89}]"}
 74   | 91   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.620][7.9,7.81]{\"id\": \"c:91->c:99\"},c[7.9]{\"id\": 91}]"}
 74   | 92   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.628][7.18,7.81]{\"id\": \"c:92->c:99\"},c[7.18]{\"id\": 92}]"}
 74   | 93   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.636][7.27,7.81]{\"id\": \"c:93->c:99\"},c[7.27]{\"id\": 93}]"}
 74   | 94   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.644][7.36,7.81]{\"id\": \"c:94->c:99\"},c[7.36]{\"id\": 94}]"}
 74   | 95   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.652][7.45,7.81]{\"id\": \"c:95->c:99\"},c[7.45]{\"id\": 95}]"}
 74   | 96   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.660][7.54,7.81]{\"id\": \"c:96->c:99\"},c[7.54]{\"id\": 96}]"}
 74   | 97   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.668][7.63,7.81]{\"id\": \"c:97->c:99\"},c[7.63]{\"id\": 97}]"}
 74   | 98   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.676][7.72,7.81]{\"id\": \"c:98->c:99\"},c[7.72]{\"id\": 98}]"}
 74   | 99   | {"[c[7.34]{\"id\": 74},e[12.536][7.79,7.34]{\"id\": \"c:79->c:74\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99}]"}
 75   | 81   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.548][7.8,7.80]{\"id\": \"c:81->c:89\"},c[7.8]{\"id\": 81}]"}
 75   | 82   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.556][7.17,7.80]{\"id\": \"c:82->c:89\"},c[7.17]{\"id\": 82}]"}
 75   | 83   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.564][7.26,7.80]{\"id\": \"c:83->c:89\"},c[7.26]{\"id\": 83}]"}
 75   | 84   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.572][7.35,7.80]{\"id\": \"c:84->c:89\"},c[7.35]{\"id\": 84}]"}
 75   | 85   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.580][7.44,7.80]{\"id\": \"c:85->c:89\"},c[7.44]{\"id\": 85}]"}
 75   | 86   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.588][7.53,7.80]{\"id\": \"c:86->c:89\"},c[7.53]{\"id\": 86}]"}
 75   | 87   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.596][7.62,7.80]{\"id\": \"c:87->c:89\"},c[7.62]{\"id\": 87}]"}
 75   | 88   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.604][7.71,7.80]{\"id\": \"c:88->c:89\"},c[7.71]{\"id\": 88}]"}
 75   | 89   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89}]"}
 75   | 91   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.620][7.9,7.81]{\"id\": \"c:91->c:99\"},c[7.9]{\"id\": 91}]"}
 75   | 92   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.628][7.18,7.81]{\"id\": \"c:92->c:99\"},c[7.18]{\"id\": 92}]"}
 75   | 93   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.636][7.27,7.81]{\"id\": \"c:93->c:99\"},c[7.27]{\"id\": 93}]"}
 75   | 94   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.644][7.36,7.81]{\"id\": \"c:94->c:99\"},c[7.36]{\"id\": 94}]"}
 75   | 95   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.652][7.45,7.81]{\"id\": \"c:95->c:99\"},c[7.45]{\"id\": 95}]"}
 75   | 96   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.660][7.54,7.81]{\"id\": \"c:96->c:99\"},c[7.54]{\"id\": 96}]"}
 75   | 97   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.668][7.63,7.81]{\"id\": \"c:97->c:99\"},c[7.63]{\"id\": 97}]"}
 75   | 98   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.676][7.72,7.81]{\"id\": \"c:98->c:99\"},c[7.72]{\"id\": 98}]"}
 75   | 99   | {"[c[7.43]{\"id\": 75},e[12.537][7.79,7.43]{\"id\": \"c:79->c:75\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99}]"}
 76   | 81   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.548][7.8,7.80]{\"id\": \"c:81->c:89\"},c[7.8]{\"id\": 81}]"}
 76   | 82   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.556][7.17,7.80]{\"id\": \"c:82->c:89\"},c[7.17]{\"id\": 82}]"}
 76   | 83   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.564][7.26,7.80]{\"id\": \"c:83->c:89\"},c[7.26]{\"id\": 83}]"}
 76   | 84   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.572][7.35,7.80]{\"id\": \"c:84->c:89\"},c[7.35]{\"id\": 84}]"}
 76   | 85   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.580][7.44,7.80]{\"id\": \"c:85->c:89\"},c[7.44]{\"id\": 85}]"}
 76   | 86   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.588][7.53,7.80]{\"id\": \"c:86->c:89\"},c[7.53]{\"id\": 86}]"}
 76   | 87   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.596][7.62,7.80]{\"id\": \"c:87->c:89\"},c[7.62]{\"id\": 87}]"}
 76   | 88   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.604][7.71,7.80]{\"id\": \"c:88->c:89\"},c[7.71]{\"id\": 88}]"}
 76   | 89   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89}]"}
 76   | 91   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.620][7.9,7.81]{\"id\": \"c:91->c:99\"},c[7.9]{\"id\": 91}]"}
 76   | 92   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.628][7.18,7.81]{\"id\": \"c:92->c:99\"},c[7.18]{\"id\": 92}]"}
 76   | 93   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.636][7.27,7.81]{\"id\": \"c:93->c:99\"},c[7.27]{\"id\": 93}]"}
 76   | 94   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.644][7.36,7.81]{\"id\": \"c:94->c:99\"},c[7.36]{\"id\": 94}]"}
 76   | 95   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.652][7.45,7.81]{\"id\": \"c:95->c:99\"},c[7.45]{\"id\": 95}]"}
 76   | 96   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.660][7.54,7.81]{\"id\": \"c:96->c:99\"},c[7.54]{\"id\": 96}]"}
 76   | 97   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.668][7.63,7.81]{\"id\": \"c:97->c:99\"},c[7.63]{\"id\": 97}]"}
 76   | 98   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.676][7.72,7.81]{\"id\": \"c:98->c:99\"},c[7.72]{\"id\": 98}]"}
 76   | 99   | {"[c[7.52]{\"id\": 76},e[12.538][7.79,7.52]{\"id\": \"c:79->c:76\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99}]"}
 77   | 81   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.548][7.8,7.80]{\"id\": \"c:81->c:89\"},c[7.8]{\"id\": 81}]"}
 77   | 82   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.556][7.17,7.80]{\"id\": \"c:82->c:89\"},c[7.17]{\"id\": 82}]"}
 77   | 83   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.564][7.26,7.80]{\"id\": \"c:83->c:89\"},c[7.26]{\"id\": 83}]"}
 77   | 84   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.572][7.35,7.80]{\"id\": \"c:84->c:89\"},c[7.35]{\"id\": 84}]"}
 77   | 85   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.580][7.44,7.80]{\"id\": \"c:85->c:89\"},c[7.44]{\"id\": 85}]"}
 77   | 86   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.588][7.53,7.80]{\"id\": \"c:86->c:89\"},c[7.53]{\"id\": 86}]"}
 77   | 87   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.596][7.62,7.80]{\"id\": \"c:87->c:89\"},c[7.62]{\"id\": 87}]"}
 77   | 88   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.604][7.71,7.80]{\"id\": \"c:88->c:89\"},c[7.71]{\"id\": 88}]"}
 77   | 89   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89}]"}
 77   | 91   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.620][7.9,7.81]{\"id\": \"c:91->c:99\"},c[7.9]{\"id\": 91}]"}
 77   | 92   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.628][7.18,7.81]{\"id\": \"c:92->c:99\"},c[7.18]{\"id\": 92}]"}
 77   | 93   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.636][7.27,7.81]{\"id\": \"c:93->c:99\"},c[7.27]{\"id\": 93}]"}
 77   | 94   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.644][7.36,7.81]{\"id\": \"c:94->c:99\"},c[7.36]{\"id\": 94}]"}
 77   | 95   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.652][7.45,7.81]{\"id\": \"c:95->c:99\"},c[7.45]{\"id\": 95}]"}
 77   | 96   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.660][7.54,7.81]{\"id\": \"c:96->c:99\"},c[7.54]{\"id\": 96}]"}
 77   | 97   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.668][7.63,7.81]{\"id\": \"c:97->c:99\"},c[7.63]{\"id\": 97}]"}
 77   | 98   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.676][7.72,7.81]{\"id\": \"c:98->c:99\"},c[7.72]{\"id\": 98}]"}
 77   | 99   | {"[c[7.61]{\"id\": 77},e[12.539][7.79,7.61]{\"id\": \"c:79->c:77\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99}]"}
 78   | 81   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.548][7.8,7.80]{\"id\": \"c:81->c:89\"},c[7.8]{\"id\": 81}]"}
 78   | 82   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.556][7.17,7.80]{\"id\": \"c:82->c:89\"},c[7.17]{\"id\": 82}]"}
 78   | 83   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.564][7.26,7.80]{\"id\": \"c:83->c:89\"},c[7.26]{\"id\": 83}]"}
 78   | 84   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.572][7.35,7.80]{\"id\": \"c:84->c:89\"},c[7.35]{\"id\": 84}]"}
 78   | 85   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.580][7.44,7.80]{\"id\": \"c:85->c:89\"},c[7.44]{\"id\": 85}]"}
 78   | 86   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.588][7.53,7.80]{\"id\": \"c:86->c:89\"},c[7.53]{\"id\": 86}]"}
 78   | 87   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.596][7.62,7.80]{\"id\": \"c:87->c:89\"},c[7.62]{\"id\": 87}]"}
 78   | 88   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.604][7.71,7.80]{\"id\": \"c:88->c:89\"},c[7.71]{\"id\": 88}]"}
 78   | 89   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89}]"}
 78   | 91   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.620][7.9,7.81]{\"id\": \"c:91->c:99\"},c[7.9]{\"id\": 91}]"}
 78   | 92   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.628][7.18,7.81]{\"id\": \"c:92->c:99\"},c[7.18]{\"id\": 92}]"}
 78   | 93   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.636][7.27,7.81]{\"id\": \"c:93->c:99\"},c[7.27]{\"id\": 93}]"}
 78   | 94   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.644][7.36,7.81]{\"id\": \"c:94->c:99\"},c[7.36]{\"id\": 94}]"}
 78   | 95   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.652][7.45,7.81]{\"id\": \"c:95->c:99\"},c[7.45]{\"id\": 95}]"}
 78   | 96   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.660][7.54,7.81]{\"id\": \"c:96->c:99\"},c[7.54]{\"id\": 96}]"}
 78   | 97   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.668][7.63,7.81]{\"id\": \"c:97->c:99\"},c[7.63]{\"id\": 97}]"}
 78   | 98   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.676][7.72,7.81]{\"id\": \"c:98->c:99\"},c[7.72]{\"id\": 98}]"}
 78   | 99   | {"[c[7.70]{\"id\": 78},e[12.540][7.79,7.70]{\"id\": \"c:79->c:78\"},c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99}]"}
 79   | 81   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.548][7.8,7.80]{\"id\": \"c:81->c:89\"},c[7.8]{\"id\": 81}]"}
 79   | 82   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.556][7.17,7.80]{\"id\": \"c:82->c:89\"},c[7.17]{\"id\": 82}]"}
 79   | 83   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.564][7.26,7.80]{\"id\": \"c:83->c:89\"},c[7.26]{\"id\": 83}]"}
 79   | 84   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.572][7.35,7.80]{\"id\": \"c:84->c:89\"},c[7.35]{\"id\": 84}]"}
 79   | 85   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.580][7.44,7.80]{\"id\": \"c:85->c:89\"},c[7.44]{\"id\": 85}]"}
 79   | 86   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.588][7.53,7.80]{\"id\": \"c:86->c:89\"},c[7.53]{\"id\": 86}]"}
 79   | 87   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.596][7.62,7.80]{\"id\": \"c:87->c:89\"},c[7.62]{\"id\": 87}]"}
 79   | 88   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89},e[12.604][7.71,7.80]{\"id\": \"c:88->c:89\"},c[7.71]{\"id\": 88}]"}
 79   | 89   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.688][7.80,7.81]{\"id\": \"c:89->c99\"},c[7.80]{\"id\": 89}]"}
 79   | 91   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.620][7.9,7.81]{\"id\": \"c:91->c:99\"},c[7.9]{\"id\": 91}]"}
 79   | 92   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.628][7.18,7.81]{\"id\": \"c:92->c:99\"},c[7.18]{\"id\": 92}]"}
 79   | 93   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.636][7.27,7.81]{\"id\": \"c:93->c:99\"},c[7.27]{\"id\": 93}]"}
 79   | 94   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.644][7.36,7.81]{\"id\": \"c:94->c:99\"},c[7.36]{\"id\": 94}]"}
 79   | 95   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.652][7.45,7.81]{\"id\": \"c:95->c:99\"},c[7.45]{\"id\": 95}]"}
 79   | 96   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.660][7.54,7.81]{\"id\": \"c:96->c:99\"},c[7.54]{\"id\": 96}]"}
 79   | 97   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.668][7.63,7.81]{\"id\": \"c:97->c:99\"},c[7.63]{\"id\": 97}]"}
 79   | 98   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99},e[12.676][7.72,7.81]{\"id\": \"c:98->c:99\"},c[7.72]{\"id\": 98}]"}
 79   | 99   | {"[c[7.79]{\"id\": 79},e[12.689][7.81,7.79]{\"id\": \"c:99->c79\"},c[7.81]{\"id\": 99}]"}
(162 rows)

match (c1:c), (c2:c) where c1.id >= 51 and c1.id <= 59 and c2.id >= 61 and c2.id <= 69 return c1.id as c1id, c2.id as c2id, size(allshortestpaths((c1)-[:e*]-(c2))) order by c1id, c2id;
 c1id | c2id | count 
------+------+-------
 51   | 61   | 8
 51   | 62   | 8
 51   | 63   | 8
 51   | 64   | 8
 51   | 65   | 8
 51   | 66   | 8
 51   | 67   | 8
 51   | 68   | 8
 51   | 69   | 4
 52   | 61   | 8
 52   | 62   | 8
 52   | 63   | 8
 52   | 64   | 8
 52   | 65   | 8
 52   | 66   | 8
 52   | 67   | 8
 52   | 68   | 8
 52   | 69   | 4
 53   | 61   | 8
 53   | 62   | 8
 53   | 63   | 8
 53   | 64   | 8
 53   | 65   | 8
 53   | 66   | 8
 53   | 67   | 8
 53   | 68   | 8
 53   | 69   | 4
 54   | 61   | 8
 54   | 62   | 8
 54   | 63   | 8
 54   | 64   | 8
 54   | 65   | 8
 54   | 66   | 8
 54   | 67   | 8
 54   | 68   | 8
 54   | 69   | 4
 55   | 61   | 8
 55   | 62   | 8
 55   | 63   | 8
 55   | 64   | 8
 55   | 65   | 8
 55   | 66   | 8
 55   | 67   | 8
 55   | 68   | 8
 55   | 69   | 4
 56   | 61   | 8
 56   | 62   | 8
 56   | 63   | 8
 56   | 64   | 8
 56   | 65   | 8
 56   | 66   | 8
 56   | 67   | 8
 56   | 68   | 8
 56   | 69   | 4
 57   | 61   | 8
 57   | 62   | 8
 57   | 63   | 8
 57   | 64   | 8
 57   | 65   | 8
 57   | 66   | 8
 57   | 67   | 8
 57   | 68   | 8
 57   | 69   | 4
 58   | 61   | 8
 58   | 62   | 8
 58   | 63   | 8
 58   | 64   | 8
 58   | 65   | 8
 58   | 66   | 8
 58   | 67   | 8
 58   | 68   | 8
 58   | 69   | 4
 59   | 61   | 4
 59   | 62   | 4
 59   | 63   | 4
 59   | 64   | 4
 59   | 65   | 4
 59   | 66   | 4
 59   | 67   | 4
 59   | 68   | 4
 59   | 69   | 2
(81 rows)

match (c1:c), (c2:c) where c1.id >= 71 and c1.id <= 79 and c2.id >= 81 and c2.id <= 99 return c1.id as c1id, c2.id as c2id, size(allshortestpaths((c1)-[:e*]-(c2))) order by c1id, c2id;
 c1id | c2id | count 
------+------+-------
 71   | 81   | 4
 71   | 82   | 4
 71   | 83   | 4
 71   | 84   | 4
 71   | 85   | 4
 71   | 86   | 4
 71   | 87   | 4
 71   | 88   | 4
 71   | 89   | 2
 71   | 91   | 4
 71   | 92   | 4
 71   | 93   | 4
 71   | 94   | 4
 71   | 95   | 4
 71   | 96   | 4
 71   | 97   | 4
 71   | 98   | 4
 71   | 99   | 2
 72   | 81   | 4
 72   | 82   | 4
 72   | 83   | 4
 72   | 84   | 4
 72   | 85   | 4
 72   | 86   | 4
 72   | 87   | 4
 72   | 88   | 4
 72   | 89   | 2
 72   | 91   | 4
 72   | 92   | 4
 72   | 93   | 4
 72   | 94   | 4
 72   | 95   | 4
 72   | 96   | 4
 72   | 97   | 4
 72   | 98   | 4
 72   | 99   | 2
 73   | 81   | 4
 73   | 82   | 4
 73   | 83   | 4
 73   | 84   | 4
 73   | 85   | 4
 73   | 86   | 4
 73   | 87   | 4
 73   | 88   | 4
 73   | 89   | 2
 73   | 91   | 4
 73   | 92   | 4
 73   | 93   | 4
 73   | 94   | 4
 73   | 95   | 4
 73   | 96   | 4
 73   | 97   | 4
 73   | 98   | 4
 73   | 99   | 2
 74   | 81   | 4
 74   | 82   | 4
 74   | 83   | 4
 74   | 84   | 4
 74   | 85   | 4
 74   | 86   | 4
 74   | 87   | 4
 74   | 88   | 4
 74   | 89   | 2
 74   | 91   | 4
 74   | 92   | 4
 74   | 93   | 4
 74   | 94   | 4
 74   | 95   | 4
 74   | 96   | 4
 74   | 97   | 4
 74   | 98   | 4
 74   | 99   | 2
 75   | 81   | 4
 75   | 82   | 4
 75   | 83   | 4
 75   | 84   | 4
 75   | 85   | 4
 75   | 86   | 4
 75   | 87   | 4
 75   | 88   | 4
 75   | 89   | 2
 75   | 91   | 4
 75   | 92   | 4
 75   | 93   | 4
 75   | 94   | 4
 75   | 95   | 4
 75   | 96   | 4
 75   | 97   | 4
 75   | 98   | 4
 75   | 99   | 2
 76   | 81   | 4
 76   | 82   | 4
 76   | 83   | 4
 76   | 84   | 4
 76   | 85   | 4
 76   | 86   | 4
 76   | 87   | 4
 76   | 88   | 4
 76   | 89   | 2
 76   | 91   | 4
 76   | 92   | 4
 76   | 93   | 4
 76   | 94   | 4
 76   | 95   | 4
 76   | 96   | 4
 76   | 97   | 4
 76   | 98   | 4
 76   | 99   | 2
 77   | 81   | 4
 77   | 82   | 4
 77   | 83   | 4
 77   | 84   | 4
 77   | 85   | 4
 77   | 86   | 4
 77   | 87   | 4
 77   | 88   | 4
 77   | 89   | 2
 77   | 91   | 4
 77   | 92   | 4
 77   | 93   | 4
 77   | 94   | 4
 77   | 95   | 4
 77   | 96   | 4
 77   | 97   | 4
 77   | 98   | 4
 77   | 99   | 2
 78   | 81   | 4
 78   | 82   | 4
 78   | 83   | 4
 78   | 84   | 4
 78   | 85   | 4
 78   | 86   | 4
 78   | 87   | 4
 78   | 88   | 4
 78   | 89   | 2
 78   | 91   | 4
 78   | 92   | 4
 78   | 93   | 4
 78   | 94   | 4
 78   | 95   | 4
 78   | 96   | 4
 78   | 97   | 4
 78   | 98   | 4
 78   | 99   | 2
 79   | 81   | 2
 79   | 82   | 2
 79   | 83   | 2
 79   | 84   | 2
 79   | 85   | 2
 79   | 86   | 2
 79   | 87   | 2
 79   | 88   | 2
 79   | 89   | 1
 79   | 91   | 2
 79   | 92   | 2
 79   | 93   | 2
 79   | 94   | 2
 79   | 95   | 2
 79   | 96   | 2
 79   | 97   | 2
 79   | 98   | 2
 79   | 99   | 1
(162 rows)

-- Spread
match (l1:l), (l2:l) where l1.id = 1 and l2.id = 11111 return l1.id as l1id, l2.id as l2id, allshortestpaths((l1)-[:e*]->(l2)) order by l1id, l2id;
 l1id | l2id  |                                                                                                                                                     ?column?                                                                                                                                                      
------+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1    | 11111 | {"[l[8.1]{\"id\": 1},e[12.690][8.1,8.10]{\"id\": \"l:1->l:11\"},l[8.10]{\"id\": 11},e[12.771][8.10,8.91]{\"id\": \"l:11->l:111\"},l[8.91]{\"id\": 111},e[12.1500][8.91,8.820]{\"id\": \"l:111->l:1111\"},l[8.820]{\"id\": 1111},e[12.8061][8.820,8.7381]{\"id\": \"l:1111->l:11111\"},l[8.7381]{\"id\": 11111}]"}
(1 row)

match (l1:l), (l2:l) where l1.id = 1 and l2.id = 11111 return l1.id as l1id, l2.id as l2id, allshortestpaths((l1)<-[:e*]-(l2)) order by l1id, l2id;
 l1id | l2id  | ?column? 
------+-------+----------
 1    | 11111 | 
(1 row)

match (l1:l), (l2:l) where l1.id = 1 and l2.id = 11111 return l1.id as l1id, l2.id as l2id, allshortestpaths((l1)-[:e*]-(l2)) order by l1id, l2id;
 l1id | l2id  |                                                                                                                                                     ?column?                                                                                                                                                      
------+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1    | 11111 | {"[l[8.1]{\"id\": 1},e[12.690][8.1,8.10]{\"id\": \"l:1->l:11\"},l[8.10]{\"id\": 11},e[12.771][8.10,8.91]{\"id\": \"l:11->l:111\"},l[8.91]{\"id\": 111},e[12.1500][8.91,8.820]{\"id\": \"l:111->l:1111\"},l[8.820]{\"id\": 1111},e[12.8061][8.820,8.7381]{\"id\": \"l:1111->l:11111\"},l[8.7381]{\"id\": 11111}]"}
(1 row)

match (l1:l), (l2:l) where l1.id = 1 and l2.id = 11111 return l1.id as l1id, l2.id as l2id, allshortestpaths((l2)<-[:e*]-(l1)) order by l1id, l2id;
 l1id | l2id  |                                                                                                                                                     ?column?                                                                                                                                                      
------+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1    | 11111 | {"[l[8.7381]{\"id\": 11111},e[12.8061][8.820,8.7381]{\"id\": \"l:1111->l:11111\"},l[8.820]{\"id\": 1111},e[12.1500][8.91,8.820]{\"id\": \"l:111->l:1111\"},l[8.91]{\"id\": 111},e[12.771][8.10,8.91]{\"id\": \"l:11->l:111\"},l[8.10]{\"id\": 11},e[12.690][8.1,8.10]{\"id\": \"l:1->l:11\"},l[8.1]{\"id\": 1}]"}
(1 row)

match (l1:l), (l2:l) where l1.id = 1 and l2.id = 11111 return l1.id as l1id, l2.id as l2id, allshortestpaths((l2)-[:e*]->(l1)) order by l1id, l2id;
 l1id | l2id  | ?column? 
------+-------+----------
 1    | 11111 | 
(1 row)

match (l1:l), (l2:l) where l1.id = 1 and l2.id = 11111 return l1.id as l1id, l2.id as l2id, allshortestpaths((l2)-[:e*]-(l1)) order by l1id, l2id;
 l1id | l2id  |                                                                                                                                                     ?column?                                                                                                                                                      
------+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1    | 11111 | {"[l[8.7381]{\"id\": 11111},e[12.8061][8.820,8.7381]{\"id\": \"l:1111->l:11111\"},l[8.820]{\"id\": 1111},e[12.1500][8.91,8.820]{\"id\": \"l:111->l:1111\"},l[8.91]{\"id\": 111},e[12.771][8.10,8.91]{\"id\": \"l:11->l:111\"},l[8.10]{\"id\": 11},e[12.690][8.1,8.10]{\"id\": \"l:1->l:11\"},l[8.1]{\"id\": 1}]"}
(1 row)

-- Convergence
match (r1:r), (r2:r) where r1.id = 1 and r2.id = 11111 return r1.id as r1id, r2.id as r2id, allshortestpaths((r1)-[:e*]->(r2)) order by r1id, r2id;
 r1id | r2id  | ?column? 
------+-------+----------
 1    | 11111 | 
(1 row)

match (r1:r), (r2:r) where r1.id = 1 and r2.id = 11111 return r1.id as r1id, r2.id as r2id, allshortestpaths((r1)<-[:e*]-(r2)) order by r1id, r2id;
 r1id | r2id  |                                                                                                                                                        ?column?                                                                                                                                                         
------+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1    | 11111 | {"[r[9.1]{\"id\": 1},e[12.67110][9.10,9.1]{\"id\": \"r:11->r:1\"},r[9.10]{\"id\": 11},e[12.67191][9.91,9.10]{\"id\": \"r:111->r:11\"},r[9.91]{\"id\": 111},e[12.67920][9.820,9.91]{\"id\": \"r:1111->r:111\"},r[9.820]{\"id\": 1111},e[12.74481][9.7381,9.820]{\"id\": \"r:11111->r:1111\"},r[9.7381]{\"id\": 11111}]"}
(1 row)

match (r1:r), (r2:r) where r1.id = 1 and r2.id = 11111 return r1.id as r1id, r2.id as r2id, allshortestpaths((r1)-[:e*]-(r2)) order by r1id, r2id;
 r1id | r2id  |                                                                                                                                                        ?column?                                                                                                                                                         
------+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1    | 11111 | {"[r[9.1]{\"id\": 1},e[12.67110][9.10,9.1]{\"id\": \"r:11->r:1\"},r[9.10]{\"id\": 11},e[12.67191][9.91,9.10]{\"id\": \"r:111->r:11\"},r[9.91]{\"id\": 111},e[12.67920][9.820,9.91]{\"id\": \"r:1111->r:111\"},r[9.820]{\"id\": 1111},e[12.74481][9.7381,9.820]{\"id\": \"r:11111->r:1111\"},r[9.7381]{\"id\": 11111}]"}
(1 row)

match (r1:r), (r2:r) where r1.id = 1 and r2.id = 11111 return r1.id as r1id, r2.id as r2id, allshortestpaths((r2)<-[:e*]-(r1)) order by r1id, r2id;
 r1id | r2id  | ?column? 
------+-------+----------
 1    | 11111 | 
(1 row)

match (r1:r), (r2:r) where r1.id = 1 and r2.id = 11111 return r1.id as r1id, r2.id as r2id, allshortestpaths((r2)-[:e*]->(r1)) order by r1id, r2id;
 r1id | r2id  |                                                                                                                                                        ?column?                                                                                                                                                         
------+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1    | 11111 | {"[r[9.7381]{\"id\": 11111},e[12.74481][9.7381,9.820]{\"id\": \"r:11111->r:1111\"},r[9.820]{\"id\": 1111},e[12.67920][9.820,9.91]{\"id\": \"r:1111->r:111\"},r[9.91]{\"id\": 111},e[12.67191][9.91,9.10]{\"id\": \"r:111->r:11\"},r[9.10]{\"id\": 11},e[12.67110][9.10,9.1]{\"id\": \"r:11->r:1\"},r[9.1]{\"id\": 1}]"}
(1 row)

match (r1:r), (r2:r) where r1.id = 1 and r2.id = 11111 return r1.id as r1id, r2.id as r2id, allshortestpaths((r2)-[:e*]-(r1)) order by r1id, r2id;
 r1id | r2id  |                                                                                                                                                        ?column?                                                                                                                                                         
------+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1    | 11111 | {"[r[9.7381]{\"id\": 11111},e[12.74481][9.7381,9.820]{\"id\": \"r:11111->r:1111\"},r[9.820]{\"id\": 1111},e[12.67920][9.820,9.91]{\"id\": \"r:1111->r:111\"},r[9.91]{\"id\": 111},e[12.67191][9.91,9.10]{\"id\": \"r:111->r:11\"},r[9.10]{\"id\": 11},e[12.67110][9.10,9.1]{\"id\": \"r:11->r:1\"},r[9.1]{\"id\": 1}]"}
(1 row)

-- Vibration
match p = allshortestpaths( (l1:l)-[:e*]->(r2:r) ) where l1.id = 8 and r2.id = 8 return l1.id as l1id, r2.id as r2id, count(p) order by l1id, r2id;
 l1id | r2id | count 
------+------+-------
 8    | 8    | 6561
(1 row)

match p = allshortestpaths( (l1:l)<-[:e*]-(r2:r) ) where l1.id = 8 and r2.id = 8 return l1.id as l1id, r2.id as r2id, count(p) order by l1id, r2id;
 l1id | r2id | count 
------+------+-------
(0 rows)

match p = allshortestpaths( (l1:l)-[:e*]-(r2:r) ) where l1.id = 8 and r2.id = 8 return l1.id as l1id, r2.id as r2id, count(p) order by l1id, r2id;
 l1id | r2id | count 
------+------+-------
 8    | 8    | 6561
(1 row)

match p = allshortestpaths( (r1:l)-[:e*]->(l2:r) ) where r1.id = 88888 and l2.id = 99999 return r1.id as r1id, l2.id as l2id, count(p) order by r1id, l2id;
 r1id  | l2id  | count 
-------+-------+-------
 88888 | 99999 | 1
(1 row)

match p = allshortestpaths( (r1:l)<-[:e*]-(l2:r) ) where r1.id = 88888 and l2.id = 99999 return r1.id as r1id, l2.id as l2id, count(p) order by r1id, l2id;
 r1id | l2id | count 
------+------+-------
(0 rows)

match p = allshortestpaths( (r1:l)-[:e*]-(l2:r) ) where r1.id = 88888 and l2.id = 99999 return r1.id as r1id, l2.id as l2id, count(p) order by r1id, l2id;
 r1id  | l2id  | count 
-------+-------+-------
 88888 | 99999 | 1
(1 row)

match p = allshortestpaths( (l1:l)-[:e*]->(r2:r) ) where l1.id = 888 and r2.id = 999 return l1.id as l1id, r2.id as r2id, count(p) order by l1id, r2id;
 l1id | r2id | count 
------+------+-------
 888  | 999  | 6561
(1 row)

match p = allshortestpaths( (l1:l)<-[:e*]-(r2:r) ) where l1.id = 888 and r2.id = 999 return l1.id as l1id, r2.id as r2id, count(p) order by l1id, r2id;
 l1id | r2id | count 
------+------+-------
(0 rows)

match p = allshortestpaths( (l1:l)-[:e*]-(r2:r) ) where l1.id = 888 and r2.id = 999 return l1.id as l1id, r2.id as r2id, count(p) order by l1id, r2id;
 l1id | r2id | count 
------+------+-------
 888  | 999  | 6561
(1 row)

-- Filter
match p = shortestpath( (:o)-[:e]->(:o) ) return p;
ERROR:  node must be a reference to a specific node
match p = shortestpath( (o1:o)-[:e]->(o2:o) ) return o1, o2, p;
 o1 | o2 | p 
----+----+---
(0 rows)

match p = shortestpath( (o1:o)-[:e]->(o2:o) ) where o1.id = 1 return o1, o2, p;
 o1 | o2 | p 
----+----+---
(0 rows)

match p = shortestpath( (o1:o)-[:e]->(o2:o) ) where o2.id = 1 return o1, o2, p;
 o1 | o2 | p 
----+----+---
(0 rows)

match (o1:o{id:1}), (o2:o{id:1}) match p = shortestpath( (o1)-[:e]->(o2) ) return o1, o2, p;
 o1 | o2 | p 
----+----+---
(0 rows)

match (o1:o), (o2:o) match p = shortestpath( (o1)-[:e]->(o2) ) where o1.id = 1 and o2.id = 1 return o1, o2, p;
 o1 | o2 | p 
----+----+---
(0 rows)

-- Inherit
match p = shortestpath( (p1:vp)-[:ep]->(p2:vp) ) return p1, p2, p;
        p1        |        p2        |                            p                            
------------------+------------------+---------------------------------------------------------
 vc[4.1]{"id": 1} | vc[4.2]{"id": 2} | [vc[4.1]{"id": 1},ec[11.1][4.1,4.2]{},vc[4.2]{"id": 2}]
(1 row)

match p = shortestpath( (p1:vp only)-[:ep only]->(p2:vp only) ) return p1, p2, p;
 p1 | p2 | p 
----+----+---
(0 rows)

match p = shortestpath( (p1:vc only)-[:ec only]->(p2:vc only) ) return p1, p2, p;
        p1        |        p2        |                            p                            
------------------+------------------+---------------------------------------------------------
 vc[4.1]{"id": 1} | vc[4.2]{"id": 2} | [vc[4.1]{"id": 1},ec[11.1][4.1,4.2]{},vc[4.2]{"id": 2}]
(1 row)

match p = shortestpath( (p1:vp only)-[:ep]->(p2:vp only) ) return p1, p2, p;
 p1 | p2 | p 
----+----+---
(0 rows)

match p = shortestpath( (p1:vc only)-[:ep]->(p2:vc only) ) return p1, p2, p;
        p1        |        p2        |                            p                            
------------------+------------------+---------------------------------------------------------
 vc[4.1]{"id": 1} | vc[4.2]{"id": 2} | [vc[4.1]{"id": 1},ec[11.1][4.1,4.2]{},vc[4.2]{"id": 2}]
(1 row)

match p = shortestpath( (p1:vp)-[:ep only]->(p2:vp) ) return p1, p2, p;
 p1 | p2 | p 
----+----+---
(0 rows)

match p = shortestpath( (p1:vp)-[:ec only]->(p2:vp) ) return p1, p2, p;
        p1        |        p2        |                            p                            
------------------+------------------+---------------------------------------------------------
 vc[4.1]{"id": 1} | vc[4.2]{"id": 2} | [vc[4.1]{"id": 1},ec[11.1][4.1,4.2]{},vc[4.2]{"id": 2}]
(1 row)

-- Property Constraint
match p = shortestpath( (s1:s{id:1})-[:e]->(s2:s{id:2}) ) return p;
                                  p                                   
----------------------------------------------------------------------
 [s[6.1]{"id": 1},e[12.1][6.1,6.2]{"id": "s:1->s:2"},s[6.2]{"id": 2}]
(1 row)

match (s1:s), (s2:s) match p = shortestpath( (s1{id:1})-[:e]->(s2{id:2}) ) return p;
                                  p                                   
----------------------------------------------------------------------
 [s[6.1]{"id": 1},e[12.1][6.1,6.2]{"id": "s:1->s:2"},s[6.2]{"id": 2}]
(1 row)

-- Edge Reference
match p = shortestpath( (s1:s{id:1})-[e:e*]->(s2:s{id:19}) ) return ids(nodes(p)) as p, e;
                         p                         |                                                                                                                                                                                                                                                                                                                                                   e                                                                                                                                                                                                                                                                                                                                                    

 {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} | [e[12.1][6.1,6.2]{"id": "s:1->s:2"},e[12.2][6.2,6.3]{"id": "s:2->s:3"},e[12.3][6.3,6.4]{"id": "s:3->s:4"},e[12.4][6.4,6.5]{"id": "s:4->s:5"},e[12.5][6.5,6.6]{"id": "s:5->s:6"},e[12.6][6.6,6.7]{"id": "s:6->s:7"},e[12.7][6.7,6.8]{"id": "s:7->s:8"},e[12.8][6.8,6.9]{"id": "s:8->s:9"},e[12.9][6.9,6.10]{"id": "s:9->s:10"},e[12.10][6.10,6.11]{"id": "s:10->s:11"},e[12.11][6.11,6.12]{"id": "s:11->s:12"},e[12.12][6.12,6.13]{"id": "s:12->s:13"},e[12.13][6.13,6.14]{"id": "s:13->s:14"},e[12.14][6.14,6.15]{"id": "s:14->s:15"},e[12.15][6.15,6.16]{"id": "s:15->s:16"},e[12.16][6.16,6.17]{"id": "s:16->s:17"},e[12.17][6.17,6.18]{"id": "s:17->s:18"},e[12.18][6.18,6.19]{"id": "s:18->s:19"}]
(1 row)

-- No Path Variable
match shortestpath( (s1:s{id:1})-[:e*]->(s2:s{id:19}) ) return s1.id, s2.id;
 id | id 
----+----
 1  | 19
(1 row)

match shortestpath( (s1:s{id:1})-[e:e*]->(s2:s{id:19}) ) return s1.id, s2.id, e;
 id | id |                                                                                                                                                                                                                                                                                                                                                   e                                                                                                                                                                                                                                                                                                                                                    

 1  | 19 | [e[12.1][6.1,6.2]{"id": "s:1->s:2"},e[12.2][6.2,6.3]{"id": "s:2->s:3"},e[12.3][6.3,6.4]{"id": "s:3->s:4"},e[12.4][6.4,6.5]{"id": "s:4->s:5"},e[12.5][6.5,6.6]{"id": "s:5->s:6"},e[12.6][6.6,6.7]{"id": "s:6->s:7"},e[12.7][6.7,6.8]{"id": "s:7->s:8"},e[12.8][6.8,6.9]{"id": "s:8->s:9"},e[12.9][6.9,6.10]{"id": "s:9->s:10"},e[12.10][6.10,6.11]{"id": "s:10->s:11"},e[12.11][6.11,6.12]{"id": "s:11->s:12"},e[12.12][6.12,6.13]{"id": "s:12->s:13"},e[12.13][6.13,6.14]{"id": "s:13->s:14"},e[12.14][6.14,6.15]{"id": "s:14->s:15"},e[12.15][6.15,6.16]{"id": "s:15->s:16"},e[12.16][6.16,6.17]{"id": "s:16->s:17"},e[12.17][6.17,6.18]{"id": "s:17->s:18"},e[12.18][6.18,6.19]{"id": "s:18->s:19"}]
(1 row)

-- Failure
match p = shortestpath( (:o) ) return p;
ERROR:  only one relationship is allowed
LINE 1: match p = shortestpath( (:o) ) return p;
                                ^
match p = shortestpath( ()-[:e]->() ) return p;
ERROR:  node must be a reference to a specific node
match p = shortestpath( (:o)-[:e]->(:o)-[:e]->(:o) ) return p;
ERROR:  only one relationship is allowed
LINE 1: match p = shortestpath( (:o)-[:e]->(:o)-[:e]->(:o) ) return ...
                                ^
match p = shortestpath( (:o{id:1})-[:e]->(:o{id:1}) ) return p;
ERROR:  node must be a reference to a specific node
match p = shortestpath( (o1:o)-[:e{id:1}]->(o1:o) ) return p;
ERROR:  property constraint is not supported
match p = shortestpath( (:o)-[r:e]->(:o) ) return p;
ERROR:  node must be a reference to a specific node
match (o1:o{id:1}), (o2:o{id:1}) match p = shortestpath( (o1)-[:e*-1]->(o2) ) return p;
ERROR:  syntax error at or near "-"
LINE 1: ...}), (o2:o{id:1}) match p = shortestpath( (o1)-[:e*-1]->(o2) ...
                                                             ^
match (o1:o{id:1}), (o2:o{id:1}) match p = shortestpath( (o1)-[:e*-1..]->(o2) ) return p;
ERROR:  syntax error at or near "-"
LINE 1: ...}), (o2:o{id:1}) match p = shortestpath( (o1)-[:e*-1..]->(o2...
                                                             ^
match (o1:o{id:1}), (o2:o{id:1}) match p = shortestpath( (o1)-[:e*2..]->(o2) ) return p;
ERROR:  only 0 or 1 is allowed for minimal length
LINE 1: ...}), (o2:o{id:1}) match p = shortestpath( (o1)-[:e*2..]->(o2)...
                                                             ^
match (o1:o{id:1}), (o2:o{id:1}) match p = shortestpath( (o1)-[:e*..0]->(o2) ) return p;
ERROR:  invalid range
match (o1:o{id:1}), (o2:o{id:1}) match p = shortestpath( (o1)-[:e*..-1]->(o2) ) return p;
ERROR:  syntax error at or near "-"
LINE 1: ..., (o2:o{id:1}) match p = shortestpath( (o1)-[:e*..-1]->(o2) ...
                                                             ^
match (o1:o{id:1}), (o2:o{id:1}) return shortestpath( (o1{id:1})-[:e]->(o2{id:1}) );
ERROR:  property constraint is not supported
LINE 1: ... (o1:o{id:1}), (o2:o{id:1}) return shortestpath( (o1{id:1})-...
                                                             ^
match (o1:o{id:1})-[e:e]->(o2:o{id:1}) match p = shortestpath( (o1)-[e:e*]->(o2) ) return p;
ERROR:  bound variable to edge not allowed in shortestpath
LINE 1: ...[e:e]->(o2:o{id:1}) match p = shortestpath( (o1)-[e:e*]->(o2...
                                                             ^
match (o1:o{id:1}), (o2:o{id:1}) return shortestpath( (o1)-[e:e*]->(o2) );
ERROR:  variable is not supported
LINE 1: ...o{id:1}), (o2:o{id:1}) return shortestpath( (o1)-[e:e*]->(o2...
                                                             ^
-- Plan
SET enable_bitmapscan to off;
SET enable_material to off;
explain ( analyze false, verbose true, costs false, buffers false, timing false )
match p = shortestpath( (o1:o)-[:e]->(o2:o) ) where o1.id = 1 and o2.id = 1 return p;
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Nested Loop
   Output: ROW((SubPlan 2), COALESCE((SubPlan 4), '[]'::edge[]))::graphpath
   ->  Nested Loop
         Output: o1.id, o1.properties, o1.ctid, o2.id, o2.properties, o2.ctid
         ->  Seq Scan on shortestpath.o o1
               Output: o1.id, o1.properties, o1.ctid
               Filter: (o1.properties.'id'::text = '1'::jsonb)
         ->  Seq Scan on shortestpath.o o2
               Output: o2.id, o2.properties, o2.ctid
               Filter: (o2.properties.'id'::text = '1'::jsonb)
   ->  Shortestpath VLE [1..1]
         Output: shortestpath_graphids(), shortestpath_rowids()
         Hash Cond: (e."end" = e_1.start)
         ->  Hash2Side
               Output: e."end", e.tableoid, e.ctid
               ->  Index Scan using e_start_idx on shortestpath.e
                     Output: e."end", e.tableoid, e.ctid
                     Index Cond: (e.start = o1.id)
         ->  Hash2Side
               Output: e_1.start, e_1.tableoid, e_1.ctid
               ->  Index Scan using e_end_idx on shortestpath.e e_1
                     Output: e_1.start, e_1.tableoid, e_1.ctid
                     Index Cond: (e_1."end" = o2.id)
   SubPlan 2
     ->  Aggregate
           Output: array_agg((SubPlan 1))
           ->  Function Scan on pg_catalog.unnest vid
                 Output: vid.vid
                 Function Call: unnest((shortestpath_graphids()))
           SubPlan 1
             ->  Result
                   Output: ROW(ag_vertex.id, ag_vertex.properties, ag_vertex.ctid)::vertex
                   ->  Append
                         ->  Seq Scan on shortestpath.ag_vertex ag_vertex_1
                               Output: ag_vertex_1.id, ag_vertex_1.properties, ag_vertex_1.ctid
                               Filter: (ag_vertex_1.id = vid.vid)
                         ->  Seq Scan on shortestpath.vp ag_vertex_2
                               Output: ag_vertex_2.id, ag_vertex_2.properties, ag_vertex_2.ctid
                               Filter: (ag_vertex_2.id = vid.vid)
                         ->  Seq Scan on shortestpath.o ag_vertex_3
                               Output: ag_vertex_3.id, ag_vertex_3.properties, ag_vertex_3.ctid
                               Filter: (ag_vertex_3.id = vid.vid)
                         ->  Seq Scan on shortestpath.s ag_vertex_4
                               Output: ag_vertex_4.id, ag_vertex_4.properties, ag_vertex_4.ctid
                               Filter: (ag_vertex_4.id = vid.vid)
                         ->  Seq Scan on shortestpath.c ag_vertex_5
                               Output: ag_vertex_5.id, ag_vertex_5.properties, ag_vertex_5.ctid
                               Filter: (ag_vertex_5.id = vid.vid)
                         ->  Index Scan using l_pkey on shortestpath.l ag_vertex_6
                               Output: ag_vertex_6.id, ag_vertex_6.properties, ag_vertex_6.ctid
                               Index Cond: (ag_vertex_6.id = vid.vid)
                         ->  Index Scan using r_pkey on shortestpath.r ag_vertex_7
                               Output: ag_vertex_7.id, ag_vertex_7.properties, ag_vertex_7.ctid
                               Index Cond: (ag_vertex_7.id = vid.vid)
                         ->  Seq Scan on shortestpath.vc ag_vertex_8
                               Output: ag_vertex_8.id, ag_vertex_8.properties, ag_vertex_8.ctid
                               Filter: (ag_vertex_8.id = vid.vid)
   SubPlan 4
     ->  Aggregate
           Output: array_agg((SubPlan 3))
           ->  Function Scan on pg_catalog.unnest eid
                 Output: eid.eid
                 Function Call: unnest((shortestpath_rowids()))
           SubPlan 3
             ->  Tid Scan on shortestpath.e e_2
                   Output: ROW(e_2.id, e_2.start, e_2."end", e_2.properties, e_2.ctid)::edge
                   TID Cond: (e_2.ctid = rowid_ctid(eid.eid))
                   Filter: (e_2.tableoid = rowid_tableoid(eid.eid))
(68 rows)

explain ( analyze false, verbose true, costs false, buffers false, timing false )
match p = allshortestpaths( (o1:o)-[:e*0..]->(o2:o) ) where o1.id = 1 and o1.id = 1 return p;
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Nested Loop
   Output: ROW((SubPlan 2), COALESCE((SubPlan 4), '[]'::edge[]))::graphpath
   ->  Seq Scan on shortestpath.o o1
         Output: o1.id, o1.properties, o1.ctid
         Filter: (o1.properties.'id'::text = '1'::jsonb)
   ->  Nested Loop
         Output: (shortestpath_graphids()), (shortestpath_rowids())
         ->  Seq Scan on shortestpath.o o2
               Output: o2.id, o2.properties, o2.ctid
         ->  All Shortestpaths VLE [0..]
               Output: shortestpath_graphids(), shortestpath_rowids()
               Hash Cond: (e."end" = e_1.start)
               ->  Hash2Side
                     Output: e."end", e.tableoid, e.ctid
                     ->  Index Scan using e_start_idx on shortestpath.e
                           Output: e."end", e.tableoid, e.ctid
                           Index Cond: (e.start = o1.id)
               ->  Hash2Side
                     Output: e_1.start, e_1.tableoid, e_1.ctid
                     ->  Index Scan using e_end_idx on shortestpath.e e_1
                           Output: e_1.start, e_1.tableoid, e_1.ctid
                           Index Cond: (e_1."end" = o2.id)
   SubPlan 2
     ->  Aggregate
           Output: array_agg((SubPlan 1))
           ->  Function Scan on pg_catalog.unnest vid
                 Output: vid.vid
                 Function Call: unnest((shortestpath_graphids()))
           SubPlan 1
             ->  Result
                   Output: ROW(ag_vertex.id, ag_vertex.properties, ag_vertex.ctid)::vertex
                   ->  Append
                         ->  Seq Scan on shortestpath.ag_vertex ag_vertex_1
                               Output: ag_vertex_1.id, ag_vertex_1.properties, ag_vertex_1.ctid
                               Filter: (ag_vertex_1.id = vid.vid)
                         ->  Seq Scan on shortestpath.vp ag_vertex_2
                               Output: ag_vertex_2.id, ag_vertex_2.properties, ag_vertex_2.ctid
                               Filter: (ag_vertex_2.id = vid.vid)
                         ->  Seq Scan on shortestpath.o ag_vertex_3
                               Output: ag_vertex_3.id, ag_vertex_3.properties, ag_vertex_3.ctid
                               Filter: (ag_vertex_3.id = vid.vid)
                         ->  Seq Scan on shortestpath.s ag_vertex_4
                               Output: ag_vertex_4.id, ag_vertex_4.properties, ag_vertex_4.ctid
                               Filter: (ag_vertex_4.id = vid.vid)
                         ->  Seq Scan on shortestpath.c ag_vertex_5
                               Output: ag_vertex_5.id, ag_vertex_5.properties, ag_vertex_5.ctid
                               Filter: (ag_vertex_5.id = vid.vid)
                         ->  Index Scan using l_pkey on shortestpath.l ag_vertex_6
                               Output: ag_vertex_6.id, ag_vertex_6.properties, ag_vertex_6.ctid
                               Index Cond: (ag_vertex_6.id = vid.vid)
                         ->  Index Scan using r_pkey on shortestpath.r ag_vertex_7
                               Output: ag_vertex_7.id, ag_vertex_7.properties, ag_vertex_7.ctid
                               Index Cond: (ag_vertex_7.id = vid.vid)
                         ->  Seq Scan on shortestpath.vc ag_vertex_8
                               Output: ag_vertex_8.id, ag_vertex_8.properties, ag_vertex_8.ctid
                               Filter: (ag_vertex_8.id = vid.vid)
   SubPlan 4
     ->  Aggregate
           Output: array_agg((SubPlan 3))
           ->  Function Scan on pg_catalog.unnest eid
                 Output: eid.eid
                 Function Call: unnest((shortestpath_rowids()))
           SubPlan 3
             ->  Tid Scan on shortestpath.e e_2
                   Output: ROW(e_2.id, e_2.start, e_2."end", e_2.properties, e_2.ctid)::edge
                   TID Cond: (e_2.ctid = rowid_ctid(eid.eid))
                   Filter: (e_2.tableoid = rowid_tableoid(eid.eid))
(67 rows)

explain ( analyze false, verbose true, costs false, buffers false, timing false )
match (o1:o{id:1}), (o2:o{id:1}) match p = shortestpath( (o1)-[:e]->(o2) ) return o1, o2, p;
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop
   Output: ROW(o1.id, o1.properties, o1.ctid)::vertex, ROW(o2.id, o2.properties, o2.ctid)::vertex, ROW((SubPlan 2), COALESCE((SubPlan 4), '[]'::edge[]))::graphpath
   ->  Nested Loop
         Output: o1.id, o1.properties, o1.ctid, o2.id, o2.properties, o2.ctid
         ->  Seq Scan on shortestpath.o o1
               Output: o1.id, o1.properties, o1.ctid
               Filter: (o1.properties.'id'::text = '1'::jsonb)
         ->  Seq Scan on shortestpath.o o2
               Output: o2.id, o2.properties, o2.ctid
               Filter: (o2.properties.'id'::text = '1'::jsonb)
   ->  Shortestpath VLE [1..1]
         Output: shortestpath_graphids(), shortestpath_rowids()
         Hash Cond: (e."end" = e_1.start)
         ->  Hash2Side
               Output: e."end", e.tableoid, e.ctid
               ->  Index Scan using e_start_idx on shortestpath.e
                     Output: e."end", e.tableoid, e.ctid
                     Index Cond: (e.start = o1.id)
         ->  Hash2Side
               Output: e_1.start, e_1.tableoid, e_1.ctid
               ->  Index Scan using e_end_idx on shortestpath.e e_1
                     Output: e_1.start, e_1.tableoid, e_1.ctid
                     Index Cond: (e_1."end" = o2.id)
   SubPlan 2
     ->  Aggregate
           Output: array_agg((SubPlan 1))
           ->  Function Scan on pg_catalog.unnest vid
                 Output: vid.vid
                 Function Call: unnest((shortestpath_graphids()))
           SubPlan 1
             ->  Result
                   Output: ROW(ag_vertex.id, ag_vertex.properties, ag_vertex.ctid)::vertex
                   ->  Append
                         ->  Seq Scan on shortestpath.ag_vertex ag_vertex_1
                               Output: ag_vertex_1.id, ag_vertex_1.properties, ag_vertex_1.ctid
                               Filter: (ag_vertex_1.id = vid.vid)
                         ->  Seq Scan on shortestpath.vp ag_vertex_2
                               Output: ag_vertex_2.id, ag_vertex_2.properties, ag_vertex_2.ctid
                               Filter: (ag_vertex_2.id = vid.vid)
                         ->  Seq Scan on shortestpath.o ag_vertex_3
                               Output: ag_vertex_3.id, ag_vertex_3.properties, ag_vertex_3.ctid
                               Filter: (ag_vertex_3.id = vid.vid)
                         ->  Seq Scan on shortestpath.s ag_vertex_4
                               Output: ag_vertex_4.id, ag_vertex_4.properties, ag_vertex_4.ctid
                               Filter: (ag_vertex_4.id = vid.vid)
                         ->  Seq Scan on shortestpath.c ag_vertex_5
                               Output: ag_vertex_5.id, ag_vertex_5.properties, ag_vertex_5.ctid
                               Filter: (ag_vertex_5.id = vid.vid)
                         ->  Index Scan using l_pkey on shortestpath.l ag_vertex_6
                               Output: ag_vertex_6.id, ag_vertex_6.properties, ag_vertex_6.ctid
                               Index Cond: (ag_vertex_6.id = vid.vid)
                         ->  Index Scan using r_pkey on shortestpath.r ag_vertex_7
                               Output: ag_vertex_7.id, ag_vertex_7.properties, ag_vertex_7.ctid
                               Index Cond: (ag_vertex_7.id = vid.vid)
                         ->  Seq Scan on shortestpath.vc ag_vertex_8
                               Output: ag_vertex_8.id, ag_vertex_8.properties, ag_vertex_8.ctid
                               Filter: (ag_vertex_8.id = vid.vid)
   SubPlan 4
     ->  Aggregate
           Output: array_agg((SubPlan 3))
           ->  Function Scan on pg_catalog.unnest eid
                 Output: eid.eid
                 Function Call: unnest((shortestpath_rowids()))
           SubPlan 3
             ->  Tid Scan on shortestpath.e e_2
                   Output: ROW(e_2.id, e_2.start, e_2."end", e_2.properties, e_2.ctid)::edge
                   TID Cond: (e_2.ctid = rowid_ctid(eid.eid))
                   Filter: (e_2.tableoid = rowid_tableoid(eid.eid))
(68 rows)

explain ( analyze false, verbose true, costs false, buffers false, timing false )
match (o1:o), (o2:o) match p = shortestpath( (o1)-[:e]->(o2) ) where o1.id = 1 and o2.id = 1 return o1, o2, p;
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop
   Output: ROW(o1.id, o1.properties, o1.ctid)::vertex, ROW(o2.id, o2.properties, o2.ctid)::vertex, ROW((SubPlan 2), COALESCE((SubPlan 4), '[]'::edge[]))::graphpath
   ->  Nested Loop
         Output: o1.id, o1.properties, o1.ctid, o2.id, o2.properties, o2.ctid
         ->  Seq Scan on shortestpath.o o1
               Output: o1.id, o1.properties, o1.ctid
               Filter: (o1.properties.'id'::text = '1'::jsonb)
         ->  Seq Scan on shortestpath.o o2
               Output: o2.id, o2.properties, o2.ctid
               Filter: (o2.properties.'id'::text = '1'::jsonb)
   ->  Shortestpath VLE [1..1]
         Output: shortestpath_graphids(), shortestpath_rowids()
         Hash Cond: (e."end" = e_1.start)
         ->  Hash2Side
               Output: e."end", e.tableoid, e.ctid
               ->  Index Scan using e_start_idx on shortestpath.e
                     Output: e."end", e.tableoid, e.ctid
                     Index Cond: (e.start = o1.id)
         ->  Hash2Side
               Output: e_1.start, e_1.tableoid, e_1.ctid
               ->  Index Scan using e_end_idx on shortestpath.e e_1
                     Output: e_1.start, e_1.tableoid, e_1.ctid
                     Index Cond: (e_1."end" = o2.id)
   SubPlan 2
     ->  Aggregate
           Output: array_agg((SubPlan 1))
           ->  Function Scan on pg_catalog.unnest vid
                 Output: vid.vid
                 Function Call: unnest((shortestpath_graphids()))
           SubPlan 1
             ->  Result
                   Output: ROW(ag_vertex.id, ag_vertex.properties, ag_vertex.ctid)::vertex
                   ->  Append
                         ->  Seq Scan on shortestpath.ag_vertex ag_vertex_1
                               Output: ag_vertex_1.id, ag_vertex_1.properties, ag_vertex_1.ctid
                               Filter: (ag_vertex_1.id = vid.vid)
                         ->  Seq Scan on shortestpath.vp ag_vertex_2
                               Output: ag_vertex_2.id, ag_vertex_2.properties, ag_vertex_2.ctid
                               Filter: (ag_vertex_2.id = vid.vid)
                         ->  Seq Scan on shortestpath.o ag_vertex_3
                               Output: ag_vertex_3.id, ag_vertex_3.properties, ag_vertex_3.ctid
                               Filter: (ag_vertex_3.id = vid.vid)
                         ->  Seq Scan on shortestpath.s ag_vertex_4
                               Output: ag_vertex_4.id, ag_vertex_4.properties, ag_vertex_4.ctid
                               Filter: (ag_vertex_4.id = vid.vid)
                         ->  Seq Scan on shortestpath.c ag_vertex_5
                               Output: ag_vertex_5.id, ag_vertex_5.properties, ag_vertex_5.ctid
                               Filter: (ag_vertex_5.id = vid.vid)
                         ->  Index Scan using l_pkey on shortestpath.l ag_vertex_6
                               Output: ag_vertex_6.id, ag_vertex_6.properties, ag_vertex_6.ctid
                               Index Cond: (ag_vertex_6.id = vid.vid)
                         ->  Index Scan using r_pkey on shortestpath.r ag_vertex_7
                               Output: ag_vertex_7.id, ag_vertex_7.properties, ag_vertex_7.ctid
                               Index Cond: (ag_vertex_7.id = vid.vid)
                         ->  Seq Scan on shortestpath.vc ag_vertex_8
                               Output: ag_vertex_8.id, ag_vertex_8.properties, ag_vertex_8.ctid
                               Filter: (ag_vertex_8.id = vid.vid)
   SubPlan 4
     ->  Aggregate
           Output: array_agg((SubPlan 3))
           ->  Function Scan on pg_catalog.unnest eid
                 Output: eid.eid
                 Function Call: unnest((shortestpath_rowids()))
           SubPlan 3
             ->  Tid Scan on shortestpath.e e_2
                   Output: ROW(e_2.id, e_2.start, e_2."end", e_2.properties, e_2.ctid)::edge
                   TID Cond: (e_2.ctid = rowid_ctid(eid.eid))
                   Filter: (e_2.tableoid = rowid_tableoid(eid.eid))
(68 rows)

explain ( analyze false, verbose true, costs false, buffers false, timing false )
match p = shortestpath( (o1:o)<-[:e*0..]->(o2:o) ) where o1.id = 1 and o1.id = 1 return p;
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Nested Loop
   Output: ROW((SubPlan 2), COALESCE((SubPlan 4), '[]'::edge[]))::graphpath
   ->  Seq Scan on shortestpath.o o1
         Output: o1.id, o1.properties, o1.ctid
         Filter: (o1.properties.'id'::text = '1'::jsonb)
   ->  Nested Loop
         Output: (shortestpath_graphids()), (shortestpath_rowids())
         ->  Seq Scan on shortestpath.o o2
               Output: o2.id, o2.properties, o2.ctid
         ->  Shortestpath VLE [0..]
               Output: shortestpath_graphids(), shortestpath_rowids()
               Hash Cond: ("<0000000420>"."end" = "<0000000422>".start)
               ->  Hash2Side
                     Output: "<0000000420>"."end", "<0000000420>".ltableoid, "<0000000420>".lctid
                     ->  Subquery Scan on "<0000000420>"
                           Output: "<0000000420>"."end", "<0000000420>".ltableoid, "<0000000420>".lctid
                           ->  HashAggregate
                                 Output: e.start, e."end", e.tableoid, e.ctid
                                 Group Key: e.start, e."end", e.tableoid, e.ctid
                                 ->  Append
                                       ->  Index Scan using e_start_idx on shortestpath.e
                                             Output: e.start, e."end", e.tableoid, e.ctid
                                             Index Cond: (e.start = o1.id)
                                       ->  Index Scan using e_end_idx on shortestpath.e e_1
                                             Output: e_1."end", e_1.start, e_1.tableoid, e_1.ctid
                                             Index Cond: (e_1."end" = o1.id)
               ->  Hash2Side
                     Output: "<0000000422>".start, "<0000000422>".ltableoid, "<0000000422>".lctid
                     ->  Subquery Scan on "<0000000422>"
                           Output: "<0000000422>".start, "<0000000422>".ltableoid, "<0000000422>".lctid
                           ->  HashAggregate
                                 Output: e_2.start, e_2."end", e_2.tableoid, e_2.ctid
                                 Group Key: e_2.start, e_2."end", e_2.tableoid, e_2.ctid
                                 ->  Append
                                       ->  Index Scan using e_end_idx on shortestpath.e e_2
                                             Output: e_2.start, e_2."end", e_2.tableoid, e_2.ctid
                                             Index Cond: (e_2."end" = o2.id)
                                       ->  Index Scan using e_start_idx on shortestpath.e e_3
                                             Output: e_3."end", e_3.start, e_3.tableoid, e_3.ctid
                                             Index Cond: (e_3.start = o2.id)
   SubPlan 2
     ->  Aggregate
           Output: array_agg((SubPlan 1))
           ->  Function Scan on pg_catalog.unnest vid
                 Output: vid.vid
                 Function Call: unnest((shortestpath_graphids()))
           SubPlan 1
             ->  Result
                   Output: ROW(ag_vertex.id, ag_vertex.properties, ag_vertex.ctid)::vertex
                   ->  Append
                         ->  Seq Scan on shortestpath.ag_vertex ag_vertex_1
                               Output: ag_vertex_1.id, ag_vertex_1.properties, ag_vertex_1.ctid
                               Filter: (ag_vertex_1.id = vid.vid)
                         ->  Seq Scan on shortestpath.vp ag_vertex_2
                               Output: ag_vertex_2.id, ag_vertex_2.properties, ag_vertex_2.ctid
                               Filter: (ag_vertex_2.id = vid.vid)
                         ->  Seq Scan on shortestpath.o ag_vertex_3
                               Output: ag_vertex_3.id, ag_vertex_3.properties, ag_vertex_3.ctid
                               Filter: (ag_vertex_3.id = vid.vid)
                         ->  Seq Scan on shortestpath.s ag_vertex_4
                               Output: ag_vertex_4.id, ag_vertex_4.properties, ag_vertex_4.ctid
                               Filter: (ag_vertex_4.id = vid.vid)
                         ->  Seq Scan on shortestpath.c ag_vertex_5
                               Output: ag_vertex_5.id, ag_vertex_5.properties, ag_vertex_5.ctid
                               Filter: (ag_vertex_5.id = vid.vid)
                         ->  Index Scan using l_pkey on shortestpath.l ag_vertex_6
                               Output: ag_vertex_6.id, ag_vertex_6.properties, ag_vertex_6.ctid
                               Index Cond: (ag_vertex_6.id = vid.vid)
                         ->  Index Scan using r_pkey on shortestpath.r ag_vertex_7
                               Output: ag_vertex_7.id, ag_vertex_7.properties, ag_vertex_7.ctid
                               Index Cond: (ag_vertex_7.id = vid.vid)
                         ->  Seq Scan on shortestpath.vc ag_vertex_8
                               Output: ag_vertex_8.id, ag_vertex_8.properties, ag_vertex_8.ctid
                               Filter: (ag_vertex_8.id = vid.vid)
   SubPlan 4
     ->  Aggregate
           Output: array_agg((SubPlan 3))
           ->  Function Scan on pg_catalog.unnest eid
                 Output: eid.eid
                 Function Call: unnest((shortestpath_rowids()))
           SubPlan 3
             ->  Tid Scan on shortestpath.e e_4
                   Output: ROW(e_4.id, e_4.start, e_4."end", e_4.properties, e_4.ctid)::edge
                   TID Cond: (e_4.ctid = rowid_ctid(eid.eid))
                   Filter: (e_4.tableoid = rowid_tableoid(eid.eid))
(85 rows)

explain ( analyze false, verbose true, costs false, buffers false, timing false )
match p = shortestpath( (o1:o)<-[:e*1..]->(o2:o) ) where o1.id = 1 and o1.id = 1 return p;
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Nested Loop
   Output: ROW((SubPlan 2), COALESCE((SubPlan 4), '[]'::edge[]))::graphpath
   ->  Seq Scan on shortestpath.o o1
         Output: o1.id, o1.properties, o1.ctid
         Filter: (o1.properties.'id'::text = '1'::jsonb)
   ->  Nested Loop
         Output: (shortestpath_graphids()), (shortestpath_rowids())
         ->  Seq Scan on shortestpath.o o2
               Output: o2.id, o2.properties, o2.ctid
         ->  Shortestpath VLE [1..]
               Output: shortestpath_graphids(), shortestpath_rowids()
               Hash Cond: ("<0000000425>"."end" = "<0000000427>".start)
               ->  Hash2Side
                     Output: "<0000000425>"."end", "<0000000425>".ltableoid, "<0000000425>".lctid
                     ->  Subquery Scan on "<0000000425>"
                           Output: "<0000000425>"."end", "<0000000425>".ltableoid, "<0000000425>".lctid
                           ->  HashAggregate
                                 Output: e.start, e."end", e.tableoid, e.ctid
                                 Group Key: e.start, e."end", e.tableoid, e.ctid
                                 ->  Append
                                       ->  Index Scan using e_start_idx on shortestpath.e
                                             Output: e.start, e."end", e.tableoid, e.ctid
                                             Index Cond: (e.start = o1.id)
                                       ->  Index Scan using e_end_idx on shortestpath.e e_1
                                             Output: e_1."end", e_1.start, e_1.tableoid, e_1.ctid
                                             Index Cond: (e_1."end" = o1.id)
               ->  Hash2Side
                     Output: "<0000000427>".start, "<0000000427>".ltableoid, "<0000000427>".lctid
                     ->  Subquery Scan on "<0000000427>"
                           Output: "<0000000427>".start, "<0000000427>".ltableoid, "<0000000427>".lctid
                           ->  HashAggregate
                                 Output: e_2.start, e_2."end", e_2.tableoid, e_2.ctid
                                 Group Key: e_2.start, e_2."end", e_2.tableoid, e_2.ctid
                                 ->  Append
                                       ->  Index Scan using e_end_idx on shortestpath.e e_2
                                             Output: e_2.start, e_2."end", e_2.tableoid, e_2.ctid
                                             Index Cond: (e_2."end" = o2.id)
                                       ->  Index Scan using e_start_idx on shortestpath.e e_3
                                             Output: e_3."end", e_3.start, e_3.tableoid, e_3.ctid
                                             Index Cond: (e_3.start = o2.id)
   SubPlan 2
     ->  Aggregate
           Output: array_agg((SubPlan 1))
           ->  Function Scan on pg_catalog.unnest vid
                 Output: vid.vid
                 Function Call: unnest((shortestpath_graphids()))
           SubPlan 1
             ->  Result
                   Output: ROW(ag_vertex.id, ag_vertex.properties, ag_vertex.ctid)::vertex
                   ->  Append
                         ->  Seq Scan on shortestpath.ag_vertex ag_vertex_1
                               Output: ag_vertex_1.id, ag_vertex_1.properties, ag_vertex_1.ctid
                               Filter: (ag_vertex_1.id = vid.vid)
                         ->  Seq Scan on shortestpath.vp ag_vertex_2
                               Output: ag_vertex_2.id, ag_vertex_2.properties, ag_vertex_2.ctid
                               Filter: (ag_vertex_2.id = vid.vid)
                         ->  Seq Scan on shortestpath.o ag_vertex_3
                               Output: ag_vertex_3.id, ag_vertex_3.properties, ag_vertex_3.ctid
                               Filter: (ag_vertex_3.id = vid.vid)
                         ->  Seq Scan on shortestpath.s ag_vertex_4
                               Output: ag_vertex_4.id, ag_vertex_4.properties, ag_vertex_4.ctid
                               Filter: (ag_vertex_4.id = vid.vid)
                         ->  Seq Scan on shortestpath.c ag_vertex_5
                               Output: ag_vertex_5.id, ag_vertex_5.properties, ag_vertex_5.ctid
                               Filter: (ag_vertex_5.id = vid.vid)
                         ->  Index Scan using l_pkey on shortestpath.l ag_vertex_6
                               Output: ag_vertex_6.id, ag_vertex_6.properties, ag_vertex_6.ctid
                               Index Cond: (ag_vertex_6.id = vid.vid)
                         ->  Index Scan using r_pkey on shortestpath.r ag_vertex_7
                               Output: ag_vertex_7.id, ag_vertex_7.properties, ag_vertex_7.ctid
                               Index Cond: (ag_vertex_7.id = vid.vid)
                         ->  Seq Scan on shortestpath.vc ag_vertex_8
                               Output: ag_vertex_8.id, ag_vertex_8.properties, ag_vertex_8.ctid
                               Filter: (ag_vertex_8.id = vid.vid)
   SubPlan 4
     ->  Aggregate
           Output: array_agg((SubPlan 3))
           ->  Function Scan on pg_catalog.unnest eid
                 Output: eid.eid
                 Function Call: unnest((shortestpath_rowids()))
           SubPlan 3
             ->  Tid Scan on shortestpath.e e_4
                   Output: ROW(e_4.id, e_4.start, e_4."end", e_4.properties, e_4.ctid)::edge
                   TID Cond: (e_4.ctid = rowid_ctid(eid.eid))
                   Filter: (e_4.tableoid = rowid_tableoid(eid.eid))
(85 rows)

explain ( analyze false, verbose true, costs false, buffers false, timing false )
match p = shortestpath( (o1:o)<-[:e*0..1]->(o2:o) ) where o1.id = 1 and o1.id = 1 return p;
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Nested Loop
   Output: ROW((SubPlan 2), COALESCE((SubPlan 4), '[]'::edge[]))::graphpath
   ->  Seq Scan on shortestpath.o o1
         Output: o1.id, o1.properties, o1.ctid
         Filter: (o1.properties.'id'::text = '1'::jsonb)
   ->  Nested Loop
         Output: (shortestpath_graphids()), (shortestpath_rowids())
         ->  Seq Scan on shortestpath.o o2
               Output: o2.id, o2.properties, o2.ctid
         ->  Shortestpath VLE [0..1]
               Output: shortestpath_graphids(), shortestpath_rowids()
               Hash Cond: ("<0000000430>"."end" = "<0000000432>".start)
               ->  Hash2Side
                     Output: "<0000000430>"."end", "<0000000430>".ltableoid, "<0000000430>".lctid
                     ->  Subquery Scan on "<0000000430>"
                           Output: "<0000000430>"."end", "<0000000430>".ltableoid, "<0000000430>".lctid
                           ->  HashAggregate
                                 Output: e.start, e."end", e.tableoid, e.ctid
                                 Group Key: e.start, e."end", e.tableoid, e.ctid
                                 ->  Append
                                       ->  Index Scan using e_start_idx on shortestpath.e
                                             Output: e.start, e."end", e.tableoid, e.ctid
                                             Index Cond: (e.start = o1.id)
                                       ->  Index Scan using e_end_idx on shortestpath.e e_1
                                             Output: e_1."end", e_1.start, e_1.tableoid, e_1.ctid
                                             Index Cond: (e_1."end" = o1.id)
               ->  Hash2Side
                     Output: "<0000000432>".start, "<0000000432>".ltableoid, "<0000000432>".lctid
                     ->  Subquery Scan on "<0000000432>"
                           Output: "<0000000432>".start, "<0000000432>".ltableoid, "<0000000432>".lctid
                           ->  HashAggregate
                                 Output: e_2.start, e_2."end", e_2.tableoid, e_2.ctid
                                 Group Key: e_2.start, e_2."end", e_2.tableoid, e_2.ctid
                                 ->  Append
                                       ->  Index Scan using e_end_idx on shortestpath.e e_2
                                             Output: e_2.start, e_2."end", e_2.tableoid, e_2.ctid
                                             Index Cond: (e_2."end" = o2.id)
                                       ->  Index Scan using e_start_idx on shortestpath.e e_3
                                             Output: e_3."end", e_3.start, e_3.tableoid, e_3.ctid
                                             Index Cond: (e_3.start = o2.id)
   SubPlan 2
     ->  Aggregate
           Output: array_agg((SubPlan 1))
           ->  Function Scan on pg_catalog.unnest vid
                 Output: vid.vid
                 Function Call: unnest((shortestpath_graphids()))
           SubPlan 1
             ->  Result
                   Output: ROW(ag_vertex.id, ag_vertex.properties, ag_vertex.ctid)::vertex
                   ->  Append
                         ->  Seq Scan on shortestpath.ag_vertex ag_vertex_1
                               Output: ag_vertex_1.id, ag_vertex_1.properties, ag_vertex_1.ctid
                               Filter: (ag_vertex_1.id = vid.vid)
                         ->  Seq Scan on shortestpath.vp ag_vertex_2
                               Output: ag_vertex_2.id, ag_vertex_2.properties, ag_vertex_2.ctid
                               Filter: (ag_vertex_2.id = vid.vid)
                         ->  Seq Scan on shortestpath.o ag_vertex_3
                               Output: ag_vertex_3.id, ag_vertex_3.properties, ag_vertex_3.ctid
                               Filter: (ag_vertex_3.id = vid.vid)
                         ->  Seq Scan on shortestpath.s ag_vertex_4
                               Output: ag_vertex_4.id, ag_vertex_4.properties, ag_vertex_4.ctid
                               Filter: (ag_vertex_4.id = vid.vid)
                         ->  Seq Scan on shortestpath.c ag_vertex_5
                               Output: ag_vertex_5.id, ag_vertex_5.properties, ag_vertex_5.ctid
                               Filter: (ag_vertex_5.id = vid.vid)
                         ->  Index Scan using l_pkey on shortestpath.l ag_vertex_6
                               Output: ag_vertex_6.id, ag_vertex_6.properties, ag_vertex_6.ctid
                               Index Cond: (ag_vertex_6.id = vid.vid)
                         ->  Index Scan using r_pkey on shortestpath.r ag_vertex_7
                               Output: ag_vertex_7.id, ag_vertex_7.properties, ag_vertex_7.ctid
                               Index Cond: (ag_vertex_7.id = vid.vid)
                         ->  Seq Scan on shortestpath.vc ag_vertex_8
                               Output: ag_vertex_8.id, ag_vertex_8.properties, ag_vertex_8.ctid
                               Filter: (ag_vertex_8.id = vid.vid)
   SubPlan 4
     ->  Aggregate
           Output: array_agg((SubPlan 3))
           ->  Function Scan on pg_catalog.unnest eid
                 Output: eid.eid
                 Function Call: unnest((shortestpath_rowids()))
           SubPlan 3
             ->  Tid Scan on shortestpath.e e_4
                   Output: ROW(e_4.id, e_4.start, e_4."end", e_4.properties, e_4.ctid)::edge
                   TID Cond: (e_4.ctid = rowid_ctid(eid.eid))
                   Filter: (e_4.tableoid = rowid_tableoid(eid.eid))
(85 rows)

explain ( analyze false, verbose true, costs false, buffers false, timing false )
match p = shortestpath( (o1:o)<-[:e*1..2]->(o2:o) ) where o1.id = 1 and o1.id = 1 return p;
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Nested Loop
   Output: ROW((SubPlan 2), COALESCE((SubPlan 4), '[]'::edge[]))::graphpath
   ->  Seq Scan on shortestpath.o o1
         Output: o1.id, o1.properties, o1.ctid
         Filter: (o1.properties.'id'::text = '1'::jsonb)
   ->  Nested Loop
         Output: (shortestpath_graphids()), (shortestpath_rowids())
         ->  Seq Scan on shortestpath.o o2
               Output: o2.id, o2.properties, o2.ctid
         ->  Shortestpath VLE [1..2]
               Output: shortestpath_graphids(), shortestpath_rowids()
               Hash Cond: ("<0000000435>"."end" = "<0000000437>".start)
               ->  Hash2Side
                     Output: "<0000000435>"."end", "<0000000435>".ltableoid, "<0000000435>".lctid
                     ->  Subquery Scan on "<0000000435>"
                           Output: "<0000000435>"."end", "<0000000435>".ltableoid, "<0000000435>".lctid
                           ->  HashAggregate
                                 Output: e.start, e."end", e.tableoid, e.ctid
                                 Group Key: e.start, e."end", e.tableoid, e.ctid
                                 ->  Append
                                       ->  Index Scan using e_start_idx on shortestpath.e
                                             Output: e.start, e."end", e.tableoid, e.ctid
                                             Index Cond: (e.start = o1.id)
                                       ->  Index Scan using e_end_idx on shortestpath.e e_1
                                             Output: e_1."end", e_1.start, e_1.tableoid, e_1.ctid
                                             Index Cond: (e_1."end" = o1.id)
               ->  Hash2Side
                     Output: "<0000000437>".start, "<0000000437>".ltableoid, "<0000000437>".lctid
                     ->  Subquery Scan on "<0000000437>"
                           Output: "<0000000437>".start, "<0000000437>".ltableoid, "<0000000437>".lctid
                           ->  HashAggregate
                                 Output: e_2.start, e_2."end", e_2.tableoid, e_2.ctid
                                 Group Key: e_2.start, e_2."end", e_2.tableoid, e_2.ctid
                                 ->  Append
                                       ->  Index Scan using e_end_idx on shortestpath.e e_2
                                             Output: e_2.start, e_2."end", e_2.tableoid, e_2.ctid
                                             Index Cond: (e_2."end" = o2.id)
                                       ->  Index Scan using e_start_idx on shortestpath.e e_3
                                             Output: e_3."end", e_3.start, e_3.tableoid, e_3.ctid
                                             Index Cond: (e_3.start = o2.id)
   SubPlan 2
     ->  Aggregate
           Output: array_agg((SubPlan 1))
           ->  Function Scan on pg_catalog.unnest vid
                 Output: vid.vid
                 Function Call: unnest((shortestpath_graphids()))
           SubPlan 1
             ->  Result
                   Output: ROW(ag_vertex.id, ag_vertex.properties, ag_vertex.ctid)::vertex
                   ->  Append
                         ->  Seq Scan on shortestpath.ag_vertex ag_vertex_1
                               Output: ag_vertex_1.id, ag_vertex_1.properties, ag_vertex_1.ctid
                               Filter: (ag_vertex_1.id = vid.vid)
                         ->  Seq Scan on shortestpath.vp ag_vertex_2
                               Output: ag_vertex_2.id, ag_vertex_2.properties, ag_vertex_2.ctid
                               Filter: (ag_vertex_2.id = vid.vid)
                         ->  Seq Scan on shortestpath.o ag_vertex_3
                               Output: ag_vertex_3.id, ag_vertex_3.properties, ag_vertex_3.ctid
                               Filter: (ag_vertex_3.id = vid.vid)
                         ->  Seq Scan on shortestpath.s ag_vertex_4
                               Output: ag_vertex_4.id, ag_vertex_4.properties, ag_vertex_4.ctid
                               Filter: (ag_vertex_4.id = vid.vid)
                         ->  Seq Scan on shortestpath.c ag_vertex_5
                               Output: ag_vertex_5.id, ag_vertex_5.properties, ag_vertex_5.ctid
                               Filter: (ag_vertex_5.id = vid.vid)
                         ->  Index Scan using l_pkey on shortestpath.l ag_vertex_6
                               Output: ag_vertex_6.id, ag_vertex_6.properties, ag_vertex_6.ctid
                               Index Cond: (ag_vertex_6.id = vid.vid)
                         ->  Index Scan using r_pkey on shortestpath.r ag_vertex_7
                               Output: ag_vertex_7.id, ag_vertex_7.properties, ag_vertex_7.ctid
                               Index Cond: (ag_vertex_7.id = vid.vid)
                         ->  Seq Scan on shortestpath.vc ag_vertex_8
                               Output: ag_vertex_8.id, ag_vertex_8.properties, ag_vertex_8.ctid
                               Filter: (ag_vertex_8.id = vid.vid)
   SubPlan 4
     ->  Aggregate
           Output: array_agg((SubPlan 3))
           ->  Function Scan on pg_catalog.unnest eid
                 Output: eid.eid
                 Function Call: unnest((shortestpath_rowids()))
           SubPlan 3
             ->  Tid Scan on shortestpath.e e_4
                   Output: ROW(e_4.id, e_4.start, e_4."end", e_4.properties, e_4.ctid)::edge
                   TID Cond: (e_4.ctid = rowid_ctid(eid.eid))
                   Filter: (e_4.tableoid = rowid_tableoid(eid.eid))
(85 rows)

explain ( analyze false, verbose true, costs false, buffers false, timing false )
match (s1:s), (s2:s) return s1.id as s1id, s2.id as s2id, ids(nodes(shortestpath((s1)-[:e]->(s2)))) order by s1id, s2id;
                                                  QUERY PLAN                                                  
--------------------------------------------------------------------------------------------------------------
 Sort
   Output: (s1.properties.'id'::text), (s2.properties.'id'::text), (ids(nodes((SubPlan 5))))
   Sort Key: (s1.properties.'id'::text), (s2.properties.'id'::text)
   ->  Nested Loop
         Output: s1.properties.'id'::text, s2.properties.'id'::text, ids(nodes((SubPlan 5)))
         ->  Seq Scan on shortestpath.s s1
               Output: s1.id, s1.properties
         ->  Seq Scan on shortestpath.s s2
               Output: s2.id, s2.properties
         SubPlan 5
           ->  Subquery Scan on _d
                 Output: ROW((SubPlan 2), COALESCE((SubPlan 4), '[]'::edge[]))::graphpath
                 ->  Shortestpath VLE [1..1]
                       Output: shortestpath_graphids(), shortestpath_rowids()
                       Hash Cond: (e_1."end" = e_2.start)
                       ->  Hash2Side
                             Output: e_1."end", e_1.tableoid, e_1.ctid
                             ->  Index Scan using e_start_idx on shortestpath.e e_1
                                   Output: e_1."end", e_1.tableoid, e_1.ctid
                                   Index Cond: (e_1.start = s1.id)
                       ->  Hash2Side
                             Output: e_2.start, e_2.tableoid, e_2.ctid
                             ->  Index Scan using e_end_idx on shortestpath.e e_2
                                   Output: e_2.start, e_2.tableoid, e_2.ctid
                                   Index Cond: (e_2."end" = s2.id)
                 SubPlan 2
                   ->  Aggregate
                         Output: array_agg((SubPlan 1))
                         ->  Function Scan on pg_catalog.unnest vid
                               Output: vid.vid
                               Function Call: unnest(_d.vids)
                         SubPlan 1
                           ->  Result
                                 Output: ROW(ag_vertex.id, ag_vertex.properties, ag_vertex.ctid)::vertex
                                 ->  Append
                                       ->  Seq Scan on shortestpath.ag_vertex ag_vertex_1
                                             Output: ag_vertex_1.id, ag_vertex_1.properties, ag_vertex_1.ctid
                                             Filter: (ag_vertex_1.id = vid.vid)
                                       ->  Seq Scan on shortestpath.vp ag_vertex_2
                                             Output: ag_vertex_2.id, ag_vertex_2.properties, ag_vertex_2.ctid
                                             Filter: (ag_vertex_2.id = vid.vid)
                                       ->  Seq Scan on shortestpath.o ag_vertex_3
                                             Output: ag_vertex_3.id, ag_vertex_3.properties, ag_vertex_3.ctid
                                             Filter: (ag_vertex_3.id = vid.vid)
                                       ->  Seq Scan on shortestpath.s ag_vertex_4
                                             Output: ag_vertex_4.id, ag_vertex_4.properties, ag_vertex_4.ctid
                                             Filter: (ag_vertex_4.id = vid.vid)
                                       ->  Seq Scan on shortestpath.c ag_vertex_5
                                             Output: ag_vertex_5.id, ag_vertex_5.properties, ag_vertex_5.ctid
                                             Filter: (ag_vertex_5.id = vid.vid)
                                       ->  Index Scan using l_pkey on shortestpath.l ag_vertex_6
                                             Output: ag_vertex_6.id, ag_vertex_6.properties, ag_vertex_6.ctid
                                             Index Cond: (ag_vertex_6.id = vid.vid)
                                       ->  Index Scan using r_pkey on shortestpath.r ag_vertex_7
                                             Output: ag_vertex_7.id, ag_vertex_7.properties, ag_vertex_7.ctid
                                             Index Cond: (ag_vertex_7.id = vid.vid)
                                       ->  Seq Scan on shortestpath.vc ag_vertex_8
                                             Output: ag_vertex_8.id, ag_vertex_8.properties, ag_vertex_8.ctid
                                             Filter: (ag_vertex_8.id = vid.vid)
                 SubPlan 4
                   ->  Aggregate
                         Output: array_agg((SubPlan 3))
                         ->  Function Scan on pg_catalog.unnest eid
                               Output: eid.eid
                               Function Call: unnest(_d.eids)
                         SubPlan 3
                           ->  Tid Scan on shortestpath.e
                                 Output: ROW(e.id, e.start, e."end", e.properties, e.ctid)::edge
                                 TID Cond: (e.ctid = rowid_ctid(eid.eid))
                                 Filter: (e.tableoid = rowid_tableoid(eid.eid))
(70 rows)

explain ( analyze false, verbose true, costs false, buffers false, timing false )
match (c1:c), (c2:c) where c1.id >= 11 and c1.id <= 19 and c2.id >= 11 and c2.id <= 19 return c1.id as c1id, c2.id as c2id, allshortestpaths((c1)-[:e*]->(c2)) order by c1id, c2id;
                                                     QUERY PLAN                                                      
---------------------------------------------------------------------------------------------------------------------
 Incremental Sort
   Output: (c1.properties.'id'::text), (c2.properties.'id'::text), ((SubPlan 5))
   Sort Key: (c1.properties.'id'::text), (c2.properties.'id'::text)
   Presorted Key: (c1.properties.'id'::text)
   ->  Nested Loop
         Output: c1.properties.'id'::text, c2.properties.'id'::text, (SubPlan 5)
         ->  Index Scan using c_id_idx on shortestpath.c c1
               Output: c1.id, c1.properties
               Index Cond: ((c1.properties.'id'::text >= '11'::jsonb) AND (c1.properties.'id'::text <= '19'::jsonb))
         ->  Seq Scan on shortestpath.c c2
               Output: c2.id, c2.properties
               Filter: ((c2.properties.'id'::text >= '11'::jsonb) AND (c2.properties.'id'::text <= '19'::jsonb))
         SubPlan 5
           ->  Aggregate
                 Output: array_agg(ROW((SubPlan 2), COALESCE((SubPlan 4), '[]'::edge[]))::graphpath)
                 ->  All Shortestpaths VLE [1..]
                       Output: shortestpath_graphids(), shortestpath_rowids()
                       Hash Cond: (e_1."end" = e_2.start)
                       ->  Hash2Side
                             Output: e_1."end", e_1.tableoid, e_1.ctid
                             ->  Index Scan using e_start_idx on shortestpath.e e_1
                                   Output: e_1."end", e_1.tableoid, e_1.ctid
                                   Index Cond: (e_1.start = c1.id)
                       ->  Hash2Side
                             Output: e_2.start, e_2.tableoid, e_2.ctid
                             ->  Index Scan using e_end_idx on shortestpath.e e_2
                                   Output: e_2.start, e_2.tableoid, e_2.ctid
                                   Index Cond: (e_2."end" = c2.id)
                 SubPlan 2
                   ->  Aggregate
                         Output: array_agg((SubPlan 1))
                         ->  Function Scan on pg_catalog.unnest vid
                               Output: vid.vid
                               Function Call: unnest((shortestpath_graphids()))
                         SubPlan 1
                           ->  Result
                                 Output: ROW(ag_vertex.id, ag_vertex.properties, ag_vertex.ctid)::vertex
                                 ->  Append
                                       ->  Seq Scan on shortestpath.ag_vertex ag_vertex_1
                                             Output: ag_vertex_1.id, ag_vertex_1.properties, ag_vertex_1.ctid
                                             Filter: (ag_vertex_1.id = vid.vid)
                                       ->  Seq Scan on shortestpath.vp ag_vertex_2
                                             Output: ag_vertex_2.id, ag_vertex_2.properties, ag_vertex_2.ctid
                                             Filter: (ag_vertex_2.id = vid.vid)
                                       ->  Seq Scan on shortestpath.o ag_vertex_3
                                             Output: ag_vertex_3.id, ag_vertex_3.properties, ag_vertex_3.ctid
                                             Filter: (ag_vertex_3.id = vid.vid)
                                       ->  Seq Scan on shortestpath.s ag_vertex_4
                                             Output: ag_vertex_4.id, ag_vertex_4.properties, ag_vertex_4.ctid
                                             Filter: (ag_vertex_4.id = vid.vid)
                                       ->  Seq Scan on shortestpath.c ag_vertex_5
                                             Output: ag_vertex_5.id, ag_vertex_5.properties, ag_vertex_5.ctid
                                             Filter: (ag_vertex_5.id = vid.vid)
                                       ->  Index Scan using l_pkey on shortestpath.l ag_vertex_6
                                             Output: ag_vertex_6.id, ag_vertex_6.properties, ag_vertex_6.ctid
                                             Index Cond: (ag_vertex_6.id = vid.vid)
                                       ->  Index Scan using r_pkey on shortestpath.r ag_vertex_7
                                             Output: ag_vertex_7.id, ag_vertex_7.properties, ag_vertex_7.ctid
                                             Index Cond: (ag_vertex_7.id = vid.vid)
                                       ->  Seq Scan on shortestpath.vc ag_vertex_8
                                             Output: ag_vertex_8.id, ag_vertex_8.properties, ag_vertex_8.ctid
                                             Filter: (ag_vertex_8.id = vid.vid)
                 SubPlan 4
                   ->  Aggregate
                         Output: array_agg((SubPlan 3))
                         ->  Function Scan on pg_catalog.unnest eid
                               Output: eid.eid
                               Function Call: unnest((shortestpath_rowids()))
                         SubPlan 3
                           ->  Tid Scan on shortestpath.e
                                 Output: ROW(e.id, e.start, e."end", e.properties, e.ctid)::edge
                                 TID Cond: (e.ctid = rowid_ctid(eid.eid))
                                 Filter: (e.tableoid = rowid_tableoid(eid.eid))
(73 rows)

explain ( analyze false, verbose true, costs false, buffers false, timing false )
match (l1:l), (l2:l) where l1.id = 1 and l2.id = 111111 return l1.id as l1id, l2.id as l2id, allshortestpaths((l1)-[:e*]->(l2)) order by l1id, l2id;
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Nested Loop
   Output: l1.properties.'id'::text, l2.properties.'id'::text, (SubPlan 5)
   ->  Index Scan using l_id_idx on shortestpath.l l1
         Output: l1.id, l1.properties
         Index Cond: (l1.properties.'id'::text = '1'::jsonb)
   ->  Index Scan using l_id_idx on shortestpath.l l2
         Output: l2.id, l2.properties
         Index Cond: (l2.properties.'id'::text = '111111'::jsonb)
   SubPlan 5
     ->  Aggregate
           Output: array_agg(ROW((SubPlan 2), COALESCE((SubPlan 4), '[]'::edge[]))::graphpath)
           ->  All Shortestpaths VLE [1..]
                 Output: shortestpath_graphids(), shortestpath_rowids()
                 Hash Cond: (e_1."end" = e_2.start)
                 ->  Hash2Side
                       Output: e_1."end", e_1.tableoid, e_1.ctid
                       ->  Index Scan using e_start_idx on shortestpath.e e_1
                             Output: e_1."end", e_1.tableoid, e_1.ctid
                             Index Cond: (e_1.start = l1.id)
                 ->  Hash2Side
                       Output: e_2.start, e_2.tableoid, e_2.ctid
                       ->  Index Scan using e_end_idx on shortestpath.e e_2
                             Output: e_2.start, e_2.tableoid, e_2.ctid
                             Index Cond: (e_2."end" = l2.id)
           SubPlan 2
             ->  Aggregate
                   Output: array_agg((SubPlan 1))
                   ->  Function Scan on pg_catalog.unnest vid
                         Output: vid.vid
                         Function Call: unnest((shortestpath_graphids()))
                   SubPlan 1
                     ->  Result
                           Output: ROW(ag_vertex.id, ag_vertex.properties, ag_vertex.ctid)::vertex
                           ->  Append
                                 ->  Seq Scan on shortestpath.ag_vertex ag_vertex_1
                                       Output: ag_vertex_1.id, ag_vertex_1.properties, ag_vertex_1.ctid
                                       Filter: (ag_vertex_1.id = vid.vid)
                                 ->  Seq Scan on shortestpath.vp ag_vertex_2
                                       Output: ag_vertex_2.id, ag_vertex_2.properties, ag_vertex_2.ctid
                                       Filter: (ag_vertex_2.id = vid.vid)
                                 ->  Seq Scan on shortestpath.o ag_vertex_3
                                       Output: ag_vertex_3.id, ag_vertex_3.properties, ag_vertex_3.ctid
                                       Filter: (ag_vertex_3.id = vid.vid)
                                 ->  Seq Scan on shortestpath.s ag_vertex_4
                                       Output: ag_vertex_4.id, ag_vertex_4.properties, ag_vertex_4.ctid
                                       Filter: (ag_vertex_4.id = vid.vid)
                                 ->  Seq Scan on shortestpath.c ag_vertex_5
                                       Output: ag_vertex_5.id, ag_vertex_5.properties, ag_vertex_5.ctid
                                       Filter: (ag_vertex_5.id = vid.vid)
                                 ->  Index Scan using l_pkey on shortestpath.l ag_vertex_6
                                       Output: ag_vertex_6.id, ag_vertex_6.properties, ag_vertex_6.ctid
                                       Index Cond: (ag_vertex_6.id = vid.vid)
                                 ->  Index Scan using r_pkey on shortestpath.r ag_vertex_7
                                       Output: ag_vertex_7.id, ag_vertex_7.properties, ag_vertex_7.ctid
                                       Index Cond: (ag_vertex_7.id = vid.vid)
                                 ->  Seq Scan on shortestpath.vc ag_vertex_8
                                       Output: ag_vertex_8.id, ag_vertex_8.properties, ag_vertex_8.ctid
                                       Filter: (ag_vertex_8.id = vid.vid)
           SubPlan 4
             ->  Aggregate
                   Output: array_agg((SubPlan 3))
                   ->  Function Scan on pg_catalog.unnest eid
                         Output: eid.eid
                         Function Call: unnest((shortestpath_rowids()))
                   SubPlan 3
                     ->  Tid Scan on shortestpath.e
                           Output: ROW(e.id, e.start, e."end", e.properties, e.ctid)::edge
                           TID Cond: (e.ctid = rowid_ctid(eid.eid))
                           Filter: (e.tableoid = rowid_tableoid(eid.eid))
(69 rows)

-- DESTROY
DROP FUNCTION ids(vertex[]);
DROP GRAPH IF EXISTS shortestpath CASCADE;
