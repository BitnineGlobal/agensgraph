--
-- Cypher Query Language - Property Index
--
DROP ROLE IF EXISTS regressrole;
NOTICE:  role "regressrole" does not exist, skipping
CREATE ROLE regressrole SUPERUSER;
SET ROLE regressrole;
--
-- CREATE GRAPH
--
SHOW graph_path;
 graph_path 
------------
 
(1 row)

CREATE GRAPH g;
SHOW graph_path;
 graph_path 
------------
 g
(1 row)

CREATE VLABEL regv1;
CREATE PROPERTY INDEX ON regv1 (name);
CREATE PROPERTY INDEX ON regv1 (name.first, name.last);
CREATE PROPERTY INDEX ON regv1 ((name.first + name.last));
CREATE PROPERTY INDEX ON regv1 (age);
CREATE PROPERTY INDEX ON regv1 ((body.weight / body.height));
\d g.regv1
                                                       Table "g.regv1"
   Column   |  Type   | Collation | Nullable |                                    Default                                    
------------+---------+-----------+----------+-------------------------------------------------------------------------------
 id         | graphid |           | not null | graphid(graph_labid('g.regv1'::cstring), nextval('g.regv1_id_seq'::regclass))
 properties | jsonb   |           | not null | jsonb_build_object()
Indexes:
    "regv1_pkey" PRIMARY KEY, btree (id)
    "regv1_age_idx" btree ((properties.'age'::text))
    "regv1_first_idx" btree (((properties.'name'::text.'first'::text) `+` (properties.'name'::text.'last'::text)))
    "regv1_first_last_idx" btree ((properties.'name'::text.'first'::text), (properties.'name'::text.'last'::text))
    "regv1_name_idx" btree ((properties.'name'::text))
    "regv1_weight_idx" btree (((properties.'body'::text.'weight'::text) `/` (properties.'body'::text.'height'::text)))
Inherits: g.ag_vertex

\dGi
                                                                    List of property indexes
 Graph | LabelName |      IndexName       | Unique |    Owner    |                                           Indexdef                                            
-------+-----------+----------------------+--------+-------------+-----------------------------------------------------------------------------------------------
 g     | regv1     | regv1_age_idx        | f      | regressrole | CREATE PROPERTY INDEX regv1_age_idx ON regv1 USING btree (age)
 g     | regv1     | regv1_first_idx      | f      | regressrole | CREATE PROPERTY INDEX regv1_first_idx ON regv1 USING btree (((name.first) + (name.last)))
 g     | regv1     | regv1_first_last_idx | f      | regressrole | CREATE PROPERTY INDEX regv1_first_last_idx ON regv1 USING btree (name.first, name.last)
 g     | regv1     | regv1_name_idx       | f      | regressrole | CREATE PROPERTY INDEX regv1_name_idx ON regv1 USING btree (name)
 g     | regv1     | regv1_weight_idx     | f      | regressrole | CREATE PROPERTY INDEX regv1_weight_idx ON regv1 USING btree (((body.weight) / (body.height)))
(5 rows)

DROP VLABEL regv1;
-- Check property name & access method type
CREATE VLABEL regv1;
CREATE PROPERTY INDEX ON regv1 (name);
CREATE PROPERTY INDEX ON regv1 USING btree (name.first);
CREATE PROPERTY INDEX ON regv1 USING hash (name.first);
CREATE PROPERTY INDEX ON regv1 USING brin (name.first);
ERROR:  data type jsonb has no default operator class for access method "brin"
HINT:  You must specify an operator class for the index or define a default operator class for the data type.
CREATE PROPERTY INDEX ON regv1 USING gin (name);
CREATE PROPERTY INDEX ON regv1 USING gist (name);
ERROR:  data type jsonb has no default operator class for access method "gist"
HINT:  You must specify an operator class for the index or define a default operator class for the data type.
--CREATE PROPERTY INDEX ON regv1 USING gin ((self_intro::tsvector));
--CREATE PROPERTY INDEX ON regv1 USING gist ((hobby::tsvector));
\d g.regv1
                                                       Table "g.regv1"
   Column   |  Type   | Collation | Nullable |                                    Default                                    
------------+---------+-----------+----------+-------------------------------------------------------------------------------
 id         | graphid |           | not null | graphid(graph_labid('g.regv1'::cstring), nextval('g.regv1_id_seq'::regclass))
 properties | jsonb   |           | not null | jsonb_build_object()
Indexes:
    "regv1_pkey" PRIMARY KEY, btree (id)
    "regv1_first_idx" btree ((properties.'name'::text.'first'::text))
    "regv1_first_idx1" hash ((properties.'name'::text.'first'::text))
    "regv1_name_idx" btree ((properties.'name'::text))
    "regv1_name_idx1" gin ((properties.'name'::text))
Inherits: g.ag_vertex

\dGv+ regv1
                         List of labels
 Graph | Name  |  Type  |    Owner    |    Size    | Description 
-------+-------+--------+-------------+------------+-------------
 g     | regv1 | vertex | regressrole | 8192 bytes | 
(1 row)

Vertex label "g.regv1"
--
Property Indexes:
    "regv1_first_idx" btree (name.first)
    "regv1_first_idx1" hash (name.first)
    "regv1_name_idx" btree (name)
    "regv1_name_idx1" gin (name)
Inherits: g.ag_vertex

\dGi
                                                       List of property indexes
 Graph | LabelName |    IndexName     | Unique |    Owner    |                                Indexdef                                 
-------+-----------+------------------+--------+-------------+-------------------------------------------------------------------------
 g     | regv1     | regv1_first_idx  | f      | regressrole | CREATE PROPERTY INDEX regv1_first_idx ON regv1 USING btree (name.first)
 g     | regv1     | regv1_first_idx1 | f      | regressrole | CREATE PROPERTY INDEX regv1_first_idx1 ON regv1 USING hash (name.first)
 g     | regv1     | regv1_name_idx   | f      | regressrole | CREATE PROPERTY INDEX regv1_name_idx ON regv1 USING btree (name)
 g     | regv1     | regv1_name_idx1  | f      | regressrole | CREATE PROPERTY INDEX regv1_name_idx1 ON regv1 USING gin (name)
(4 rows)

DROP VLABEL regv1;
-- Concurrently build & if not exist
CREATE VLABEL regv1;
CREATE PROPERTY INDEX CONCURRENTLY ON regv1 (name.first);
CREATE PROPERTY INDEX IF NOT EXISTS regv1_first_idx ON regv1 (name.first);
NOTICE:  relation "regv1_first_idx" already exists, skipping
-- Collation & Sort & NULL order
--CREATE PROPERTY INDEX ON regv1 (name.first COLLATE "C" ASC NULLS FIRST);
-- Tablespace
CREATE PROPERTY INDEX ON regv1 (name) TABLESPACE pg_default;
-- Storage parameter & partial index
CREATE PROPERTY INDEX ON regv1 (name.first) WITH (fillfactor = 80);
CREATE PROPERTY INDEX ON regv1 (name.first) WHERE (name IS NOT NULL);
\d g.regv1
                                                       Table "g.regv1"
   Column   |  Type   | Collation | Nullable |                                    Default                                    
------------+---------+-----------+----------+-------------------------------------------------------------------------------
 id         | graphid |           | not null | graphid(graph_labid('g.regv1'::cstring), nextval('g.regv1_id_seq'::regclass))
 properties | jsonb   |           | not null | jsonb_build_object()
Indexes:
    "regv1_pkey" PRIMARY KEY, btree (id)
    "regv1_first_idx" btree ((properties.'name'::text.'first'::text))
    "regv1_first_idx1" btree ((properties.'name'::text.'first'::text)) WITH (fillfactor='80')
    "regv1_first_idx2" btree ((properties.'name'::text.'first'::text)) WHERE (properties.'name'::text) IS NOT NULL
    "regv1_name_idx" btree ((properties.'name'::text))
Inherits: g.ag_vertex

\dGv+ regv1
                         List of labels
 Graph | Name  |  Type  |    Owner    |    Size    | Description 
-------+-------+--------+-------------+------------+-------------
 g     | regv1 | vertex | regressrole | 8192 bytes | 
(1 row)

Vertex label "g.regv1"
--
Property Indexes:
    "regv1_first_idx" btree (name.first)
    "regv1_first_idx1" btree (name.first) WITH (fillfactor='80')
    "regv1_first_idx2" btree (name.first) WHERE (name) IS NOT NULL
    "regv1_name_idx" btree (name)
Inherits: g.ag_vertex

\dGi
                                                                    List of property indexes
 Graph | LabelName |    IndexName     | Unique |    Owner    |                                             Indexdef                                              
-------+-----------+------------------+--------+-------------+---------------------------------------------------------------------------------------------------
 g     | regv1     | regv1_first_idx  | f      | regressrole | CREATE PROPERTY INDEX regv1_first_idx ON regv1 USING btree (name.first)
 g     | regv1     | regv1_first_idx1 | f      | regressrole | CREATE PROPERTY INDEX regv1_first_idx1 ON regv1 USING btree (name.first) WITH (fillfactor='80')
 g     | regv1     | regv1_first_idx2 | f      | regressrole | CREATE PROPERTY INDEX regv1_first_idx2 ON regv1 USING btree (name.first) WHERE (name) IS NOT NULL
 g     | regv1     | regv1_name_idx   | f      | regressrole | CREATE PROPERTY INDEX regv1_name_idx ON regv1 USING btree (name)
(4 rows)

DROP VLABEL regv1;
-- Unique property index
CREATE VLABEL regv1;
CREATE UNIQUE PROPERTY INDEX ON regv1 (id);
CREATE (:regv1 {id: 100});
CREATE (:regv1 {id: 100});
ERROR:  duplicate key value violates unique constraint "regv1_id_idx"
DETAIL:  Key ((properties.'id'::text))=(100) already exists.
\d g.regv1
                                                       Table "g.regv1"
   Column   |  Type   | Collation | Nullable |                                    Default                                    
------------+---------+-----------+----------+-------------------------------------------------------------------------------
 id         | graphid |           | not null | graphid(graph_labid('g.regv1'::cstring), nextval('g.regv1_id_seq'::regclass))
 properties | jsonb   |           | not null | jsonb_build_object()
Indexes:
    "regv1_pkey" PRIMARY KEY, btree (id)
    "regv1_id_idx" UNIQUE, btree ((properties.'id'::text))
Inherits: g.ag_vertex

\dGv+ regv1
                       List of labels
 Graph | Name  |  Type  |    Owner    | Size  | Description 
-------+-------+--------+-------------+-------+-------------
 g     | regv1 | vertex | regressrole | 16 kB | 
(1 row)

Vertex label "g.regv1"
--
Property Indexes:
    "regv1_id_idx" UNIQUE btree (id)
Inherits: g.ag_vertex

\dGi
                                                   List of property indexes
 Graph | LabelName |  IndexName   | Unique |    Owner    |                              Indexdef                               
-------+-----------+--------------+--------+-------------+---------------------------------------------------------------------
 g     | regv1     | regv1_id_idx | t      | regressrole | CREATE UNIQUE PROPERTY INDEX regv1_id_idx ON regv1 USING btree (id)
(1 row)

DROP VLABEL regv1 CASCADE;
-- Multi-column unique property index
CREATE VLABEL regv1;
CREATE UNIQUE PROPERTY INDEX ON regv1 (name.first, name.last);
CREATE (:regv1 {name: {first: 'agens'}});
CREATE (:regv1 {name: {first: 'agens'}});
CREATE (:regv1 {name: {first: 'agens', last: 'graph'}});
CREATE (:regv1 {name: {first: 'agens', last: 'graph'}});
ERROR:  duplicate key value violates unique constraint "regv1_first_last_idx"
DETAIL:  Key ((properties.'name'::text.'first'::text), (properties.'name'::text.'last'::text))=("agens", "graph") already exists.
\d g.regv1
                                                       Table "g.regv1"
   Column   |  Type   | Collation | Nullable |                                    Default                                    
------------+---------+-----------+----------+-------------------------------------------------------------------------------
 id         | graphid |           | not null | graphid(graph_labid('g.regv1'::cstring), nextval('g.regv1_id_seq'::regclass))
 properties | jsonb   |           | not null | jsonb_build_object()
Indexes:
    "regv1_pkey" PRIMARY KEY, btree (id)
    "regv1_first_last_idx" UNIQUE, btree ((properties.'name'::text.'first'::text), (properties.'name'::text.'last'::text))
Inherits: g.ag_vertex

\dGv+ regv1
                       List of labels
 Graph | Name  |  Type  |    Owner    | Size  | Description 
-------+-------+--------+-------------+-------+-------------
 g     | regv1 | vertex | regressrole | 16 kB | 
(1 row)

Vertex label "g.regv1"
--
Property Indexes:
    "regv1_first_last_idx" UNIQUE btree (name.first, name.last)
Inherits: g.ag_vertex

\dGi
                                                                     List of property indexes
 Graph | LabelName |      IndexName       | Unique |    Owner    |                                            Indexdef                                            
-------+-----------+----------------------+--------+-------------+------------------------------------------------------------------------------------------------
 g     | regv1     | regv1_first_last_idx | t      | regressrole | CREATE UNIQUE PROPERTY INDEX regv1_first_last_idx ON regv1 USING btree (name.first, name.last)
(1 row)

DROP VLABEL regv1 CASCADE;
-- DROP PROPERTY INDEX
CREATE VLABEL regv1;
CREATE PROPERTY INDEX regv1_idx ON regv1 (name);
DROP PROPERTY INDEX regv1_idx;
DROP PROPERTY INDEX IF EXISTS regv1_idx;
NOTICE:  index "regv1_idx" does not exist, skipping
DROP PROPERTY INDEX regv1_pkey;
ERROR:  "regv1_pkey" is not property index
DROP VLABEL regv1;
CREATE ELABEL rege1;
CREATE PROPERTY INDEX rege1_idx ON rege1 (reltype);
DROP PROPERTY INDEX rege1_idx;
DROP PROPERTY INDEX IF EXISTS rege1_idx;
NOTICE:  index "rege1_idx" does not exist, skipping
DROP PROPERTY INDEX rege1_id_idx;
ERROR:  "rege1_id_idx" is not property index
DROP PROPERTY INDEX rege1_start_idx;
ERROR:  "rege1_start_idx" is not property index
DROP PROPERTY INDEX rege1_end_idx;
ERROR:  "rege1_end_idx" is not property index
DROP ELABEL rege1;
CREATE VLABEL regv1;
CREATE PROPERTY INDEX regv1_multi_col ON regv1 (name.first, name.middle, name.last);
\dGv+ regv1
                         List of labels
 Graph | Name  |  Type  |    Owner    |    Size    | Description 
-------+-------+--------+-------------+------------+-------------
 g     | regv1 | vertex | regressrole | 8192 bytes | 
(1 row)

Vertex label "g.regv1"
--
Property Indexes:
    "regv1_multi_col" btree (name.first, name.middle, name.last)
Inherits: g.ag_vertex

\dGi
                                                                   List of property indexes
 Graph | LabelName |    IndexName    | Unique |    Owner    |                                            Indexdef                                             
-------+-----------+-----------------+--------+-------------+-------------------------------------------------------------------------------------------------
 g     | regv1     | regv1_multi_col | f      | regressrole | CREATE PROPERTY INDEX regv1_multi_col ON regv1 USING btree (name.first, name.middle, name.last)
(1 row)

DROP PROPERTY INDEX regv1_multi_col;
CREATE PROPERTY INDEX regv1_multi_expr ON regv1 ((name.first + name.last), age);
\dGv+ regv1
                         List of labels
 Graph | Name  |  Type  |    Owner    |    Size    | Description 
-------+-------+--------+-------------+------------+-------------
 g     | regv1 | vertex | regressrole | 8192 bytes | 
(1 row)

Vertex label "g.regv1"
--
Property Indexes:
    "regv1_multi_expr" btree (((name.first) + (name.last)), age)
Inherits: g.ag_vertex

\dGi
                                                                   List of property indexes
 Graph | LabelName |    IndexName     | Unique |    Owner    |                                            Indexdef                                             
-------+-----------+------------------+--------+-------------+-------------------------------------------------------------------------------------------------
 g     | regv1     | regv1_multi_expr | f      | regressrole | CREATE PROPERTY INDEX regv1_multi_expr ON regv1 USING btree (((name.first) + (name.last)), age)
(1 row)

DROP PROPERTY INDEX regv1_multi_expr;
DROP VLABEL regv1;
-- wrong case
CREATE VLABEL regv2;
CREATE PROPERTY INDEX regv2_index_key1 ON regv2 (key1);
CREATE PROPERTY INDEX regv2_index_key1 ON regv2 (key1);
ERROR:  relation "regv2_index_key1" already exists
CREATE PROPERTY INDEX ON nonexsist_name (key1);
ERROR:  label "nonexsist_name" does not exist
DROP VLABEL regv2;
CREATE VLABEL regv3;
CREATE PROPERTY INDEX regv3_property_index_key1 ON regv3 (key1);
DROP INDEX g.regv3_property_index_key1;
ERROR:  "regv3_property_index_key1" is property index
CREATE INDEX regv3_index_key1 ON g.regv3 (properties);
DROP PROPERTY INDEX regv3_index_key1;
ERROR:  "regv3_index_key1" is not property index
DROP VLABEL regv3;
--
-- DROP GRAPH
--
DROP GRAPH g CASCADE;
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to sequence g.ag_label_seq
drop cascades to vlabel ag_vertex
drop cascades to elabel ag_edge
RESET ROLE;
DROP ROLE regressrole;
