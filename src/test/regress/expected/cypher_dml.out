--
-- Cypher Query Language - DML
--
-- prepare
DROP TABLE IF EXISTS history;
NOTICE:  table "history" does not exist, skipping
CREATE TABLE history (year, event) AS VALUES
(1996, 'PostgreSQL'),
(2016, 'Graph');
DROP GRAPH agens;
ERROR:  graph "agens" does not exist
CREATE GRAPH agens;
--
-- RETURN
--
RETURN 3 + 4, 'hello' || ' agens';
 ?column? |  ?column?   
----------+-------------
        7 | hello agens
(1 row)

RETURN 3 + 4 AS lucky, 'hello' || ' agens' AS greeting;
 lucky |  greeting   
-------+-------------
     7 | hello agens
(1 row)

RETURN (SELECT event FROM history WHERE year = 2016);
 event 
-------
 Graph
(1 row)

SELECT * FROM (RETURN 3 + 4, 'hello' || ' agens') AS _(lucky, greeting);
 lucky |  greeting   
-------+-------------
     7 | hello agens
(1 row)

--
-- CREATE
--
CREATE VLABEL repo;
CREATE ELABEL lib;
CREATE ELABEL doc;
CREATE (g:repo {'name': 'agens-graph',
                'year': (SELECT year FROM history WHERE event = 'Graph')})
RETURN properties(g) AS g;
                   g                   
---------------------------------------
 {"name": "agens-graph", "year": 2016}
(1 row)

MATCH (g:repo)
CREATE (j:repo '{"name": "agens-graph-jdbc", "year": 2016}'),
       (d:repo =jsonb_build_object('name', 'agens-graph-docs', 'year', 2016))
CREATE (g)-[l:lib {'lang': 'java'}]->(j),
       p=(g)
         -[:lib {'lang': 'c'}]->
         (:repo {'name': 'agens-graph-odbc', 'year': 2016}),
       (g)-[e:doc {'lang': 'en'}]->(d)
RETURN properties(l) AS lj, properties(j) AS j,
       properties((edges(p))[1]) AS lc, properties((vertices(p))[2]) AS c,
       properties(e) AS e, properties(d) AS d;
        lj        |                     j                      |      lc       |                     c                      |       e        |                     d                      
------------------+--------------------------------------------+---------------+--------------------------------------------+----------------+--------------------------------------------
 {"lang": "java"} | {"name": "agens-graph-jdbc", "year": 2016} | {"lang": "c"} | {"name": "agens-graph-odbc", "year": 2016} | {"lang": "en"} | {"name": "agens-graph-docs", "year": 2016}
(1 row)

CREATE ()-[a:r]->(a);
ERROR:  duplicate variable "a"
LINE 1: CREATE ()-[a:r]->(a);
                          ^
CREATE a=(), (a);
ERROR:  duplicate variable "a"
LINE 1: CREATE a=(), (a);
                      ^
CREATE (a), (a {});
ERROR:  duplicate variable "a"
LINE 1: CREATE (a), (a {});
                     ^
CREATE (a), (a);
ERROR:  there must be at least one relationship
LINE 1: CREATE (a), (a);
                     ^
CREATE (=0);
ERROR:  property map must be jsonb type
LINE 1: CREATE (=0);
                 ^
CREATE ()-[]-();
ERROR:  only directed relationships are allowed in CREATE
CREATE ()-[]->();
ERROR:  only one relationship type is allowed for CREATE
CREATE ()-[:r|z]->();
ERROR:  only one relationship type is allowed for CREATE
CREATE (a)-[a:r]->();
ERROR:  duplicate variable "a"
LINE 1: CREATE (a)-[a:r]->();
                    ^
CREATE ()-[a:r]->()-[a:z]->();
ERROR:  duplicate variable "a"
LINE 1: CREATE ()-[a:r]->()-[a:z]->();
                             ^
CREATE a=(), ()-[a:z]->();
ERROR:  duplicate variable "a"
LINE 1: CREATE a=(), ()-[a:z]->();
                         ^
CREATE ()-[:r =0]->();
ERROR:  property map must be jsonb type
LINE 1: CREATE ()-[:r =0]->();
                       ^
CREATE (a), a=();
ERROR:  duplicate variable "a"
LINE 1: CREATE (a), a=();
                    ^
CREATE ()-[a:r]->(), a=();
ERROR:  duplicate variable "a"
LINE 1: CREATE ()-[a:r]->(), a=();
                             ^
CREATE a=(), a=();
ERROR:  duplicate variable "a"
LINE 1: CREATE a=(), a=();
                     ^
--
-- MATCH
--
MATCH (a) RETURN (a).name AS a;
         a          
--------------------
 "agens-graph"
 "agens-graph-jdbc"
 "agens-graph-docs"
 "agens-graph-odbc"
(4 rows)

MATCH (a), (a) RETURN (a).name AS a;
         a          
--------------------
 "agens-graph"
 "agens-graph-jdbc"
 "agens-graph-docs"
 "agens-graph-odbc"
(4 rows)

CREATE ();
MATCH (a:repo) RETURN (a).name AS name, (a)['year'] AS year;
        name        | year 
--------------------+------
 "agens-graph"      | 2016
 "agens-graph-jdbc" | 2016
 "agens-graph-docs" | 2016
 "agens-graph-odbc" | 2016
(4 rows)

MATCH p=(a)-[b]-(c)
RETURN (a).name AS a, (b).lang AS b, (c).name AS c
       ORDER BY a, b, c;
         a          |   b    |         c          
--------------------+--------+--------------------
 "agens-graph"      | "c"    | "agens-graph-odbc"
 "agens-graph"      | "en"   | "agens-graph-docs"
 "agens-graph"      | "java" | "agens-graph-jdbc"
 "agens-graph-docs" | "en"   | "agens-graph"
 "agens-graph-jdbc" | "java" | "agens-graph"
 "agens-graph-odbc" | "c"    | "agens-graph"
(6 rows)

MATCH (a)<-[b]-(c)-[d]->(e)
RETURN (a).name AS a, (b).lang AS b, (c).name AS c,
       (d).lang AS d, (e).name AS e
       ORDER BY a, b, c, d, e;
         a          |   b    |       c       |   d    |         e          
--------------------+--------+---------------+--------+--------------------
 "agens-graph-docs" | "en"   | "agens-graph" | "c"    | "agens-graph-odbc"
 "agens-graph-docs" | "en"   | "agens-graph" | "java" | "agens-graph-jdbc"
 "agens-graph-jdbc" | "java" | "agens-graph" | "c"    | "agens-graph-odbc"
 "agens-graph-jdbc" | "java" | "agens-graph" | "en"   | "agens-graph-docs"
 "agens-graph-odbc" | "c"    | "agens-graph" | "en"   | "agens-graph-docs"
 "agens-graph-odbc" | "c"    | "agens-graph" | "java" | "agens-graph-jdbc"
(6 rows)

MATCH (a)<-[b]-(c), (c)-[d]->(e)
RETURN (a).name AS a, (b).lang AS b, (c).name AS c,
       (d).lang AS d, (e).name AS e
       ORDER BY a, b, c, d, e;
         a          |   b    |       c       |   d    |         e          
--------------------+--------+---------------+--------+--------------------
 "agens-graph-docs" | "en"   | "agens-graph" | "c"    | "agens-graph-odbc"
 "agens-graph-docs" | "en"   | "agens-graph" | "java" | "agens-graph-jdbc"
 "agens-graph-jdbc" | "java" | "agens-graph" | "c"    | "agens-graph-odbc"
 "agens-graph-jdbc" | "java" | "agens-graph" | "en"   | "agens-graph-docs"
 "agens-graph-odbc" | "c"    | "agens-graph" | "en"   | "agens-graph-docs"
 "agens-graph-odbc" | "c"    | "agens-graph" | "java" | "agens-graph-jdbc"
(6 rows)

MATCH (a)<-[b]-(c) MATCH (c)-[d]->(e)
RETURN (a).name AS a, (b).lang AS b, (c).name AS c,
       (d).lang AS d, (e).name AS e
       ORDER BY a, b, c, d, e;
         a          |   b    |       c       |   d    |         e          
--------------------+--------+---------------+--------+--------------------
 "agens-graph-docs" | "en"   | "agens-graph" | "c"    | "agens-graph-odbc"
 "agens-graph-docs" | "en"   | "agens-graph" | "en"   | "agens-graph-docs"
 "agens-graph-docs" | "en"   | "agens-graph" | "java" | "agens-graph-jdbc"
 "agens-graph-jdbc" | "java" | "agens-graph" | "c"    | "agens-graph-odbc"
 "agens-graph-jdbc" | "java" | "agens-graph" | "en"   | "agens-graph-docs"
 "agens-graph-jdbc" | "java" | "agens-graph" | "java" | "agens-graph-jdbc"
 "agens-graph-odbc" | "c"    | "agens-graph" | "c"    | "agens-graph-odbc"
 "agens-graph-odbc" | "c"    | "agens-graph" | "en"   | "agens-graph-docs"
 "agens-graph-odbc" | "c"    | "agens-graph" | "java" | "agens-graph-jdbc"
(9 rows)

MATCH (a)<-[b]-(c), (f)-[g]->(h), (c)-[d]->(e)
RETURN (a).name AS a, (b).lang AS b, (c).name AS c,
       (d).lang AS d, (e).name AS e,
       (f).name AS f, (g).lang AS g, (h).name AS h
       ORDER BY a, b, c, d, e, f, g, h;
         a          |   b    |       c       |   d    |         e          |       f       |   g    |         h          
--------------------+--------+---------------+--------+--------------------+---------------+--------+--------------------
 "agens-graph-docs" | "en"   | "agens-graph" | "c"    | "agens-graph-odbc" | "agens-graph" | "c"    | "agens-graph-odbc"
 "agens-graph-docs" | "en"   | "agens-graph" | "c"    | "agens-graph-odbc" | "agens-graph" | "en"   | "agens-graph-docs"
 "agens-graph-docs" | "en"   | "agens-graph" | "c"    | "agens-graph-odbc" | "agens-graph" | "java" | "agens-graph-jdbc"
 "agens-graph-docs" | "en"   | "agens-graph" | "java" | "agens-graph-jdbc" | "agens-graph" | "c"    | "agens-graph-odbc"
 "agens-graph-docs" | "en"   | "agens-graph" | "java" | "agens-graph-jdbc" | "agens-graph" | "en"   | "agens-graph-docs"
 "agens-graph-docs" | "en"   | "agens-graph" | "java" | "agens-graph-jdbc" | "agens-graph" | "java" | "agens-graph-jdbc"
 "agens-graph-jdbc" | "java" | "agens-graph" | "c"    | "agens-graph-odbc" | "agens-graph" | "c"    | "agens-graph-odbc"
 "agens-graph-jdbc" | "java" | "agens-graph" | "c"    | "agens-graph-odbc" | "agens-graph" | "en"   | "agens-graph-docs"
 "agens-graph-jdbc" | "java" | "agens-graph" | "c"    | "agens-graph-odbc" | "agens-graph" | "java" | "agens-graph-jdbc"
 "agens-graph-jdbc" | "java" | "agens-graph" | "en"   | "agens-graph-docs" | "agens-graph" | "c"    | "agens-graph-odbc"
 "agens-graph-jdbc" | "java" | "agens-graph" | "en"   | "agens-graph-docs" | "agens-graph" | "en"   | "agens-graph-docs"
 "agens-graph-jdbc" | "java" | "agens-graph" | "en"   | "agens-graph-docs" | "agens-graph" | "java" | "agens-graph-jdbc"
 "agens-graph-odbc" | "c"    | "agens-graph" | "en"   | "agens-graph-docs" | "agens-graph" | "c"    | "agens-graph-odbc"
 "agens-graph-odbc" | "c"    | "agens-graph" | "en"   | "agens-graph-docs" | "agens-graph" | "en"   | "agens-graph-docs"
 "agens-graph-odbc" | "c"    | "agens-graph" | "en"   | "agens-graph-docs" | "agens-graph" | "java" | "agens-graph-jdbc"
 "agens-graph-odbc" | "c"    | "agens-graph" | "java" | "agens-graph-jdbc" | "agens-graph" | "c"    | "agens-graph-odbc"
 "agens-graph-odbc" | "c"    | "agens-graph" | "java" | "agens-graph-jdbc" | "agens-graph" | "en"   | "agens-graph-docs"
 "agens-graph-odbc" | "c"    | "agens-graph" | "java" | "agens-graph-jdbc" | "agens-graph" | "java" | "agens-graph-jdbc"
(18 rows)

MATCH (a {'name': 'agens-graph'}), (a {'year': 2016}) RETURN properties(a) AS a;
                   a                   
---------------------------------------
 {"name": "agens-graph", "year": 2016}
(1 row)

MATCH p=(a)-[]->({'name': 'agens-graph-jdbc'}) RETURN (a).name AS a;
       a       
---------------
 "agens-graph"
(1 row)

MATCH p=()-[:lib]->(a) RETURN (a).name AS a;
         a          
--------------------
 "agens-graph-jdbc"
 "agens-graph-odbc"
(2 rows)

MATCH p=()-[{'lang': 'en'}]->(a) RETURN (a).name AS a;
         a          
--------------------
 "agens-graph-docs"
(1 row)

MATCH (a {'year': (SELECT year FROM history WHERE event = 'Graph')})
WHERE (a).name = '"agens-graph"'
RETURN (a).name AS a;
       a       
---------------
 "agens-graph"
(1 row)

MATCH ();
ERROR:  Cypher query must end with RETURN or update clause
MATCH (a), (a:repo) RETURN *;
ERROR:  label conflict on node "a"
MATCH ()-[a]-(), (a) RETURN *;
ERROR:  duplicate variable "a"
LINE 1: MATCH ()-[a]-(), (a) RETURN *;
                          ^
MATCH a=(), (a) RETURN *;
ERROR:  duplicate variable "a"
LINE 1: MATCH a=(), (a) RETURN *;
                     ^
MATCH (a =0) RETURN *;
ERROR:  property map must be jsonb type
LINE 1: MATCH (a =0) RETURN *;
                  ^
MATCH ()-[a]-(a) RETURN *;
ERROR:  duplicate variable "a"
LINE 1: MATCH ()-[a]-(a) RETURN *;
                      ^
MATCH ()-[a]-()-[a]-() RETURN *;
ERROR:  duplicate variable "a"
LINE 1: MATCH ()-[a]-()-[a]-() RETURN *;
                         ^
MATCH a=(), ()-[a]-() RETURN *;
ERROR:  duplicate variable "a"
LINE 1: MATCH a=(), ()-[a]-() RETURN *;
                        ^
MATCH p=()-[:lib|doc]->() RETURN *;
ERROR:  multiple types for relationship not supported
MATCH ()-[a =0]-() RETURN *;
ERROR:  property map must be jsonb type
LINE 1: MATCH ()-[a =0]-() RETURN *;
                     ^
MATCH (a), a=() RETURN *;
ERROR:  duplicate variable "a"
LINE 1: MATCH (a), a=() RETURN *;
                   ^
MATCH ()-[a]->(), a=() RETURN *;
ERROR:  duplicate variable "a"
LINE 1: MATCH ()-[a]->(), a=() RETURN *;
                          ^
MATCH a=(), a=() RETURN *;
ERROR:  duplicate variable "a"
LINE 1: MATCH a=(), a=() RETURN *;
                    ^
MATCH (a {'name': properties->'name'}) RETURN *;
ERROR:  column "properties" does not exist
LINE 1: MATCH (a {'name': properties->'name'}) RETURN *;
                          ^
HINT:  There is a column named "properties" in table "a", but it cannot be referenced from this part of the query.
MATCH (a {'name': a.properties->'name'}) RETURN *;
ERROR:  invalid reference to FROM-clause entry for table "a"
LINE 1: MATCH (a {'name': a.properties->'name'}) RETURN *;
                          ^
HINT:  There is an entry for table "a", but it cannot be referenced from this part of the query.
--
-- DISTINCT
--
MATCH (a:repo)-[]-() RETURN DISTINCT (a).name AS a;
         a          
--------------------
 "agens-graph-odbc"
 "agens-graph"
 "agens-graph-docs"
 "agens-graph-jdbc"
(4 rows)

MATCH (a:repo)-[b]-(c)
RETURN DISTINCT ON (a) (a).name AS a, (b).lang AS b, (c).name AS c;
         a          |   b    |         c          
--------------------+--------+--------------------
 "agens-graph"      | "java" | "agens-graph-jdbc"
 "agens-graph-docs" | "en"   | "agens-graph"
 "agens-graph-jdbc" | "java" | "agens-graph"
 "agens-graph-odbc" | "c"    | "agens-graph"
(4 rows)

--
-- ORDER BY
--
MATCH (a:repo) RETURN (a).name AS a ORDER BY a;
         a          
--------------------
 "agens-graph"
 "agens-graph-docs"
 "agens-graph-jdbc"
 "agens-graph-odbc"
(4 rows)

MATCH (a:repo) RETURN (a).name AS a ORDER BY a ASC;
         a          
--------------------
 "agens-graph"
 "agens-graph-docs"
 "agens-graph-jdbc"
 "agens-graph-odbc"
(4 rows)

MATCH (a:repo) RETURN (a).name AS a ORDER BY a DESC;
         a          
--------------------
 "agens-graph-odbc"
 "agens-graph-jdbc"
 "agens-graph-docs"
 "agens-graph"
(4 rows)

--
-- SKIP and LIMIT
--
MATCH (a:repo) RETURN (a).name AS a ORDER BY a SKIP 1 LIMIT 1;
         a          
--------------------
 "agens-graph-docs"
(1 row)

--
-- WITH
--
MATCH (a:repo) WITH (a).name AS name RETURN name;
        name        
--------------------
 "agens-graph"
 "agens-graph-jdbc"
 "agens-graph-docs"
 "agens-graph-odbc"
(4 rows)

MATCH (a)
WITH a WHERE label(a) = 'repo'
MATCH p=(a)-[]->(b)
RETURN (b).name AS b ORDER BY b;
         b          
--------------------
 "agens-graph-docs"
 "agens-graph-jdbc"
 "agens-graph-odbc"
(3 rows)

MATCH (a) WITH a RETURN b;
ERROR:  column "b" does not exist
LINE 1: MATCH (a) WITH a RETURN b;
                                ^
MATCH (a) WITH (a).name RETURN *;
ERROR:  expression in WITH must be aliased (use AS)
MATCH () WITH a AS z RETURN a;
ERROR:  column "a" does not exist
LINE 1: MATCH () WITH a AS z RETURN a;
                      ^
--
-- UNION
--
MATCH (a:repo)
RETURN (a).name AS a
UNION ALL
MATCH (b:lib)
RETURN (b).lang AS b
UNION ALL
MATCH (c:doc)
RETURN (c).lang AS c;
         a          
--------------------
 "agens-graph"
 "agens-graph-jdbc"
 "agens-graph-docs"
 "agens-graph-odbc"
 "java"
 "c"
 "en"
(7 rows)

MATCH (a)
RETURN a
UNION
MATCH (b)
RETURN (b).name;
ERROR:  UNION types vertex and jsonb cannot be matched
--
-- aggregates
--
MATCH (a)-[]-(b) RETURN count(a) AS a, (b).name AS b ORDER BY a;
 a |         b          
---+--------------------
 1 | "agens-graph-jdbc"
 1 | "agens-graph-docs"
 1 | "agens-graph-odbc"
 3 | "agens-graph"
(4 rows)

--
-- EXISTS
--
MATCH (a:repo) WHERE exists((a)-[]->()) RETURN (a).name AS a;
       a       
---------------
 "agens-graph"
(1 row)

--
-- SIZE
--
MATCH (a:repo) RETURN (a).name AS a, size((a)-[]->()) AS s;
         a          | s 
--------------------+---
 "agens-graph"      | 3
 "agens-graph-jdbc" | 0
 "agens-graph-docs" | 0
 "agens-graph-odbc" | 0
(4 rows)

--
-- LOAD
--
MATCH (a) LOAD FROM history AS a RETURN *;
ERROR:  duplicate variable "a"
CREATE VLABEL feature;
CREATE ELABEL supported;
MATCH (a:repo {'name': 'agens-graph'})
LOAD FROM history AS h
CREATE (:feature {'name': (h).event})-[:supported]->(a);
MATCH p=(a)-[:supported]->() RETURN properties(a) AS a;
           a            
------------------------
 {"name": "PostgreSQL"}
 {"name": "Graph"}
(2 rows)

--
-- DELETE
--
MATCH (a) DELETE a;
ERROR:  vertex 1 in "repo" has edge(s)
MATCH p=()-[:lib]->() DETACH DELETE (vertices(p))[2];
MATCH (a:repo) RETURN (a).name AS a;
         a          
--------------------
 "agens-graph"
 "agens-graph-docs"
(2 rows)

MATCH ()-[a:doc]->() DETACH DELETE end_vertex(a);
MATCH (a:repo) RETURN (a).name AS a;
       a       
---------------
 "agens-graph"
(1 row)

MATCH (a) DETACH DELETE a;
MATCH (a) RETURN a;
 a 
---
(0 rows)

SELECT count(*) FROM agens.ag_edge;
 count 
-------
     0
(1 row)

--
-- Uniqueness
--
CREATE GRAPH u;
SET graph_path = u;
CREATE ELABEL rel;
CREATE (s {'id': 1})-[:rel {'p': 'a'}]->({'id': 2})-[:rel {'p': 'b'}]->(s);
MATCH (s)-[r1]-(m)-[r2]-(x)
RETURN (s).id AS s, (r1).p AS r1, (m).id AS m, (r2).p AS r2, (x).id AS x
       ORDER BY s, r1, m, r2, x;
 s | r1  | m | r2  | x 
---+-----+---+-----+---
 1 | "a" | 2 | "b" | 1
 1 | "b" | 2 | "a" | 1
 2 | "a" | 1 | "b" | 2
 2 | "b" | 1 | "a" | 2
(4 rows)

-- cleanup
DROP GRAPH u CASCADE;
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to label ag_vertex
drop cascades to label ag_edge
drop cascades to label rel
SET graph_path = agens;
DROP VLABEL feature;
DROP ELABEL supported;
DROP VLABEL repo;
DROP ELABEL lib;
DROP ELABEL doc;
DROP GRAPH agens CASCADE;
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to label ag_vertex
drop cascades to label ag_edge
DROP TABLE history;
